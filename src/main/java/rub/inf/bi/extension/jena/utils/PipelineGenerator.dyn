{
  "Uuid": "8b1e7f7f-7304-4d5e-a570-fd8ce7ff620e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "PipelineGenerator",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\nnamespaces = dataEnteringNode[0]\r\ninserts = dataEnteringNode[1]\r\n\r\n# open RDF header\r\nrdfStr = \"<rdf:RDF\";\r\n\r\n# handle Namespaces\r\nfor key in namespaces:\r\n    rdfStr += \" xmlns:\" + key + \"='\" + namespaces[key] + \"'\";\r\n\r\nrdfStr += \">\";\r\n\r\n#add inserts\r\n\r\nrdfStr += \"<rdf:Description rdf:about='my:\" + \"RootModel\" + \"'>\";\r\n\r\nfor insert in inserts:\r\n    rdfStr += insert;\r\n\r\nrdfStr += \"</rdf:Description>\"\r\n\r\n# close RDF header\r\nrdfStr += \"</rdf:RDF>\"\r\n\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nOUT = rdfStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e00054a13da24212ab4540997633798f",
      "Inputs": [
        {
          "Id": "4662dbdc67f64d9eaa25bb84b6cf3169",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf83e6357a44ed88c6b44b3703edca8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4c68ed56fdd401c858255578208df3b",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "55e5541613984633bd3985a301a6f2f0",
      "Inputs": [
        {
          "Id": "df6bd6c740bd4c5aa0dad6bc110ad43c",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6f0f1e62fef44aeb70b601c869d460c",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.FileExists@string",
      "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
      "Inputs": [
        {
          "Id": "949291cdd50249a388dcd7b15fdc6e59",
          "Name": "path",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e6a623c31214ec7a86d96dce9d36894",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if a file exists at the given path.\n\nFileSystem.FileExists (path: string): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\target\\classes\\rdf\\query_result.xml",
      "InputValue": "..\\Workspace\\ExtendingJena\\target\\classes\\rdf\\query_result.xml",
      "NodeType": "ExtensionNode",
      "Id": "963c470715ed4f5b815704780b1b964a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0eba4e25d56d42f99f6cd7d1d4848abe",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aef00e0d9cbc4c89bc624f16784d0389",
      "Inputs": [
        {
          "Id": "3dd15c6a7ab447d2bb0a1ceb5546319b",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport ctypes\r\nimport xml.etree.ElementTree as ET\r\nsys.path.append(r\"C:\\Users\\nobita_yhe\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom xml.dom.minidom import parse, parseString\r\n\r\ndir = \"r'C:\\\\Users\\\\nobita_yhe\\\\Workspace\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\rdf\\\\query_result.xml'\"\r\n#dir = r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml'\r\nwarn_str = 'File or File Path does not exist.'\r\nres = ''\r\n\r\ndef xmlParsing2Uri(path=dir):\r\n    \"\"\" it returns the list in structure like [[uri1, uri2],...,[uri1, uri2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    \r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                ur_lst.append(ur.childNodes[0].nodeValue)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\n\r\ndef xml2GeometryString(path=dir):\r\n    \"\"\" it returns the list in structure like [[Geomety1, Geomety2],...,[Geomety1, Geomety2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    seperator = '#'\r\n\r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                uri_str = ur.childNodes[0].nodeValue\r\n                geo_index = uri_str.find(seperator) \r\n                geo_str = uri_str[geo_index+1:]\r\n                ur_lst.append(geo_str)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\ndef xml2GeoInDynamo(path=dir):\r\n    with open(r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml', 'r', encoding='utf-8') as file:\r\n        xml_data = file.read()\r\n        dom = parseString(xml_data)\r\n        #dom = parse(xml_data)\r\n        data = dom.documentElement\r\n        resList = data.getElementsByTagName('result')\r\n        seperator = '#'\r\n        \r\n        res_lst = []\r\n        for res in resList: # handle the <result>...</result>\r\n            ur_lst = []\r\n            for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n                for ur in bi.getElementsByTagName('uri'):\r\n                    uri_str = ur.childNodes[0].nodeValue\r\n                    geo_index = uri_str.find(seperator) \r\n                    geo_str = uri_str[geo_index+1:]\r\n                    ur_lst.append(geo_str)\r\n            res_lst.append(ur_lst)\r\n            ur_lst = []\r\n    return res_lst\r\n    \r\n   \r\n\r\nif IN[0] == True:\r\n\tdir = IN[1]\r\n\tres = xml2GeoInDynamo(dir)\r\nelse:\r\n\tctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\tres = warn_str\r\n\t\r\n# Assign your output to the OUT variable.\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3caf2c5d39a14bb8a8d117a845916766",
      "Inputs": [
        {
          "Id": "77bc87c15e0546b0a908a7568c2c03bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad16ba208c4a435eb9c34e51e4bb261f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bbd33f439eb4c1ea76d5b4863a65de8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\nINDEX_EN = ['A','B','C','D'];\r\nINDEX_NUM = ['1','2','3','4'];\r\nINDEX = [];\r\n\r\nif IN[2] == \"EN\":\r\n    INDEX = INDEX_EN\r\nif IN[2] == \"NUM\":\r\n    INDEX = INDEX_NUM\r\n\"\"\"\r\n# Place your code below this line\r\ndef name_concatenation(geo_name:str, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n \r\n    geo_concat = [geo_name + index[i] for i in range(geo_number)]\r\n    return geo_concat\r\n\r\ndef name_lst_concatenation(geo_name_lst:list, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n    \r\n    geo_concat = [[geo_name + index[i] for i in range(geo_number)] for geo_name in geo_name_lst]\r\n    return geo_concat\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif isinstance(IN[0], str):\r\n    OUT = name_concatenation(IN[0], IN[1])\r\nelse:\r\n    OUT = name_lst_concatenation(IN[0], IN[1])\r\n\"\"\"\r\nOUT = \"\"",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5ca528b4d9f4975bf11edd564038195",
      "Inputs": [
        {
          "Id": "57a2238033c24b7383d6cfe1176f6768",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73aea16d17b4d98b03e2e682d83d9fe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab031f3cf0f84f0dbda06b2acc56dae0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2769ba043845426fba267cb4438486f4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2+6,-1);\np2 = Point.ByCoordinates(5,0);\n// Line1\nline1S = Point.ByCoordinates(0,0,1.5);\nline1E = Point.ByCoordinates(3,0,-1);\nline1 = [line1S, line2E];\n// Line2\nline2S = Point.ByCoordinates(8,-1,0);\nline2E = Point.ByCoordinates(0,6,0);\nline2 = [line2S, line2E];",
      "Id": "8cc6c1fb61484b86bab82908655d3df0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c3a6660f77045dd99f3bc21219ad954",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cea2fb6566f343f68c7a3ea90453c72f",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08503e6e57f74f63b152b42860f8624f",
          "Name": "",
          "Description": "line1S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d30e10a7e7e481ab665572d648d7c35",
          "Name": "",
          "Description": "line1E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db41a433d0e847509a826ae54391edbd",
          "Name": "",
          "Description": "line1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94b72f51a29f44adb592f49fe2497f2b",
          "Name": "",
          "Description": "line2S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c440bb5651c44f66b8a467cb2b11d84a",
          "Name": "",
          "Description": "line2E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3b9a18de5b64fc39741e10ad451bbd8",
          "Name": "",
          "Description": "line2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2+6+2,-1,0);\np2 = Point.ByCoordinates(2+6+2,1,0);\np3 = Point.ByCoordinates(0+6+2,1,0);\np4 = Point.ByCoordinates(0+6+2,-1,0);\n//p5 = Point.ByCoordinates(2+6,-1,6);\np = [p1,p2,p3,p4];",
      "Id": "ff616aa35b194fbfa265d2a312b357bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcce7991b9da4597845fad1aa5c02f31",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb53634bd6e04294ba809a2f17c361b0",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae59f7b5e8f342b2baf747b77de8767d",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3eacc0ce2e9243dc8ba453afa2c86605",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9289b0f229084a5db42cca89e6cc8024",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(4,0,6);\np2 = Point.ByCoordinates(4,4,6);\np3 = Point.ByCoordinates(0,4,6);\np4 = Point.ByCoordinates(0,0,6);\np5 = Point.ByCoordinates(4,0,6);\np = [p1,p2,p3,p4];",
      "Id": "20f595b21050444cad303c1015c8207f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "886ec992c62f4ecd8a2aad20a3cc6ffe",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "333e69dcc1fc44bc8ecd4141c1c4b0a1",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d788c123e343a9836e7fde5cc7bbf6",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d532e4cba824af080bd7fa876e77241",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24193d9509264f438601004cd6bc3d07",
          "Name": "",
          "Description": "p5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49a00bc6cc3e486d8527080df8974444",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nowl=\"http://www.w3.org/2002/07/owl#\";\nogc=\"http://www.opengis.net/\";\nmy=\"https://www.inf.bi.ruhr-uni-bochum.de/jena/#\";\ngml=\"http://www.opengis.net/ont/gml#\";\ngeo=\"http://www.opengis.net/ont/geosparql#\";\ngeof=\"http://www.opengis.net/def/function/geosparql/\";\nrdfs=\"http://www.w3.org/2000/01/rdf-schema#\";\nuom=\"http://www.opengis.net/def/uom/OGC/1.0/\";\nsf=\"http://www.opengis.net/ont/sf#\";\nxsd=\"http://www.w3.org/2001/XMLSchema#\";\ngeor=\"http://www.opengis.net/def/rule/geosparql/\";\n\nnamespaces = {\n\t\"rdf\" : rdf,\n\t\"owl\" : owl,\n\t\"ogc\" : ogc,\n\t\"my\" : my,\n\t\"gml\" : gml,\n\t\"geo\" : geo,\n\t\"geof\": geof,\n\t\"rdfs\": rdfs,\n\t\"uom\": uom,\n\t\"sf\": sf,\n\t\"xsd\": xsd,\n\t\"geor\": geor\n};",
      "Id": "94e1fb21689642b9b5fa86b874146ae5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14a74a6721ba4b4c96b29ec99ab36dd3",
          "Name": "",
          "Description": "rdf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbd7738a74ab46dfa91132fe2fe0748e",
          "Name": "",
          "Description": "owl",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdeda2f4aec14f54b8c91f0d5151f728",
          "Name": "",
          "Description": "ogc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5640c36aa874fb99957c7fbfc97bd6e",
          "Name": "",
          "Description": "my",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ab868b2ecc44e99c2b667f608ed4ca",
          "Name": "",
          "Description": "gml",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8fce02e7523459b989de8e70c67fbe7",
          "Name": "",
          "Description": "geo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa9fcf8f6cb5400ca3d6a2683eafb96f",
          "Name": "",
          "Description": "geof",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "158a4084313d45e69676af0810e305ce",
          "Name": "",
          "Description": "rdfs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff95c2f9c259443cb522b3e66ed0cbbf",
          "Name": "",
          "Description": "uom",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1c251b87b364adebb7dee3182eb24b9",
          "Name": "",
          "Description": "sf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "152f1a91a3f14e599e6aae3fcc003c35",
          "Name": "",
          "Description": "xsd",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91cf56785daa4c408af3ee4dca001e59",
          "Name": "",
          "Description": "geor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3079abf98a7148b6962e2e0267973632",
          "Name": "",
          "Description": "namespaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "8e0e97ac-4563-4934-8ae8-f407ab7fb7ce Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "8e0e97ac456349348ae8f407ab7fb7ce",
      "Inputs": [
        {
          "Id": "59cd2113c3a84201972447f762f4d06f",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31e73eeff94b493fa46fe7ba29cfd59e",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\example.rdf",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\rdf\\example.rdf",
      "NodeType": "ExtensionNode",
      "Id": "c35aef94b79f494486311eadd2b8352d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd06b513d42a4ec5a2267a0de6b95808",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "bc6e3de400aa462da2f128593313d246",
      "Inputs": [
        {
          "Id": "e0b36f25ff0a43feab340b908c2720e4",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f433e359e584c96b5cd746da1837256",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1910f40416c94ea289b943413a397a63",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5b34801b03bf4e0290214b4c52894850",
      "Inputs": [
        {
          "Id": "42915191fa9e411da75814f63335e81c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71e557c3927646778b6c4cfc2e1523e4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "935a678206df4d0ab3fcb92690a97b46",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee765cd3c18344a3aca7874845aee6b1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 255,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "b714a12042164093bebad72997dbaf06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4978c6c037cc47f18f293d2e287a9fc9",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fa87b26c82a8488b888bd68e66796f2a",
      "Inputs": [
        {
          "Id": "8f782d14e05842bf950e089df4756d1a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b354cda0dfe34d6c8a49e9a74ddbf7f7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ef20f12a3e84a1ba41f1a346b2a1d16",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e9ad885b7e2845d3b44873e888a7be38",
      "Inputs": [
        {
          "Id": "599198b6a4784e43a03aa6d927630812",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27939742b45246aea1aa77fb3007133b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "058e873801cb4821b061b4b2fed0f5b7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe9f9b9d604e448bb929e13a8b6eac0f",
      "Inputs": [
        {
          "Id": "53000e9398e4440aaeff2b1947c9536b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11c480b0bd9b4c12ab6edc5afab31e5c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8789f690d0fb4d4ea09962f50d1af2d8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1df51be173274ce583cf70b7987b356d",
      "Inputs": [
        {
          "Id": "08d637beb7f44745968098ad801f7bcd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cb94fe3480c471bab4364ef5abedf5d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9e178ae93e64c0a8da12b138d79da37",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e7c2b58156c0432f8ebc24618c2f8e0e",
      "Inputs": [
        {
          "Id": "56746e9369564afe9b2d91274d0febc5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acd41a39164246878a61a17134e60aca",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06eee4082ef1498b9077ab77abefe8a1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d816a2d3c88e4876baa161a90f11a416",
      "Inputs": [
        {
          "Id": "203ae1d29d8f4c1a95e964baddbf4701",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61bb6a1bf78641b28657f9cf8c3fd969",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "195518c28b114e62b18d4e0070eaf4c7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb07da86db734600be0f078466535df2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n#else:\r\n#    o = geom\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "43c394e8ed6a49e08743c025d5fde3fc",
      "Inputs": [
        {
          "Id": "1bddaf911be1401ab475a828ef760c26",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ebe7601e0d64625a1e74a83c5e10bb2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd8d36c918ef41d590260075e675f70c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25db36f9776f4d489bb96cc62118bbfc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad18b37dc3c14625bbfacef86803868b",
      "Inputs": [
        {
          "Id": "d58a465620f14ccebf2f1db08763f2ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6c7a8703503455da3547336e6a3e8bf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "208a7ca84f3d4846b00a515259a1f55c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2db22f83dbe143569e2457d82993c7da",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "41f46af230dc407c854a0bb264db0f58",
      "Inputs": [
        {
          "Id": "e9ed3926112e46ff8b2171289274241c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95a75c96b8a54f65a788c59cc5e3c6f9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8d0be1e622d4af39354070a3eff6466",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad6ea306939b40809e4969faaff8a7a9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4aa5aca4c9d245ce95df137be708a5e7",
      "Inputs": [
        {
          "Id": "900f2a08ee5e4ce386b7bbcb4523deef",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61b6ae7ba5b542d6888769993e6a6b3d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6af2b7a021d4d9c8d7871a16d248560",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13ebefd1b3c244cab6db4dfd4996bcea",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbcc9f3830624c75bf3a2accb5c79c24",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e0e8ab901624d46907eeb882ebab300",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88eb910c87b448f69f1194d97f49e372",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9116484351f45579a2f99d2bfd526f2",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "/**\n* \"F5\": Run the script\n* \"Ctrl + I\": Isolate Selected Geometry\n*\n*\n*\n*\n**/;",
      "Id": "29d4977ffd5a4fbc99b46521c03c224b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "53b66a95df584de1bbabfe444f3b3828",
      "Inputs": [
        {
          "Id": "228888bd05a248b99b139629841fbd97",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e695d0772cef4b3c837549eebeddf357",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "15a7732f6cb04dd091354990f47294cf",
      "Inputs": [
        {
          "Id": "f92d4d948b40403391a7a0c1b07ba273",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0212e2a0b0ed4b5380c68c447d397ffa",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde71122b42f433eac50a7bc95aabbd6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6a6b21fb028f4604bb96288628d53ad4",
      "Inputs": [
        {
          "Id": "484d2768b2d0421fb401750cf2bdfaa2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9de4ac4aa7645d791ba8d9f8a1bd097",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "707d96c4b0c447fab11fd20d86754199",
      "Inputs": [
        {
          "Id": "fe5985acf0cd4a6aafecc026805c66ea",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c734acd6cd42a8a12c95047633db6a",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e353654a2d624523b843b76fc1b26eac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cub_coord1 = Point.ByCoordinates(0,0,0);\ncub_coord2 = Point.ByCoordinates(6,6,2);\nlen1 = 4;\nlen2 = 2;",
      "Id": "26b91f1a142e42539c8751f65ccacf8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24efafffb000436fac3b0a4ae583ceb7",
          "Name": "",
          "Description": "cub_coord1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4178f4bd64484456a37d3febe39c2069",
          "Name": "",
          "Description": "cub_coord2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9539e328533341c29d26882c47aa262d",
          "Name": "",
          "Description": "len1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d681f71077ca4aa2bedf6ea8c44f5b91",
          "Name": "",
          "Description": "len2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "3f57e74dd731444791e46505ab0dfb81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aea9da347654932aa87ba43fe0a3f42",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "4e3575612a134261972d058ad1f6bbdb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abc883ea418c4c88a5dd5e0788732297",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "centroid = Point.ByCoordinates(0,0,2);\noffset = 2/2;\nc_X = 0;\nc_Y = 0;\nc_Z = 2;\n\nbottom_p1 = Point.ByCoordinates(c_X-offset, c_Y-offset, c_Z-offset);\nbottom_p2 = Point.ByCoordinates(c_X-offset, c_Y+offset, c_Z-offset);\nbottom_p3 = Point.ByCoordinates(c_X+offset, c_Y+offset, c_Z-offset);\nbottom_p4 = Point.ByCoordinates(c_X+offset, c_Y-offset, c_Z-offset);\nbottom_face = [bottom_p1, bottom_p2, bottom_p3, bottom_p4];",
      "Id": "6f5992239c4844a3884b639772e60a4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6655f04262554b9eb407fdd60396a4f0",
          "Name": "",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc58df7c32904c85974a1ee76c40ef30",
          "Name": "",
          "Description": "offset",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d955b8854f8435baaf8091b4dddcfa3",
          "Name": "",
          "Description": "c_X",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d5d0a1f3544b21bd8eb1d88bd82898",
          "Name": "",
          "Description": "c_Y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "666e3497898b4455aaadf89154c8722e",
          "Name": "",
          "Description": "c_Z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "210a597aac5946d5a4e57ca9b0ffdc06",
          "Name": "",
          "Description": "bottom_p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b60e758a30e4a73815db050c4063e72",
          "Name": "",
          "Description": "bottom_p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ab7ef0388d44f02b552ec04c7d28748",
          "Name": "",
          "Description": "bottom_p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeb68be6e81047c99e26e1229adf9b15",
          "Name": "",
          "Description": "bottom_p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f75bf4b1b5e44f12aeb064d1a23172c0",
          "Name": "",
          "Description": "bottom_face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "79dbe59d888f43a1929f2def64e1d025",
      "Inputs": [
        {
          "Id": "2a608ce5f5044935b4e0b06102275150",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d354bfaa7f614b8ca447da25e8ac21e1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3aec7d6bdb5a470db329586e32021ee7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ec8fb2efb84e4bd0a3c1704ce7c83781",
      "Inputs": [
        {
          "Id": "8de92af5577d4f2db7a2ea3e185f4442",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afab1f145ef74d4dbd1326fe822b8c6c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e649be32d0a141efa4faf7b763d0039e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a346983fa83446884094efb2d68b0f1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "6debe35e0be74c33b9fe0c18b6eee089",
      "Inputs": [
        {
          "Id": "48f1052b6a2b46d0b40e154133790cba",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff0c731c52e24a3eaf466b56a262480c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c43d8cef92f44774a4a4f08b55d98728",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5d83bca509a4083bc6e0a6f6a0905c4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f1ee6b7d09e047c39b5d28b8a162e48e",
      "Inputs": [
        {
          "Id": "367528d85d9945d08de124843cd8f16d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d29c2405d444596b6b9333793327a03",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16a164f83a2141f3ad75400049caf566",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "",
      "Id": "28fde220406e4ae287855350184c88a9",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Common Geometry Types\r\nPOINT = \"POINT\";\r\nMULTIPOINT = \"MULTIPOINT\";\r\nLINESTRING = \"LINESTRING\";\r\nMULTILINESTRING = \"MULTILINESTRING\";\r\nPOLYGON = \"POLYGON\";\r\nMULTIPOLYGON = \"MULTIPOLYGON\";\r\nGEOMETRYCOLLECTION = \"GEOMETRYCOLLECTION\";\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nNUM_MULTIPOLYGON = 10\r\nNUM_POLYGON = 10\r\nNUM_LINESTRING = 10\r\nNUM_POINT = 10\r\n\r\n# Input \r\nNUM_MULTIPOLYGON = IN[0]\r\nNUM_MULTIPOLYGON = 50\r\n#num = IN[1]\r\n\r\n# output container\r\ngeo_type_lst = []\r\ngeo_lst = []\r\n\r\n# Point\r\n\r\n# LineString\r\nc=1\r\ngeo_data = Arc.ByThreePoints( Point.ByCoordinates(20, 20, 2),\r\n                            Point.ByCoordinates(25, 25, 2),\r\n                            Point.ByCoordinates(40, 10, 2))\r\ngeo_name = LINESTRING + str(c)\r\ngeo_type = LINESTRING\r\ngeo_lst.append((geo_data, geo_name, geo_type))\r\n\r\n\r\n# Polygon\r\n\r\n# Multipolygon\r\ni=1\r\nc=1\r\nfor i in range(-NUM_MULTIPOLYGON, NUM_MULTIPOLYGON, 4):\r\n    c+=1\r\n    p1 = Point.ByCoordinates(i, i, 0)\r\n    p2 = Point.ByCoordinates(3+i, 3+i, 3)\r\n    \r\n    geo_data = Cuboid.ByCorners(p1, p2)\r\n    geo_name = MULTIPOLYGON + str(c)\r\n    geo_type = MULTIPOLYGON\r\n    geo_lst.append((geo_data, geo_name, geo_type))\r\n\r\ni=1\r\nfor i in range(-NUM_MULTIPOLYGON, NUM_MULTIPOLYGON, 4):\r\n    c+=1\r\n    j = i + 10\r\n    p1 = Point.ByCoordinates(i, j, 0)\r\n    p2 = Point.ByCoordinates(3+i, 3+j, 3)\r\n    \r\n    geo_data = Cuboid.ByCorners(p1, p2)\r\n    geo_name = MULTIPOLYGON + str(c)\r\n    geo_type = MULTIPOLYGON\r\n    geo_lst.append((geo_data, geo_name, geo_type))\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = geo_lst\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e5263d32c0c34ffd9ef5e7fcc14d974c",
      "Inputs": [
        {
          "Id": "54021daede9a49909cb2b4ccecadc30d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70486c137d9441c7aae82b053b0d813f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Number of Geometries to generate\n100;",
      "Id": "2fc07c798e1b4ebf958f7ff659859e87",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c78620f78d0f4963a7747d97eaf09286",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ngeo_lst = IN[0]\r\nexampleInstanceNamespace = IN[1] # dataEnteringNode[3];\r\ngeoSparqlNamespace = IN[2] # dataEnteringNode[4];\r\n\r\ndef lineString2WKT():\r\n    wktLiteral = \"<sf:LineString>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"LINESTRING Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:LineString>\";\r\n    return wktLiteral\r\n\r\ndef multipolygon2WKT(geometry):\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    \"\"\"\r\n    # for curves/surfaces\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \"\"\"\r\n    # for cuboids with geometry = [centroid, length]\r\n    centroid = Solid.Centroid(geometry)\r\n    offset = geometry.Length/2\r\n    c_X = centroid.X\r\n    c_Y = centroid.Y\r\n    c_Z = centroid.Z\r\n\r\n    # idea: determine the coordinates of bottom- and top faces\r\n    \r\n    # p1 -- p2\r\n    # |  c   |\r\n    # p3 -- p4           \r\n    # bottom-face\r\n    bottom_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    bottom_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_face = \"((\" + bottom_p1 + \", \" + bottom_p2 + \", \" + bottom_p3 + \", \" + bottom_p4 +  \", \" + bottom_p1 + \"))\"\r\n    # top-face\r\n    top_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    top_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_face = \"((\" + top_p1 + \", \" + top_p2 + \", \" + top_p3 + \", \" + top_p4 +  \", \" + top_p1 + \"))\"\r\n    # front-face\r\n    front_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    front_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    front_p3 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    front_p4 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    front_face = \"((\" + front_p1 + \", \" + front_p2 + \", \" + front_p3 + \", \" + front_p4 + \", \" + front_p1 + \"))\"\r\n    # back-face             \r\n    back_p1 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    back_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    back_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    back_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    back_face = \"((\" + back_p1 + \", \" + back_p2 + \", \" + back_p3 + \", \" + back_p4 + \", \" + back_p1 + \"))\"\r\n    # left-face\r\n    left_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p2 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_p4 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_face = \"((\" + left_p1 + \", \" + left_p2 + \", \" + left_p3 + \", \" + left_p4 + \", \" + left_p1 + \"))\"            \r\n    # right-face\r\n    right_p1 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_p4 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_face = \"((\" + right_p1 + \", \" + right_p2 + \", \" + right_p3 + \", \" + right_p4 + \", \" + right_p1 + \"))\"\r\n    \r\n    cuboid_face = bottom_face + \", \" + top_face + \", \" + front_face + \", \" + back_face + \", \" + left_face + \", \" + right_face\r\n    \r\n    wktLiteral += \"MULTIPOLYGON Z(\"\r\n    try:\r\n        wktLiteral += cuboid_face\r\n    except e:\r\n        return e\r\n    print(cuboid_face)\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\"\r\n    wktLiteral += \"</rdf:Description>\"\r\n    wktLiteral += \"</sf:MultiPolygon>\"\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\n#####\r\nres = []\r\nfor geo_obj in geo_lst:\r\n    geometry = geo_obj[0];\r\n    name = geo_obj[1];\r\n    geometryType = geo_obj[2];\r\n    \r\n    if(geometryType.upper() == \"MULTIPOLYGON\"):\r\n        res.append(multipolygon2WKT(geometry))\r\n        \r\n    if(geometryType.upper() == \"POLYGON\"):\r\n        res.append(polygon2WKT())\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "09412fe94eab41e68c31fa0307c3b82e",
      "Inputs": [
        {
          "Id": "81de61bb84f64c28b3d884c9f4d6d728",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39772af1835e467982718d7ae096579e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52019d2e5d174dc48b12fdce6846d9c2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34aab1073991461ea21aecb8f98aa0f5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5b79af2b71e44701b490b40587de9acd",
      "Inputs": [
        {
          "Id": "0c38a73373df435f99aec06780c034e3",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1c2d91aa7364c148b010d298fbd927d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "f4c68ed56fdd401c858255578208df3b",
      "End": "0212e2a0b0ed4b5380c68c447d397ffa",
      "Id": "00f35e42b59949a3950f0065315f77d9"
    },
    {
      "Start": "c6f0f1e62fef44aeb70b601c869d460c",
      "End": "ad16ba208c4a435eb9c34e51e4bb261f",
      "Id": "3f174c8b529f43b9bd9faadf19c16cd8"
    },
    {
      "Start": "9e6a623c31214ec7a86d96dce9d36894",
      "End": "77bc87c15e0546b0a908a7568c2c03bf",
      "Id": "526baebac1aa46cd9758d264da03620f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "949291cdd50249a388dcd7b15fdc6e59",
      "Id": "9251985f228d4dfea1fec293f4630d7f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "df6bd6c740bd4c5aa0dad6bc110ad43c",
      "Id": "7e99db6f4ae94f0ea884b776c32edf85"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "8f782d14e05842bf950e089df4756d1a",
      "Id": "ba116d2ad9f241bca6379b5b2440ec82"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "53000e9398e4440aaeff2b1947c9536b",
      "Id": "8927c4cb52df4bc4b620f4ad54d44aa9"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "08d637beb7f44745968098ad801f7bcd",
      "Id": "b4b2d66aeec542e080b21cd05422b20b"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "56746e9369564afe9b2d91274d0febc5",
      "Id": "4929ac43fb2d4942a131d5eb56a14280"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "599198b6a4784e43a03aa6d927630812",
      "Id": "bbceb618483e4937820a3c025188cb57"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "2a608ce5f5044935b4e0b06102275150",
      "Id": "1316b1d7af184dbfa51d3c1b8c0bf1b3"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "367528d85d9945d08de124843cd8f16d",
      "Id": "571220505720497ca1ce0227a25f5a01"
    },
    {
      "Start": "8bbd33f439eb4c1ea76d5b4863a65de8",
      "End": "b1c734acd6cd42a8a12c95047633db6a",
      "Id": "c5723a7376674a2585a10265df162304"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "39772af1835e467982718d7ae096579e",
      "Id": "3e663a36f23348cc9feca9cefff9208d"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "52019d2e5d174dc48b12fdce6846d9c2",
      "Id": "face3269eeaa443e84ad324942c0c913"
    },
    {
      "Start": "3079abf98a7148b6962e2e0267973632",
      "End": "4662dbdc67f64d9eaa25bb84b6cf3169",
      "Id": "a9e306de17cb4f5293d201edc3a532fd"
    },
    {
      "Start": "bd06b513d42a4ec5a2267a0de6b95808",
      "End": "e0b36f25ff0a43feab340b908c2720e4",
      "Id": "21b076eb864340f3a6a2203b6fec7a6d"
    },
    {
      "Start": "ee765cd3c18344a3aca7874845aee6b1",
      "End": "900f2a08ee5e4ce386b7bbcb4523deef",
      "Id": "21a2ae1557da4ef191cef58fe0e8e98e"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "195518c28b114e62b18d4e0070eaf4c7",
      "Id": "c35c5f0af736428d89d60b8b9c5473a8"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "bd8d36c918ef41d590260075e675f70c",
      "Id": "ae61e89c0ecd4d37990145c64ee5d938"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "c8d0be1e622d4af39354070a3eff6466",
      "Id": "fd475cb7efaf4a0e8516206acc308bee"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "935a678206df4d0ab3fcb92690a97b46",
      "Id": "01169646c28a4fc68c725b10d71776bb"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "208a7ca84f3d4846b00a515259a1f55c",
      "Id": "ff49d5ca4315447ab94b40c4d1611558"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "e649be32d0a141efa4faf7b763d0039e",
      "Id": "4b11e695df20418db1aed87db65f8274"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "c43d8cef92f44774a4a4f08b55d98728",
      "Id": "72a038fcb5aa47d39460381857e6ff36"
    },
    {
      "Start": "4ef20f12a3e84a1ba41f1a346b2a1d16",
      "End": "71e557c3927646778b6c4cfc2e1523e4",
      "Id": "5c3e82da9bbb49a09da63d828d22cafe"
    },
    {
      "Start": "058e873801cb4821b061b4b2fed0f5b7",
      "End": "61bb6a1bf78641b28657f9cf8c3fd969",
      "Id": "619ba13aba6f40739c0901552cde3dce"
    },
    {
      "Start": "8789f690d0fb4d4ea09962f50d1af2d8",
      "End": "7ebe7601e0d64625a1e74a83c5e10bb2",
      "Id": "498c39b96db94bb7becd5d5d10ea3ed6"
    },
    {
      "Start": "d9e178ae93e64c0a8da12b138d79da37",
      "End": "d6c7a8703503455da3547336e6a3e8bf",
      "Id": "c7a2efbf8cc24edb9bde75280a2a03a9"
    },
    {
      "Start": "06eee4082ef1498b9077ab77abefe8a1",
      "End": "95a75c96b8a54f65a788c59cc5e3c6f9",
      "Id": "e99abcff08154ceda9bf89d31c371665"
    },
    {
      "Start": "eb07da86db734600be0f078466535df2",
      "End": "61b6ae7ba5b542d6888769993e6a6b3d",
      "Id": "c641ec72672e45ecb68dc1cc0fc5aeb5"
    },
    {
      "Start": "25db36f9776f4d489bb96cc62118bbfc",
      "End": "d6af2b7a021d4d9c8d7871a16d248560",
      "Id": "7f0486ea8129482e9cba86ece3f70141"
    },
    {
      "Start": "2db22f83dbe143569e2457d82993c7da",
      "End": "13ebefd1b3c244cab6db4dfd4996bcea",
      "Id": "b28b0c00eb4342f0a8807878175e3b64"
    },
    {
      "Start": "ad6ea306939b40809e4969faaff8a7a9",
      "End": "bbcc9f3830624c75bf3a2accb5c79c24",
      "Id": "d9b5f242d77a4d2f8344b9f71a574c49"
    },
    {
      "Start": "e9116484351f45579a2f99d2bfd526f2",
      "End": "228888bd05a248b99b139629841fbd97",
      "Id": "00d4fc67ff6446929aa4137525e7f9b0"
    },
    {
      "Start": "e695d0772cef4b3c837549eebeddf357",
      "End": "59cd2113c3a84201972447f762f4d06f",
      "Id": "bd49b9ab98ee4fc9a51ee004f82c0674"
    },
    {
      "Start": "fde71122b42f433eac50a7bc95aabbd6",
      "End": "6f433e359e584c96b5cd746da1837256",
      "Id": "08762a13ef63445a8d86b5c309e05251"
    },
    {
      "Start": "fde71122b42f433eac50a7bc95aabbd6",
      "End": "484d2768b2d0421fb401750cf2bdfaa2",
      "Id": "c04eef08ef9d4c87b72efc48a07fe126"
    },
    {
      "Start": "e353654a2d624523b843b76fc1b26eac",
      "End": "3dd15c6a7ab447d2bb0a1ceb5546319b",
      "Id": "6f9aa88d214647b99820690fc2caa518"
    },
    {
      "Start": "3aea9da347654932aa87ba43fe0a3f42",
      "End": "fe5985acf0cd4a6aafecc026805c66ea",
      "Id": "220f7f728ba74abebec777ccb6c7433c"
    },
    {
      "Start": "abc883ea418c4c88a5dd5e0788732297",
      "End": "f92d4d948b40403391a7a0c1b07ba273",
      "Id": "a65221a53beb43f7b14065fb0112ca62"
    },
    {
      "Start": "3aec7d6bdb5a470db329586e32021ee7",
      "End": "afab1f145ef74d4dbd1326fe822b8c6c",
      "Id": "d02deeadc7bd40a5a2ae8ef722ce1da8"
    },
    {
      "Start": "0a346983fa83446884094efb2d68b0f1",
      "End": "4e0e8ab901624d46907eeb882ebab300",
      "Id": "7cc215a045614d69abc8db5ce82eb4a2"
    },
    {
      "Start": "a5d83bca509a4083bc6e0a6f6a0905c4",
      "End": "88eb910c87b448f69f1194d97f49e372",
      "Id": "8a2ccd5c00414f20accb3af35749a2c4"
    },
    {
      "Start": "16a164f83a2141f3ad75400049caf566",
      "End": "ff0c731c52e24a3eaf466b56a262480c",
      "Id": "6ad4d7207e78422d8bbb700ae43976e2"
    },
    {
      "Start": "70486c137d9441c7aae82b053b0d813f",
      "End": "81de61bb84f64c28b3d884c9f4d6d728",
      "Id": "908ae5648c6b427191417e492e62a97a"
    },
    {
      "Start": "c78620f78d0f4963a7747d97eaf09286",
      "End": "54021daede9a49909cb2b4ccecadc30d",
      "Id": "0936bacaa5704e0093564aa8bc750108"
    },
    {
      "Start": "34aab1073991461ea21aecb8f98aa0f5",
      "End": "0c38a73373df435f99aec06780c034e3",
      "Id": "0ae45fdea6744963836f781b33242bda"
    },
    {
      "Start": "34aab1073991461ea21aecb8f98aa0f5",
      "End": "1bf83e6357a44ed88c6b44b3703edca8",
      "Id": "a8d478b9cf7f4922b69aed04d323fd25"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.8.0.2471",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 35.412940979003906,
      "EyeY": 18.758764266967773,
      "EyeZ": -17.417102813720703,
      "LookX": -7.6895027160644531,
      "LookY": -21.462953567504883,
      "LookZ": -4.1210899353027344,
      "UpX": -0.72638481855392456,
      "UpY": 0.56639444828033447,
      "UpZ": -0.38931021094322205
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "RDF Wrapper (Python Script)",
        "Id": "e00054a13da24212ab4540997633798f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1904.7030820716639,
        "Y": 883.31241282003134
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "55e5541613984633bd3985a301a6f2f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1337.8402640736203,
        "Y": -70.85039359102359
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.FileExists",
        "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1326.1098161060909,
        "Y": -173.82012488014385
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "963c470715ed4f5b815704780b1b964a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1061.1691042533862,
        "Y": -169.55855042277165
      },
      {
        "ShowGeometry": true,
        "Name": "Query Result Viewer",
        "Id": "aef00e0d9cbc4c89bc624f16784d0389",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1852.3198919030383,
        "Y": -64.794235261764356
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3caf2c5d39a14bb8a8d117a845916766",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1556.5237633683516,
        "Y": -177.89963672898307
      },
      {
        "ShowGeometry": true,
        "Name": "Polygon1-Name",
        "Id": "c5ca528b4d9f4975bf11edd564038195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 779.4079691197627,
        "Y": 2268.8962655670343
      },
      {
        "ShowGeometry": true,
        "Name": "Points",
        "Id": "8cc6c1fb61484b86bab82908655d3df0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2284.2792025985345,
        "Y": -131.005225015336
      },
      {
        "ShowGeometry": true,
        "Name": "PolygonCoordList1",
        "Id": "ff616aa35b194fbfa265d2a312b357bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2286.9889924907447,
        "Y": 101.01175466792051
      },
      {
        "ShowGeometry": true,
        "Name": "PolygonCoordList2",
        "Id": "20f595b21050444cad303c1015c8207f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2288.3274293802529,
        "Y": 296.95289040596435
      },
      {
        "ShowGeometry": true,
        "Name": "RDF Prefixes",
        "Id": "94e1fb21689642b9b5fa86b874146ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1094.6736694355532,
        "Y": 206.39593903341176
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "8e0e97ac456349348ae8f407ab7fb7ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 572.34291369708376,
        "Y": 253.85327639601246
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "c35aef94b79f494486311eadd2b8352d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2637.548386492208,
        "Y": 798.592925874691
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "bc6e3de400aa462da2f128593313d246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2635.9332959162443,
        "Y": 932.22575843341053
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "5b34801b03bf4e0290214b4c52894850",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -209.43626510656054,
        "Y": -172.26994229785805
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "b714a12042164093bebad72997dbaf06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 369.92736667870122,
        "Y": 17.977123386172934
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "fa87b26c82a8488b888bd68e66796f2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -435.01914109214545,
        "Y": -168.93207944767482
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "e9ad885b7e2845d3b44873e888a7be38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -435.86574571674942,
        "Y": -1.1551792698774079
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "fe9f9b9d604e448bb929e13a8b6eac0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -435.61986254349654,
        "Y": 166.12995456141334
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "1df51be173274ce583cf70b7987b356d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -431.71618556021326,
        "Y": 340.73067601276432
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "e7c2b58156c0432f8ebc24618c2f8e0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -429.03177318027315,
        "Y": 521.42772048083168
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "d816a2d3c88e4876baa161a90f11a416",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -208.83418926155514,
        "Y": -2.5462792598805208
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "43c394e8ed6a49e08743c025d5fde3fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -209.31515254340979,
        "Y": 169.37363083308128
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "ad18b37dc3c14625bbfacef86803868b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -209.91301240627422,
        "Y": 340.01582803219515
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "41f46af230dc407c854a0bb264db0f58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -206.11392816164266,
        "Y": 522.25046173834369
      },
      {
        "ShowGeometry": true,
        "Name": "Geo List",
        "Id": "4aa5aca4c9d245ce95df137be708a5e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 179.74976590373842,
        "Y": 16.195283767294768
      },
      {
        "ShowGeometry": true,
        "Name": "Notes",
        "Id": "29d4977ffd5a4fbc99b46521c03c224b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 692.7895571875373,
        "Y": 2435.2947977804397
      },
      {
        "ShowGeometry": true,
        "Name": "List Viewer",
        "Id": "53b66a95df584de1bbabfe444f3b3828",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 176.45196639137453,
        "Y": 253.99094777773144
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "15a7732f6cb04dd091354990f47294cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2275.4545423196755,
        "Y": 935.42582944015214
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6a6b21fb028f4604bb96288628d53ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2533.2777129409569,
        "Y": 1080.257808727828
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "707d96c4b0c447fab11fd20d86754199",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1735.5562076348026,
        "Y": -179.41511717005795
      },
      {
        "ShowGeometry": true,
        "Name": "CubeCoord + Length",
        "Id": "26b91f1a142e42539c8751f65ccacf8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2282.9913413703689,
        "Y": 490.09241104153875
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "3f57e74dd731444791e46505ab0dfb81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1560.2593427953975,
        "Y": 57.804827069511816
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "4e3575612a134261972d058ad1f6bbdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2276.9915524927833,
        "Y": 828.89720419431148
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6f5992239c4844a3884b639772e60a4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 573.92933974291464,
        "Y": 2680.7181373168137
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "79dbe59d888f43a1929f2def64e1d025",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -430.91026704486217,
        "Y": 697.50538953428611
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "ec8fb2efb84e4bd0a3c1704ce7c83781",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -206.28791806210427,
        "Y": 701.73713872004953
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "6debe35e0be74c33b9fe0c18b6eee089",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -206.33730900029343,
        "Y": 892.29417576794492
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "f1ee6b7d09e047c39b5d28b8a162e48e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -435.48491478258688,
        "Y": 890.11490837612234
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "28fde220406e4ae287855350184c88a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 661.36119867243178,
        "Y": 1243.8579144394646
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Generator",
        "Id": "e5263d32c0c34ffd9ef5e7fcc14d974c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1094.0570072710036,
        "Y": 941.54830311475109
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2fc07c798e1b4ebf958f7ff659859e87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1090.0545039103124,
        "Y": 817.98579908020668
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter",
        "Id": "09412fe94eab41e68c31fa0307c3b82e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1643.2816383385161,
        "Y": 936.05733190356329
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "5b79af2b71e44701b490b40587de9acd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1900.860264375372,
        "Y": 492.15674667387555
      }
    ],
    "Annotations": [
      {
        "Id": "23fd0eb5566041e59353ff762a20a4c2",
        "Title": "Coordinates\r\n ",
        "Nodes": [
          "8cc6c1fb61484b86bab82908655d3df0",
          "ff616aa35b194fbfa265d2a312b357bd",
          "20f595b21050444cad303c1015c8207f",
          "26b91f1a142e42539c8751f65ccacf8b"
        ],
        "Left": 2272.9913413703689,
        "Top": -227.005225015336,
        "Width": 401.0,
        "Height": 856.09763605687476,
        "FontSize": 36.0,
        "InitialTop": -131.005225015336,
        "InitialHeight": 766.09763605687476,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04072cb4669049209b52fd1ac4d025a5",
        "Title": "WKT Generator",
        "Nodes": [
          "e00054a13da24212ab4540997633798f",
          "94e1fb21689642b9b5fa86b874146ae5",
          "09412fe94eab41e68c31fa0307c3b82e",
          "e5263d32c0c34ffd9ef5e7fcc14d974c",
          "2fc07c798e1b4ebf958f7ff659859e87",
          "5b79af2b71e44701b490b40587de9acd"
        ],
        "Left": 1080.0545039103124,
        "Top": 153.39593903341176,
        "Width": 1069.6485781613512,
        "Height": 938.66139287015164,
        "FontSize": 36.0,
        "InitialTop": 206.39593903341176,
        "InitialHeight": 880.15236408133921,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "8f1eaa04e16b43899c987a4f0ba58e74",
        "Title": "Geometry Highlighter",
        "Nodes": [
          "5b34801b03bf4e0290214b4c52894850",
          "b714a12042164093bebad72997dbaf06",
          "fa87b26c82a8488b888bd68e66796f2a",
          "e9ad885b7e2845d3b44873e888a7be38",
          "fe9f9b9d604e448bb929e13a8b6eac0f",
          "1df51be173274ce583cf70b7987b356d",
          "e7c2b58156c0432f8ebc24618c2f8e0e",
          "d816a2d3c88e4876baa161a90f11a416",
          "43c394e8ed6a49e08743c025d5fde3fc",
          "ad18b37dc3c14625bbfacef86803868b",
          "41f46af230dc407c854a0bb264db0f58",
          "4aa5aca4c9d245ce95df137be708a5e7",
          "53b66a95df584de1bbabfe444f3b3828",
          "8e0e97ac456349348ae8f407ab7fb7ce",
          "79dbe59d888f43a1929f2def64e1d025",
          "ec8fb2efb84e4bd0a3c1704ce7c83781",
          "6debe35e0be74c33b9fe0c18b6eee089",
          "f1ee6b7d09e047c39b5d28b8a162e48e"
        ],
        "Left": -445.86574571674942,
        "Top": -225.26994229785805,
        "Width": 1238.2086594138332,
        "Height": 1273.5641180658031,
        "FontSize": 36.0,
        "InitialTop": -172.26994229785805,
        "InitialHeight": 1209.5641180658031,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "5c0afc45a1c048e1a54d2a4955e0da61",
        "Title": "RDF Export",
        "Nodes": [
          "15a7732f6cb04dd091354990f47294cf",
          "6a6b21fb028f4604bb96288628d53ad4",
          "c35aef94b79f494486311eadd2b8352d",
          "bc6e3de400aa462da2f128593313d246",
          "4e3575612a134261972d058ad1f6bbdb"
        ],
        "Left": 2265.4545423196755,
        "Top": 745.592925874691,
        "Width": 572.0938441725325,
        "Height": 428.664882853137,
        "FontSize": 36.0,
        "InitialTop": 798.592925874691,
        "InitialHeight": 426.664882853137,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "3b23e7e8a50c49f58eeca893711b4716",
        "Title": "XML(query result) Import and Parsing",
        "Nodes": [
          "55e5541613984633bd3985a301a6f2f0",
          "9c3c9a9cb6f048cf9f7f1435208d010b",
          "963c470715ed4f5b815704780b1b964a",
          "aef00e0d9cbc4c89bc624f16784d0389",
          "3caf2c5d39a14bb8a8d117a845916766",
          "707d96c4b0c447fab11fd20d86754199",
          "3f57e74dd731444791e46505ab0dfb81"
        ],
        "Left": 1051.1691042533862,
        "Top": -232.41511717005795,
        "Width": 998.38710338141641,
        "Height": 358.21994423956977,
        "FontSize": 36.0,
        "InitialTop": -179.41511717005795,
        "InitialHeight": 382.21994423956977,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      }
    ],
    "X": -488.777657277258,
    "Y": 39.129052277289077,
    "Zoom": 0.654959687963953
  }
}