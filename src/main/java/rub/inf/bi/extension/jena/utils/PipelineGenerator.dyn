{
  "Uuid": "8b1e7f7f-7304-4d5e-a570-fd8ce7ff620e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "PipelineGenerator",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\nnamespaces = dataEnteringNode[0]\r\ninserts = dataEnteringNode[1]\r\n\r\n# open RDF header\r\nrdfStr = \"<rdf:RDF\";\r\n\r\n# handle Namespaces\r\nfor key in namespaces:\r\n    rdfStr += \" xmlns:\" + key + \"='\" + namespaces[key] + \"'\";\r\n\r\nrdfStr += \">\";\r\n\r\n#add inserts\r\n\r\nrdfStr += \"<rdf:Description rdf:about='my:\" + \"RootModel\" + \"'>\";\r\n\r\nfor insert in inserts:\r\n    rdfStr += insert;\r\n\r\nrdfStr += \"</rdf:Description>\"\r\n\r\n# close RDF header\r\nrdfStr += \"</rdf:RDF>\"\r\n\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nOUT = rdfStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e00054a13da24212ab4540997633798f",
      "Inputs": [
        {
          "Id": "4662dbdc67f64d9eaa25bb84b6cf3169",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf83e6357a44ed88c6b44b3703edca8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4c68ed56fdd401c858255578208df3b",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.FileExists@string",
      "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
      "Inputs": [
        {
          "Id": "949291cdd50249a388dcd7b15fdc6e59",
          "Name": "path",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e6a623c31214ec7a86d96dce9d36894",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if a file exists at the given path.\n\nFileSystem.FileExists (path: string): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\yhe\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\rdf\\query_result.xml",
      "NodeType": "ExtensionNode",
      "Id": "963c470715ed4f5b815704780b1b964a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0eba4e25d56d42f99f6cd7d1d4848abe",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aef00e0d9cbc4c89bc624f16784d0389",
      "Inputs": [
        {
          "Id": "3dd15c6a7ab447d2bb0a1ceb5546319b",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport ctypes\r\nimport xml.etree.ElementTree as ET\r\nsys.path.append(r\"C:\\Users\\yhe\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom xml.dom.minidom import parse, parseString\r\n\r\n#dir = \"r'C:\\\\Users\\\\nobita_yhe\\\\Workspace\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\rdf\\\\query_result.xml'\"\r\n#dir = r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml'\r\nwarn_str = 'File or File Path does not exist.'\r\nres = ''\r\n######################################################\r\n\r\ndef xmlParsing2Uri(path=dir):\r\n    \"\"\" it returns the list in structure like [[uri1, uri2],...,[uri1, uri2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    \r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                ur_lst.append(ur.childNodes[0].nodeValue)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\n\r\ndef xml2GeometryString(path=dir):\r\n    \"\"\" it returns the list in structure like [[Geomety1, Geomety2],...,[Geomety1, Geomety2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    seperator = '#'\r\n\r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                uri_str = ur.childNodes[0].nodeValue\r\n                geo_index = uri_str.find(seperator) \r\n                geo_str = uri_str[geo_index+1:]\r\n                ur_lst.append(geo_str)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\ndef xml2GeoInDynamo(path=dir):\r\n    #with open(r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml', 'r', encoding='utf-8') as file:\r\n    with open(path, 'r', encoding='utf-8') as file:\r\n        xml_data = file.read()\r\n        dom = parseString(xml_data)\r\n        #dom = parse(xml_data)\r\n        data = dom.documentElement\r\n        resList = data.getElementsByTagName('result')\r\n        seperator = '#'\r\n        \r\n        res_lst = []\r\n        for res in resList: # handle the <result>...</result>\r\n            ur_lst = []\r\n            for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n                for ur in bi.getElementsByTagName('uri'):\r\n                    uri_str = ur.childNodes[0].nodeValue\r\n                    geo_index = uri_str.find(seperator) \r\n                    geo_str = uri_str[geo_index+1:]\r\n                    ur_lst.append(geo_str)\r\n            res_lst.append(ur_lst)\r\n            ur_lst = []\r\n    return res_lst\r\n    \r\n######################################################\r\n\r\nif IN[0] == True:\r\n    dir = IN[1]\r\n    res = xml2GeoInDynamo(dir)\r\nelse:\r\n\tctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\tres = warn_str\r\n######################################################\r\n# Assign your output to the OUT variable.\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3caf2c5d39a14bb8a8d117a845916766",
      "Inputs": [
        {
          "Id": "77bc87c15e0546b0a908a7568c2c03bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad16ba208c4a435eb9c34e51e4bb261f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bbd33f439eb4c1ea76d5b4863a65de8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\nINDEX_EN = ['A','B','C','D'];\r\nINDEX_NUM = ['1','2','3','4'];\r\nINDEX = [];\r\n\r\nif IN[2] == \"EN\":\r\n    INDEX = INDEX_EN\r\nif IN[2] == \"NUM\":\r\n    INDEX = INDEX_NUM\r\n\"\"\"\r\n# Place your code below this line\r\ndef name_concatenation(geo_name:str, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n \r\n    geo_concat = [geo_name + index[i] for i in range(geo_number)]\r\n    return geo_concat\r\n\r\ndef name_lst_concatenation(geo_name_lst:list, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n    \r\n    geo_concat = [[geo_name + index[i] for i in range(geo_number)] for geo_name in geo_name_lst]\r\n    return geo_concat\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif isinstance(IN[0], str):\r\n    OUT = name_concatenation(IN[0], IN[1])\r\nelse:\r\n    OUT = name_lst_concatenation(IN[0], IN[1])\r\n\"\"\"\r\nOUT = \"\"",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5ca528b4d9f4975bf11edd564038195",
      "Inputs": [
        {
          "Id": "57a2238033c24b7383d6cfe1176f6768",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73aea16d17b4d98b03e2e682d83d9fe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab031f3cf0f84f0dbda06b2acc56dae0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2769ba043845426fba267cb4438486f4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2+6,-1);\np2 = Point.ByCoordinates(5,0);\n// Line1\nline1S = Point.ByCoordinates(0,0,1.5);\nline1E = Point.ByCoordinates(3,0,-1);\nline1 = [line1S, line2E];\n// Line2\nline2S = Point.ByCoordinates(8,-1,0);\nline2E = Point.ByCoordinates(0,6,0);\nline2 = [line2S, line2E];",
      "Id": "8cc6c1fb61484b86bab82908655d3df0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6c3a6660f77045dd99f3bc21219ad954",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cea2fb6566f343f68c7a3ea90453c72f",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08503e6e57f74f63b152b42860f8624f",
          "Name": "",
          "Description": "line1S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d30e10a7e7e481ab665572d648d7c35",
          "Name": "",
          "Description": "line1E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db41a433d0e847509a826ae54391edbd",
          "Name": "",
          "Description": "line1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94b72f51a29f44adb592f49fe2497f2b",
          "Name": "",
          "Description": "line2S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c440bb5651c44f66b8a467cb2b11d84a",
          "Name": "",
          "Description": "line2E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3b9a18de5b64fc39741e10ad451bbd8",
          "Name": "",
          "Description": "line2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2+6+2,-1,0);\np2 = Point.ByCoordinates(2+6+2,1,0);\np3 = Point.ByCoordinates(0+6+2,1,0);\np4 = Point.ByCoordinates(0+6+2,-1,0);\n//p5 = Point.ByCoordinates(2+6,-1,6);\np = [p1,p2,p3,p4];",
      "Id": "ff616aa35b194fbfa265d2a312b357bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcce7991b9da4597845fad1aa5c02f31",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb53634bd6e04294ba809a2f17c361b0",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae59f7b5e8f342b2baf747b77de8767d",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3eacc0ce2e9243dc8ba453afa2c86605",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9289b0f229084a5db42cca89e6cc8024",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(4,0,6);\np2 = Point.ByCoordinates(4,4,6);\np3 = Point.ByCoordinates(0,4,6);\np4 = Point.ByCoordinates(0,0,6);\np5 = Point.ByCoordinates(4,0,6);\np = [p1,p2,p3,p4];",
      "Id": "20f595b21050444cad303c1015c8207f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "886ec992c62f4ecd8a2aad20a3cc6ffe",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "333e69dcc1fc44bc8ecd4141c1c4b0a1",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d788c123e343a9836e7fde5cc7bbf6",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d532e4cba824af080bd7fa876e77241",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24193d9509264f438601004cd6bc3d07",
          "Name": "",
          "Description": "p5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49a00bc6cc3e486d8527080df8974444",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nowl=\"http://www.w3.org/2002/07/owl#\";\nogc=\"http://www.opengis.net/\";\nmy=\"https://www.inf.bi.ruhr-uni-bochum.de/jena/#\";\ngml=\"http://www.opengis.net/ont/gml#\";\ngeo=\"http://www.opengis.net/ont/geosparql#\";\ngeof=\"http://www.opengis.net/def/function/geosparql/\";\nrdfs=\"http://www.w3.org/2000/01/rdf-schema#\";\nuom=\"http://www.opengis.net/def/uom/OGC/1.0/\";\nsf=\"http://www.opengis.net/ont/sf#\";\nxsd=\"http://www.w3.org/2001/XMLSchema#\";\ngeor=\"http://www.opengis.net/def/rule/geosparql/\";\n\nnamespaces = {\n\t\"rdf\" : rdf,\n\t\"owl\" : owl,\n\t\"ogc\" : ogc,\n\t\"my\" : my,\n\t\"gml\" : gml,\n\t\"geo\" : geo,\n\t\"geof\": geof,\n\t\"rdfs\": rdfs,\n\t\"uom\": uom,\n\t\"sf\": sf,\n\t\"xsd\": xsd,\n\t\"geor\": geor\n};",
      "Id": "94e1fb21689642b9b5fa86b874146ae5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f427bc5da01a49c0a7821e5ec52e06f1",
          "Name": "",
          "Description": "rdf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7313842ce31f4c598b2775fb7ec5c209",
          "Name": "",
          "Description": "owl",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2309f1f89a940579245c11a63dda886",
          "Name": "",
          "Description": "ogc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55939f003a0d408681622652bc9c72b6",
          "Name": "",
          "Description": "my",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fb0ada8f6e14c1686fd70d815909312",
          "Name": "",
          "Description": "gml",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0262bdaa335446919b24831071029ab6",
          "Name": "",
          "Description": "geo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dde2f2b817744f7b3f7e69aebe74b86",
          "Name": "",
          "Description": "geof",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae3aecaf8f184bebb0fa1f1ff9ff061b",
          "Name": "",
          "Description": "rdfs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67d90835eee54bfcafd407423c3ba801",
          "Name": "",
          "Description": "uom",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6fd2dd556c446079353dc285b1cfb4b",
          "Name": "",
          "Description": "sf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de208d58adf74b689166e6d7cfca216f",
          "Name": "",
          "Description": "xsd",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b030e9096251429399f87b1d258e765b",
          "Name": "",
          "Description": "geor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9a2d06a98f847af8d75d1e5e75cddce",
          "Name": "",
          "Description": "namespaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\yhe\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\rdf\\example.rdf",
      "InputValue": "..\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\rdf\\example.rdf",
      "NodeType": "ExtensionNode",
      "Id": "c35aef94b79f494486311eadd2b8352d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd06b513d42a4ec5a2267a0de6b95808",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "bc6e3de400aa462da2f128593313d246",
      "Inputs": [
        {
          "Id": "e0b36f25ff0a43feab340b908c2720e4",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f433e359e584c96b5cd746da1837256",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1910f40416c94ea289b943413a397a63",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "/**\n* \"F5\": Run the script\n* \"Ctrl + I\": Isolate Selected Geometry\n* \"Ctrl + P\": Drag & Drop\n*\n*\n*\n**/;",
      "Id": "29d4977ffd5a4fbc99b46521c03c224b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? path : null;",
      "Id": "15a7732f6cb04dd091354990f47294cf",
      "Inputs": [
        {
          "Id": "fff1532b9c694128abe53096193301d5",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7e61833af494128a48af19e439a1388",
          "Name": "path",
          "Description": "path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f0cb819129547a99f848b267ec00c25",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6a6b21fb028f4604bb96288628d53ad4",
      "Inputs": [
        {
          "Id": "484d2768b2d0421fb401750cf2bdfaa2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9de4ac4aa7645d791ba8d9f8a1bd097",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "707d96c4b0c447fab11fd20d86754199",
      "Inputs": [
        {
          "Id": "fe5985acf0cd4a6aafecc026805c66ea",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c734acd6cd42a8a12c95047633db6a",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e353654a2d624523b843b76fc1b26eac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cub_coord1 = Point.ByCoordinates(0,0,0);\ncub_coord2 = Point.ByCoordinates(6,6,2);\nlen1 = 4;\nlen2 = 2;",
      "Id": "26b91f1a142e42539c8751f65ccacf8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24efafffb000436fac3b0a4ae583ceb7",
          "Name": "",
          "Description": "cub_coord1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4178f4bd64484456a37d3febe39c2069",
          "Name": "",
          "Description": "cub_coord2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9539e328533341c29d26882c47aa262d",
          "Name": "",
          "Description": "len1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d681f71077ca4aa2bedf6ea8c44f5b91",
          "Name": "",
          "Description": "len2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "3f57e74dd731444791e46505ab0dfb81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aea9da347654932aa87ba43fe0a3f42",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "4e3575612a134261972d058ad1f6bbdb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abc883ea418c4c88a5dd5e0788732297",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "centroid = Point.ByCoordinates(0,0,2);\noffset = 2/2;\nc_X = 0;\nc_Y = 0;\nc_Z = 2;\n\nbottom_p1 = Point.ByCoordinates(c_X-offset, c_Y-offset, c_Z-offset);\nbottom_p2 = Point.ByCoordinates(c_X-offset, c_Y+offset, c_Z-offset);\nbottom_p3 = Point.ByCoordinates(c_X+offset, c_Y+offset, c_Z-offset);\nbottom_p4 = Point.ByCoordinates(c_X+offset, c_Y-offset, c_Z-offset);\nbottom_face = [bottom_p1, bottom_p2, bottom_p3, bottom_p4];",
      "Id": "6f5992239c4844a3884b639772e60a4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6655f04262554b9eb407fdd60396a4f0",
          "Name": "",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc58df7c32904c85974a1ee76c40ef30",
          "Name": "",
          "Description": "offset",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d955b8854f8435baaf8091b4dddcfa3",
          "Name": "",
          "Description": "c_X",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d5d0a1f3544b21bd8eb1d88bd82898",
          "Name": "",
          "Description": "c_Y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "666e3497898b4455aaadf89154c8722e",
          "Name": "",
          "Description": "c_Z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "210a597aac5946d5a4e57ca9b0ffdc06",
          "Name": "",
          "Description": "bottom_p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b60e758a30e4a73815db050c4063e72",
          "Name": "",
          "Description": "bottom_p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ab7ef0388d44f02b552ec04c7d28748",
          "Name": "",
          "Description": "bottom_p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeb68be6e81047c99e26e1229adf9b15",
          "Name": "",
          "Description": "bottom_p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f75bf4b1b5e44f12aeb064d1a23172c0",
          "Name": "",
          "Description": "bottom_face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Number of Geometries to generate\n20;",
      "Id": "2fc07c798e1b4ebf958f7ff659859e87",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e4b3930d4fa043c3982d30a182ffdd14",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ngeo_lst = IN[0]\r\nexampleInstanceNamespace = IN[1] # dataEnteringNode[3];\r\ngeoSparqlNamespace = IN[2] # dataEnteringNode[4];\r\n\r\ndef lineString2WKT(geo_data):\r\n    wktLiteral = \"<sf:LineString>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"LINESTRING Z((\";\r\n    \r\n    points =  geo_data\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    #wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:LineString>\";\r\n    return wktLiteral\r\n\"\"\"\r\ndef sphere2WKT(surface_lst):\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    # for curves/surfaces\r\n    wktLiteral += \"MULTIPOLYGON Z(\";\r\n    for surface in surface_lst:\r\n        wktLiteral += \"((\";\r\n        try:\r\n            curves = Surface.PerimeterCurves(surface);\r\n        except:\r\n            raise Exception(\"something wrong at geometry import!\")\r\n        startP = None;\r\n        for curve in curves:\r\n            nextP = curve.StartPoint;\r\n            if(startP != None):\r\n                wktLiteral += \", \";\r\n            else:\r\n                startP = nextP;\r\n            wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        #Close the tiangle loop with a repeat of the first Point         \r\n        wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z) + \"))\";\r\n        if(surface != surface_lst[-1]):\r\n            wktLiteral += \", \"\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n\"\"\"\r\ndef sphere2WKT(surface_lst):\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    # for curves/surfaces\r\n    face_wkt_lst = \"\"\r\n    for vert_lst in surface_lst:\r\n        \r\n        vert_wkt_lst = \"((\"\r\n        for vert in vert_lst:\r\n        \r\n            vert_wkt_lst += str(vert.X) + \" \" +  str(vert.Y) + \" \" +  str(vert.Z);\r\n            if vert != vert_lst[-1]:\r\n                vert_wkt_lst += \", \"\r\n        \r\n        vert_wkt_lst += \", \" + str(vert_lst[0].X) + \" \" +  str(vert_lst[0].Y) + \" \" +  str(vert_lst[0].Z) + \"))\";\r\n        \r\n        face_wkt_lst += vert_wkt_lst\r\n        if vert_lst != surface_lst[-1]:\r\n            face_wkt_lst += \", \"          \r\n            \r\n    wktLiteral += \"MULTIPOLYGON Z(\";\r\n    wktLiteral += face_wkt_lst\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\n    \r\ndef multipolygonInRotation2WKT(face_lst):\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    face_wkt_lst = \"\"\r\n    \r\n    for face in face_lst:\r\n        \r\n        vertice_lst = face.Vertices\r\n        org_vert_pt = vertice_lst[0].PointGeometry \r\n        face_wkt = \"((\" + str(org_vert_pt.X) + \" \" +  str(org_vert_pt.Y) + \" \" +  str(org_vert_pt.Z) # start point\r\n    \r\n        for i in range(1, len(vertice_lst)):\r\n            vert_pt = vertice_lst[i].PointGeometry\r\n            face_wkt += \", \" + str(vert_pt.X) + \" \" +  str(vert_pt.Y) + \" \" +  str(vert_pt.Z)       \r\n        face_wkt += \", \" + str(org_vert_pt.X) + \" \" +  str(org_vert_pt.Y) + \" \" +  str(org_vert_pt.Z) + \"))\" # end point\r\n        \r\n        if(face != face_lst[-1]):\r\n            face_wkt += \", \"\r\n        face_wkt_lst += face_wkt        \r\n    \r\n    wktLiteral += \"MULTIPOLYGON Z(\"\r\n    wktLiteral += face_wkt_lst\r\n    wktLiteral += \")\" \r\n    wktLiteral += \"</geo:asWKT>\"\r\n    wktLiteral += \"</rdf:Description>\"\r\n    wktLiteral += \"</sf:MultiPolygon>\"\r\n    return wktLiteral\r\n    \r\ndef multipolygon2WKT(geo_data):\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    \"\"\"\r\n    # for curves/surfaces\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \"\"\"\r\n    # for cuboids with geometry = [centroid, length]\r\n    centroid = Solid.Centroid(geo_data)\r\n    offset = geo_data.Length/2\r\n    c_X = centroid.X\r\n    c_Y = centroid.Y\r\n    c_Z = centroid.Z\r\n\r\n    # idea: determine the coordinates of bottom- and top faces\r\n    \r\n    # p1 -- p2\r\n    # |  c   |\r\n    # p3 -- p4           \r\n    # bottom-face\r\n    bottom_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    bottom_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_face = \"((\" + bottom_p1 + \", \" + bottom_p2 + \", \" + bottom_p3 + \", \" + bottom_p4 +  \", \" + bottom_p1 + \"))\"\r\n    # top-face\r\n    top_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    top_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_face = \"((\" + top_p1 + \", \" + top_p2 + \", \" + top_p3 + \", \" + top_p4 +  \", \" + top_p1 + \"))\"\r\n    # front-face\r\n    front_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    front_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    front_p3 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    front_p4 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    front_face = \"((\" + front_p1 + \", \" + front_p2 + \", \" + front_p3 + \", \" + front_p4 + \", \" + front_p1 + \"))\"\r\n    # back-face             \r\n    back_p1 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    back_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset) \r\n    back_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset) \r\n    back_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    back_face = \"((\" + back_p1 + \", \" + back_p2 + \", \" + back_p3 + \", \" + back_p4 + \", \" + back_p1 + \"))\"\r\n    # left-face\r\n    left_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p2 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_p4 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_face = \"((\" + left_p1 + \", \" + left_p2 + \", \" + left_p3 + \", \" + left_p4 + \", \" + left_p1 + \"))\"            \r\n    # right-face\r\n    right_p1 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p3 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_p4 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_face = \"((\" + right_p1 + \", \" + right_p2 + \", \" + right_p3 + \", \" + right_p4 + \", \" + right_p1 + \"))\"\r\n    \r\n    cuboid_face = bottom_face + \", \" + top_face + \", \" + front_face + \", \" + back_face + \", \" + left_face + \", \" + right_face\r\n    \r\n    wktLiteral += \"MULTIPOLYGON Z(\"\r\n    try:\r\n        wktLiteral += cuboid_face\r\n    except e:\r\n        return e\r\n    print(cuboid_face)\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\"\r\n    wktLiteral += \"</rdf:Description>\"\r\n    wktLiteral += \"</sf:MultiPolygon>\"\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT(geo_data):\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geo_data\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\n#####\r\nres = []\r\nfor geo_obj in geo_lst:\r\n    geo_data = geo_obj[0];\r\n    name = geo_obj[1];\r\n    geometryType = geo_obj[2];\r\n    \r\n    if(geometryType.upper() == \"MULTIPOLYGON_ROTATION\"):\r\n        res.append(multipolygonInRotation2WKT(geo_data))\r\n        \r\n    if(geometryType.upper() == \"MULTIPOLYGON\"):\r\n        res.append(multipolygon2WKT(geo_data))\r\n    \r\n    if(geometryType.upper() == \"MULTIPOLYGON_SPHERE\"):\r\n        res.append(sphere2WKT(geo_data))\r\n    \r\n    if(geometryType.upper() == \"POLYGON\"):\r\n        res.append(polygon2WKT(geo_data))\r\n    \r\n    if(geometryType.upper() == \"LINESTRING\"):\r\n        res.append(lineString2WKT(geo_data))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "09412fe94eab41e68c31fa0307c3b82e",
      "Inputs": [
        {
          "Id": "81de61bb84f64c28b3d884c9f4d6d728",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39772af1835e467982718d7ae096579e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52019d2e5d174dc48b12fdce6846d9c2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34aab1073991461ea21aecb8f98aa0f5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5b79af2b71e44701b490b40587de9acd",
      "Inputs": [
        {
          "Id": "0c38a73373df435f99aec06780c034e3",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1c2d91aa7364c148b010d298fbd927d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "centroid = Point.ByCoordinates(-7, -3, 6);",
      "Id": "fe789f3241d045fa93cd43927766996a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "54af3a10f358403581616a917cf3ed01",
          "Name": "",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Sphere.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "34c3ec044e2643248116b32cbc85bc9f",
      "Inputs": [
        {
          "Id": "632a2dc32701404ab008e9431b125a7e",
          "Name": "centerPoint",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e41aed353cf145f5abb0e76d71c7430e",
          "Name": "radius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fe36685da954660a004fb6cb7cd2e82",
          "Name": "Sphere",
          "Description": "Sphere",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Solid Sphere cetered at the input Point, with given radius.\n\nSphere.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Sphere"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,double,int",
      "Id": "06493a8f57ad4782bdb9ae1e15d0525d",
      "Inputs": [
        {
          "Id": "ed6464b138724d0181567f790d503ba9",
          "Name": "inputGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88afce6dde2d49c8a4575023e54d3e1c",
          "Name": "tolerance",
          "Description": "double\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b77c5dddab0489681430a73b9fa7d03",
          "Name": "maxGridLines",
          "Description": "int\nDefault value : 512",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28ec952b8c534477af8a2d155982a262",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert a Geometry object such as a Solid or Surface into a Mesh. The resolution of the mesh is determined by the Dynamo render precision\n\nMesh.ByGeometry (inputGeometry: Geometry, tolerance: double = -1, maxGridLines: int = 512): Mesh"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.TriangleCentroids",
      "Id": "99ce511072864923816a141a10b068e5",
      "Inputs": [
        {
          "Id": "9fdd6fad340a474ca5681bb7d9c327a1",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "608c5793ace947c5a5a77c1190e48361",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns Triangle Centroids\n\nMesh.TriangleCentroids ( ): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Explode",
      "Id": "991bc6014911493e84623456f751195a",
      "Inputs": [
        {
          "Id": "0bca9ddb0fc7416a8910320ba64cc086",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "781fcb4195b84639946d3e5b2f931bbb",
          "Name": "Mesh[]",
          "Description": "Mesh[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts Mesh triangles to individual meshes and returns them.\n\nMesh.Explode ( ): Mesh[]"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "1a9767da-639d-4cb0-83a8-d568b124b464 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "1a9767da639d4cb083a8d568b124b464",
      "Inputs": [
        {
          "Id": "43b45844e3c8420d97926d7e524b33b7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30f615e036db458eb0cc3d0779b6a77f",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "ac7baec18464456eaf2c0d5b50d4030f",
      "Inputs": [
        {
          "Id": "878e021702b140fab60601c5718d1a24",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "943982f8da9b425996dcc1273478a2e0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "673ec465da944a4ea629096e7ff5a635",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "7dcb24a2ce40468685c26d7890aa99f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdb8567c84eb4afaafbdf30e0e106dd2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "list;\npol = list[0];",
      "Id": "4600ed00ce004c5ab079a769be303029",
      "Inputs": [
        {
          "Id": "e96bbdfa8caf47a5a30a41e6581c4821",
          "Name": "list",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4c1a6300ff04f47a2dc46a52aa8297d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "400bcf4ffdda48e9bb00243cebdd7f54",
          "Name": "",
          "Description": "pol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5f0e1deb219e45e28b2a6b9fa3e9792f",
      "Inputs": [
        {
          "Id": "2fcd0388ae9b49c999f225a3ef51d25c",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57159d27bec049a8a2866d4e12adf284",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Vertices",
      "Id": "67f1909d2ab7455c943e505eb46f0258",
      "Inputs": [
        {
          "Id": "7b5fb97d61454deabeca57cd9107959c",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab30e4972dee4b53b8c95c8e222a6ccd",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts the Mesh vertices to Points, and returns them\n\nMesh.Vertices ( ): Point[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\nclr.AddReference('MeshToolkit')\r\nfrom Autodesk.Dynamo.MeshToolkit import *\r\n\r\n# Common Geometry Types\r\nPOINT = \"POINT\";\r\nMULTIPOINT = \"MULTIPOINT\";\r\nLINESTRING = \"LINESTRING\";\r\nMULTILINESTRING = \"MULTILINESTRING\";\r\nPOLYGON = \"POLYGON\";\r\nMULTIPOLYGON = \"MULTIPOLYGON\"\r\nMULTIPOLYGON_ROTATION = \"MULTIPOLYGON_ROTATION\"\r\nSPHERE = \"MULTIPOLYGON_SPHERE\"\r\nGEOMETRYCOLLECTION = \"GEOMETRYCOLLECTION\";\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nNUM_MULTIPOLYGON = 10\r\nNUM_POLYGON = 10\r\nNUM_LINESTRING = 10\r\nNUM_POINT = 10\r\n\r\n# Input \r\nNUM_MULTIPOLYGON = IN[0]\r\n#NUM_MULTIPOLYGON = 50\r\n#num = IN[1]\r\n\r\n# output container\r\ngeo_type_lst = []\r\ngeo_lst = []\r\n\r\n# Point\r\n\r\n# LineString\r\n\"\"\"\r\nc=1\r\ngeo_data = Arc.ByThreePoints( Point.ByCoordinates(20, 20, 2),\r\n                            Point.ByCoordinates(25, 25, 2),\r\n                            Point.ByCoordinates(40, 10, 2))\r\ngeo_name = LINESTRING + str(c)\r\ngeo_type = LINESTRING\r\ngeo_lst.append((geo_data, geo_name, geo_type))\r\n\"\"\"\r\n\r\n# Polygon\r\n\r\n# Multipolygon\r\n\"\"\"\r\ni=1\r\nc=1\r\nfor i in range(-NUM_MULTIPOLYGON, NUM_MULTIPOLYGON, 4):\r\n    c+=1\r\n    p1 = Point.ByCoordinates(i, i, 0)\r\n    p2 = Point.ByCoordinates(3+i, 3+i, 3)\r\n    \r\n    geo_data = Cuboid.ByCorners(p1, p2)\r\n    geo_name = MULTIPOLYGON + str(c)\r\n    geo_type = MULTIPOLYGON\r\n    geo_lst.append((geo_data, geo_name, geo_type))\r\n\r\ni=1\r\nfor i in range(-NUM_MULTIPOLYGON, NUM_MULTIPOLYGON, 4):\r\n    c+=1\r\n    j = i + 10\r\n    p1 = Point.ByCoordinates(i, j, 0)\r\n    p2 = Point.ByCoordinates(3+i, 3+j, 3)\r\n    \r\n    geo_data = Cuboid.ByCorners(p1, p2)\r\n    geo_name = MULTIPOLYGON + str(c)\r\n    geo_type = MULTIPOLYGON\r\n    geo_lst.append((geo_data, geo_name, geo_type))\r\n\"\"\"\r\n#################################################\r\n# Polygon\r\np = 1\r\npt_lst = [Point.ByCoordinates(-4, 6, 0),\r\n          Point.ByCoordinates(-9, 6, 3),  \r\n          Point.ByCoordinates(-7, 6, 6)]\r\ngeo_data_p1 = pt_lst\r\ngeo_name_p1 = POLYGON + str(p)\r\ngeo_type_p1 = POLYGON\r\ngeometry_p1 = Surface.ByPerimeterPoints(pt_lst)\r\ngeo_lst.append((geo_data_p1, geo_name_p1, geo_type_p1, geometry_p1))\r\n\r\n\r\np = 2\r\npt_lst = [Point.ByCoordinates(-4, 10, 0),\r\n          Point.ByCoordinates(-9, 10, 3),  \r\n          Point.ByCoordinates(-7, 8, 6)]\r\ngeo_data_p2 = pt_lst\r\ngeo_name_p2 = POLYGON + str(p)\r\ngeo_type_p2 = POLYGON\r\ngeometry_p2 = Surface.ByPerimeterPoints(pt_lst)\r\ngeo_lst.append((geo_data_p2, geo_name_p2, geo_type_p2, geometry_p2))\r\n#################################################\r\n# Cubes\r\nc = 1\r\np11 = Point.ByCoordinates(0, 0, 0)\r\np12 = Point.ByCoordinates(3, 3, 3)\r\ngeo_data1 = Cuboid.ByCorners(p11, p12)\r\ngeo_name1 = MULTIPOLYGON + str(c)\r\ngeo_type1 = MULTIPOLYGON\r\n#geo_tag = Tag.CreateTag()\r\ngeo_lst.append((geo_data1, geo_name1, geo_type1))\r\n\r\nc = 2\r\np21 = Point.ByCoordinates(3, 3, 3)\r\np22 = Point.ByCoordinates(6, 6, 6)\r\ngeo_data2 = Cuboid.ByCorners(p21, p22)\r\ngeo_name2 = MULTIPOLYGON + str(c)\r\ngeo_type2 = MULTIPOLYGON\r\ngeo_lst.append((geo_data2, geo_name2, geo_type2))\r\n\r\nc = 3\r\np31 = Point.ByCoordinates(6, 6, 3)\r\np32 = Point.ByCoordinates(9, 9, 6)\r\ngeo_data3 = Cuboid.ByCorners(p31, p32)\r\ngeo_name3 = MULTIPOLYGON + str(c)\r\ngeo_type3 = MULTIPOLYGON\r\ngeo_lst.append((geo_data3, geo_name3, geo_type3))\r\n\r\nc = 4\r\np41 = Point.ByCoordinates(-3, 0, 0)\r\np42 = Point.ByCoordinates(-6, -3, 3)\r\ngeo_data4 = Cuboid.ByCorners(p41, p42)\r\ngeo_name4 = MULTIPOLYGON + str(c)\r\ngeo_type4 = MULTIPOLYGON\r\ngeo_lst.append((geo_data4, geo_name4, geo_type4))\r\n\r\nc = 5\r\np51 = Point.ByCoordinates(-4, 0, 0)\r\np52 = Point.ByCoordinates(-7, -3, 3)\r\ngeo_data5 = Cuboid.ByCorners(p51, p52)\r\ngeo_name5 = MULTIPOLYGON + str(c)\r\ngeo_type5 = MULTIPOLYGON\r\ngeo_lst.append((geo_data5, geo_name5, geo_type5))\r\n\r\nc = 6\r\np61 = Point.ByCoordinates(-3, 5, 0)\r\np62 = Point.ByCoordinates(0, 8, 3)\r\ngeo_data6 = Cuboid.ByCorners(p61, p62)\r\ngeo_name6 = MULTIPOLYGON + str(c)\r\ngeo_type6 = MULTIPOLYGON\r\ngeo_lst.append((geo_data6, geo_name6, geo_type6))\r\n\r\nc = 7\r\np71 = Point.ByCoordinates(-8, 5, 0)\r\np72 = Point.ByCoordinates(-5, 8, 3)\r\ngeo_data7 = Cuboid.ByCorners(p71, p72)\r\ngeo_name7 = MULTIPOLYGON + str(c)\r\ngeo_type7 = MULTIPOLYGON\r\ngeo_lst.append((geo_data7, geo_name7, geo_type7))\r\n\r\nc = 8\r\np1 = Point.ByCoordinates(-13, 10, 0)\r\np2 = Point.ByCoordinates(-10, 3, 3)\r\n\r\ncube = Cuboid.ByCorners(p1, p2)\r\nold_cs = CoordinateSystem.Identity()\r\nnew_cs = CoordinateSystem.Identity()\r\nnew_cs2 = new_cs.Rotate(p1, Vector.ByCoordinates(1,0,3), 25)\r\ngeometry = cube.Transform(old_cs, new_cs2)\r\n\r\ngeo_data = geometry.Faces\r\ngeo_name = MULTIPOLYGON + str(c)\r\ngeo_type = MULTIPOLYGON_ROTATION\r\ngeo_lst.append((geo_data, geo_name, geo_type, geometry))\r\n\r\nc = 9\r\np_s = Point.ByCoordinates(-15, 8, 0)\r\np_e = Point.ByCoordinates(-20, 3, 5)\r\ngeo_data = Cuboid.ByCorners(p_s, p_e)\r\ngeo_name = MULTIPOLYGON + str(c)\r\ngeo_type = MULTIPOLYGON\r\ngeo_lst.append((geo_data, geo_name, geo_type))\r\n\r\n#################################################\r\n# Sphere - (c4, c5) \r\ns = 1\r\nc = 10\r\n\r\ncentroid_pt = Point.ByCoordinates(-7, -3, 6)\r\ngeometry = Sphere.ByCenterPointRadius(centroid_pt, radius=3)\r\n\r\nsphere_mesh = Mesh.ByGeometry(geometry)\r\nmesh_lst = Mesh.Explode(sphere_mesh)\r\n\r\nmesh_vert_lst = []\r\nfor mesh in mesh_lst:\r\n    mesh_vert_lst.append(Mesh.Vertices(mesh))\r\n\r\ngeo_data = mesh_vert_lst\r\ngeo_name = MULTIPOLYGON + str(c)\r\ngeo_type = SPHERE\r\ngeo_lst.append((geo_data, geo_name, geo_type, geometry))\r\n\r\n\r\ns = 2\r\nc = 11\r\n\r\ncentroid_pt = Point.ByCoordinates(-20, 3, 5)\r\ngeometry = Sphere.ByCenterPointRadius(centroid_pt, radius=2)\r\n\r\nsphere_mesh = Mesh.ByGeometry(geometry)\r\nmesh_lst = Mesh.Explode(sphere_mesh)\r\n\r\nmesh_vert_lst = []\r\nfor mesh in mesh_lst:\r\n    mesh_vert_lst.append(Mesh.Vertices(mesh))\r\n\r\ngeo_data = mesh_vert_lst\r\ngeo_name = MULTIPOLYGON + str(c)\r\ngeo_type = SPHERE\r\n\r\ngeo_lst.append((geo_data, geo_name, geo_type, geometry))\r\n\r\n#################################################\r\n# LineString\r\nl = 1\r\npt_lst =   [Point.ByCoordinates(10, 10, 0),\r\n            Point.ByCoordinates(5, 5, 0),\r\n            Point.ByCoordinates(5, 3, 0),\r\n            Point.ByCoordinates(-3, 5, 0),\r\n            Point.ByCoordinates(-7, 0, 0),\r\n            Point.ByCoordinates(-12, 6, 0),\r\n            Point.ByCoordinates(-15, 6, 0),\r\n            Point.ByCoordinates(-15, 1, 0)]\r\n\r\ngeo_data_l1 = pt_lst\r\ngeo_name_l1 = LINESTRING + str(l)\r\ngeo_type_l1 = LINESTRING\r\ngeometry_l1 = PolyCurve.ByPoints(pt_lst, False)\r\ngeo_lst.append((geo_data_l1, geo_name_l1, geo_type_l1, geometry_l1))\r\n\r\n# output\r\nOUT = geo_lst\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ed9a22b47c4f467485b00c23697814cc",
      "Inputs": [
        {
          "Id": "36c4e1b3f3a64684bc754fc3a22c8e73",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca0881434dfa48c0b442878a5d001280",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n###########################################################\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n############################################################\r\n# Input\r\ngeo_lst = IN[0]\r\nres_lst = IN[1]\r\nswitch = IN[2]\r\n\r\n#################################################\r\n# Highlighter\r\ncolored_geo_lst = []\r\nif switch:\r\n    color = Color.ByARGB(255,255,0,0) # red\r\n    \r\n    for geo in geo_lst:\r\n        geo_name = geo[1]\r\n        if inList(res_lst, geo_name):  \r\n            geo_data = geo[0]\r\n            colored_geo = ''\r\n            if (geo[2].upper() == \"LINESTRING\" \r\n            or geo[2].upper() == \"POLYGON\"\r\n            or geo[2].upper() == \"MULTIPOLYGON_ROTATION\"\r\n            or geo[2].upper() == \"MULTIPOLYGON_SPHERE\" ):\r\n                colored_geo = GeometryColor.ByGeometryColor(geo[3], color)\r\n            else:\r\n                colored_geo = GeometryColor.ByGeometryColor(geo_data, color)\r\n            colored_geo_lst.append(colored_geo)\r\n\r\n#################################################\r\nOUT = colored_geo_lst\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "15b03d534ea443bc817c75dcd2beca67",
      "Inputs": [
        {
          "Id": "0610d434bae34f388dcbe007bf32e9bb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "456da64da57041e8a3ef104ae8e49a11",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0586be6a83484629a7639335e23f66a2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f961f597dc734b07b2c3b538edfd7d7f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b748c56692a542cf82608f2f5de3368e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0eaa73dd93cf42ccb63b6a16cfabc70e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "7d928407-8cbe-4cc4-976d-171bbf5209a6 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "7d9284078cbe4cc4976d171bbf5209a6",
      "Inputs": [
        {
          "Id": "c9bd05e91cee47d6aa242639a1d9d9c1",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e517b3cf693b41eab56a1e01e74d3567",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "80b16f3f20094a978114d38819afd778",
      "Inputs": [
        {
          "Id": "28406ff61ced4b458435eba731a4fefc",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28d8dfafd9b84e6a9f2e7caf64469b7c",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "",
      "Id": "a526582e5e1b49d8bd36b6bac2d75c86",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n# Input\r\ngeo_lst = IN[0]\r\ngeo_sel_lst = IN[1]\r\nswitch = IN[2]\r\n\r\n\r\ndef inList(geo_sel_lst, geo):\r\n    res = False\r\n    for geo_sel in geo_sel_lst:\r\n        if geo_sel is None:\r\n            break\r\n        if geo_sel.upper() == geo.upper():\r\n            res = True\r\n            break\r\n    return res\r\n#################################################\r\n# Highlighter\r\ncolored_geo_lst = []\r\nif switch:\r\n    color = Color.ByARGB(138,43,226,0) # violet\r\n    for geo in geo_lst:\r\n        geo_name = geo[1]\r\n        if inList(geo_sel_lst, geo_name):  \r\n            geo_data = geo[0]\r\n            colored_geo = ''\r\n            if (geo[2].upper() == \"LINESTRING\" \r\n            or geo[2].upper() == \"POLYGON\" \r\n            or geo[2].upper() == \"MULTIPOLYGON_ROTATION\"):\r\n                colored_geo = GeometryColor.ByGeometryColor(geo[3], color)\r\n            else:\r\n                colored_geo = GeometryColor.ByGeometryColor(geo_data, color)\r\n            colored_geo_lst.append(colored_geo)\r\n\r\n#################################################\r\nOUT = colored_geo_lst\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c302d8cb07164d148faa4c41aaa1d95e",
      "Inputs": [
        {
          "Id": "70e5cb9854cf4853bacb893114ea05c7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50de933f946b4adf9404500c7659cc24",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ba3777f47f4ac997afb221c08a805d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45aaf9ee46ce4e6b9b360474e42a00f7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "fe320baea1a947dc9f3209b013ba191e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "439de5740ce84a57a04ad937f1fd2850",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "POINT = \"POINT\";\nMULTIPOINT = \"MULTIPOINT\";\nLINESTRING = \"LINESTRING\";\nMULTILINESTRING = \"MULTILINESTRING\";\nPOLYGON = \"POLYGON\";\nMULTIPOLYGON = \"MULTIPOLYGON\";\nMULTIPOLYGON_ROTATION = \"MULTIPOLYGON_ROTATION\";\nSPHERE = \"MULTIPOLYGON-SPHERE\";\nGEOMETRYCOLLECTION = \"GEOMETRYCOLLECTION\";\ngeo_sel_lst=\n[\"MULTIPOLYGON5\"];",
      "Id": "fb87db2584334ccaae2d4b50cf6a3ee0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ac84634dea9f4c41a9247983a23630f2",
          "Name": "",
          "Description": "POINT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce7cb61794f24c2d9a1d1fdf6589bbca",
          "Name": "",
          "Description": "MULTIPOINT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3de6c97bbcd046b5a7bd021f6a163333",
          "Name": "",
          "Description": "LINESTRING",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49af685fa0f44b1eb87185e007f69b92",
          "Name": "",
          "Description": "MULTILINESTRING",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "872f922d080545c786164124979cb896",
          "Name": "",
          "Description": "POLYGON",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40cbe787d5a24910a7fe45dc11d3620a",
          "Name": "",
          "Description": "MULTIPOLYGON",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f11461f9a64fd0a866fb96359685f4",
          "Name": "",
          "Description": "MULTIPOLYGON_ROTATION",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70b4a7f170d74fada485a03f75d8faf3",
          "Name": "",
          "Description": "SPHERE",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0173631215bf4f8cb47871633ccb71e6",
          "Name": "",
          "Description": "GEOMETRYCOLLECTION",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b839acc4d3f42a787f66ce06678200b",
          "Name": "",
          "Description": "geo_sel_lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "cf3db25f-6480-433e-bb3b-8afa03322ecf Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "cf3db25f6480433ebb3b8afa03322ecf",
      "Inputs": [
        {
          "Id": "cc24c35c21394c76905680aa0f6f12be",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "769a888447694d52843db4a01a65b6da",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eee283b1c55244568a077e84693ca07b",
      "Inputs": [
        {
          "Id": "ab6ed296fc8940a9b02d84cccfd388f2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "066b3c0115a94732b420712c189c3c84",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "1757a922-9ef3-11eb-a8b3-0242ac130003",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "0b8e35ebe34a4a37bb7f2d6057e89d6f",
      "Inputs": [
        {
          "Id": "396fb5bd78f14fcbbe273281516b9e1a",
          "Name": "view",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f28bca006da0436d907e74f6ddfcc47c",
          "Name": "point",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44b3b3ae4a7e42638075a0181eef0ec8",
          "Name": "content",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "587b2434faa54423b730bebc2838078d",
          "Name": "textType",
          "Description": "var[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ac38f7a2918493d925deed12cd8574a",
          "Name": "horAlign",
          "Description": "string\nDefault value : \"Center\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06a66bcae9e24b0cabbdd501fdee0968",
          "Name": "track",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77948e6be2604ef3ba930f7aedb7c01f",
          "Name": "do",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61a6577f0d3948069ecdf7c061b9e33b",
          "Name": "textNote",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Places a text note at a given point in the view. View, text type and content can either be a single item for all points or the same length as the number of points.\r\nSet track to false if you'd like to place notes on every run. Has Do option"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Point.ByCoordinates(20, 20, 0);\n\"text\";\n\"String\";",
      "Id": "3565fe566d7e458cb57f96293feb8f1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4129e041c498492682d40af856f46bb3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08617312f3984ba3ba87333c0c5dcd7d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9db067cbbcc44c33a851a767533fbe92",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nswitch = IN[0]\r\nval_lst = []\r\n\r\n################## point ####################\r\n#pt_T1 = [Point.ByCoordinates(-9.9367610954, 10.2776839486, 2.9789203651), Point.ByCoordinates(-10.8388482396, 10.5084124645, 3.0356427683)]\r\n#pt_T2 = [Point.ByCoordinates(-8.8510906952, 10, 2.9106544171), Point.ByCoordinates(-5.3451005024, 9.1032663317, 2.6902010049)]\r\n\r\npt_T1 = [GeometryColor.ByGeometryColor(\r\n        Point.ByCoordinates(-10.0021246192, 3.602549543, 0), \r\n        Color.ByARGB(255,255,0,0))]\r\n\"\"\"\r\npt_T2 = [GeometryColor.ByGeometryColor(\r\n        Point.ByCoordinates(-8.8510906952, 10, 2.9106544171), \r\n        Color.ByARGB(0, 0, 255,0)),      \r\n        GeometryColor.ByGeometryColor(\r\n        Point.ByCoordinates(-5.3451005024, 9.1032663317, 2.6902010049), \r\n        Color.ByARGB(0, 0, 255,0))]\r\n\"\"\"         \r\npt_lst = [pt_T1]\r\nval_lst.append(pt_lst) \r\n\r\n#colored_pt = GeometryColor.ByGeometryColor(pt, Color.ByARGB(255,255,0,0))\r\n#val_lst.append(colored_pt)   \r\n#############################################\r\n\r\n################## plane ####################\r\npl_A = Plane.ByThreePoints(\r\n                            Point.ByCoordinates(-7.362129778782238, 4.457707263472535,           2.120709926260745),\r\n                            Point.ByCoordinates(-10.168645983334033, 10.801861772729085, 3.05621532777801),\r\n                            Point.ByCoordinates(-12.915677008332986, 9.599069113635458, 2.971892336110995)\r\n                            )\r\n                            \r\npl_B = Plane.ByThreePoints(Point.ByCoordinates(-4.0, 10.0, 0.0),\r\n                            Point.ByCoordinates(-9.0, 10.0, 3.0),\r\n                            Point.ByCoordinates(-7.0, 8.0, 6.0))\r\n                            \r\n#val_lst.append([pl_A, pl_B])                          \r\n#############################################\r\n\r\n############### multipolygon ################\r\n\"\"\"\r\npt_face1 = [\r\n(-7.362129778782238, 4.457707263472535, 2.120709926260745),\r\n(-10.168645983334033, 10.801861772729085, 3.05621532777801), \r\n(-12.915677008332986, 9.599069113635458, 2.971892336110995), \r\n(-10.109160803781192, 3.254914604378909, 2.03638693459373)]\r\n\r\npt_face2 = [\r\n(-10.252968975001048, 11.202792659093626, 0.08432299166701496),\r\n(-7.446452770449254, 4.858638149837077, -0.8511824098502498),\r\n(-10.193483795448207, 3.6558454907434506, -0.9355054015172648),\r\n(-13.000000000000002, 10.0, 0.0)]\r\n\"\"\"\r\npt_face3 = [\r\n(-10.109160803781192, 3.254914604378909, 2.03638693459373), \r\n(-10.193483795448207, 3.6558454907434506, -0.9355054015172648), \r\n(-7.446452770449254, 4.858638149837077, -0.8511824098502498),\r\n(-7.362129778782238, 4.457707263472535, 2.120709926260745)]\r\n\r\npt_face4 = [\r\n(-12.915677008332986, 9.599069113635458, 2.971892336110995), \r\n(-13.000000000000002, 10.0, 0.0), \r\n(-10.193483795448207, 3.6558454907434506, -0.9355054015172648), \r\n(-10.109160803781192, 3.254914604378909, 2.03638693459373)]\r\n\"\"\"\r\npt_face5 = [\r\n(-10.168645983334033, 10.801861772729085, 3.05621532777801), \r\n(-10.252968975001048, 11.202792659093626, 0.08432299166701496), \r\n(-13.000000000000002, 10.0, 0.0),\r\n(-12.915677008332986, 9.599069113635458, 2.971892336110995)]\r\n\r\npt_face6 = [\r\n(-7.362129778782238, 4.457707263472535, 2.120709926260745), \r\n(-7.446452770449254, 4.858638149837077, -0.8511824098502498),\r\n(-10.252968975001048, 11.202792659093626, 0.08432299166701496),\r\n(-10.168645983334033, 10.801861772729085, 3.05621532777801)]\r\n\"\"\"\r\npt_face_lst = [pt_face3, pt_face4]\r\npoly_lst = []\r\n\r\nfor pt_face in pt_face_lst:\r\n    pol_pt_lst =[]\r\n    for pt in pt_face:\r\n        pol_pt_lst.append(Point.ByCoordinates(pt[0], pt[1], pt[2]))\r\n    poly_lst.append(Surface.ByPerimeterPoints(pol_pt_lst))\r\n        \r\nval_lst.append(poly_lst)     \r\n#############################################\r\n\r\n############## linestring ##################\r\npt_lst =   [Point.ByCoordinates(-7, 0, 0),\r\n            Point.ByCoordinates(-12, 6, 0)]\r\n\r\nline_string = PolyCurve.ByPoints(pt_lst, False)\r\ncolored_line_string = GeometryColor.ByGeometryColor(line_string, Color.ByARGB(255,255,0,0))\r\nval_lst.append(colored_line_string)  \r\n#############################################\r\n\r\nif switch :\r\n    OUT = val_lst\r\nelse:\r\n    OUT = []\r\n\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fc981453b0794914b817ce8ea9bbb909",
      "Inputs": [
        {
          "Id": "8ec132a0dceb427787def776937d93b5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd9461dd154442f5ad3f4455b21d284f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "623155df-950d-42d8-bcb2-aea95f3f92b2 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "623155df950d42d8bcb2aea95f3f92b2",
      "Inputs": [
        {
          "Id": "ff3d8b52f1d24134a8305e8e54aa2660",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f58543cddf42401ab6dcd2a38fe81382",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "3fda2bb02e894210b2737c036cf51d36",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2ddf3243c194b06ae99504b94c5581b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "11aaf64f4c974045b73d59b169681833",
      "Inputs": [
        {
          "Id": "dcabbbb6db9f479bbfd19b9899eef3f5",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e9c417c0e1c4d9a97636288cf39e80e",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "871f675867674a7785c7487d610873d9",
      "Inputs": [
        {
          "Id": "46a3b423c77747f4a0d1008d648a03ac",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88af41fe43f9439eaf454f8435dc2439",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "f4c68ed56fdd401c858255578208df3b",
      "End": "6f433e359e584c96b5cd746da1837256",
      "Id": "08f2bb3aa25d4b2f83b3f1fc421c70f6"
    },
    {
      "Start": "9e6a623c31214ec7a86d96dce9d36894",
      "End": "77bc87c15e0546b0a908a7568c2c03bf",
      "Id": "526baebac1aa46cd9758d264da03620f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "949291cdd50249a388dcd7b15fdc6e59",
      "Id": "9251985f228d4dfea1fec293f4630d7f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "28406ff61ced4b458435eba731a4fefc",
      "Id": "195068a61adf47b09f377ba12b652430"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "456da64da57041e8a3ef104ae8e49a11",
      "Id": "2a436f5f6bd347b0827024ae0df5f9da"
    },
    {
      "Start": "8bbd33f439eb4c1ea76d5b4863a65de8",
      "End": "b1c734acd6cd42a8a12c95047633db6a",
      "Id": "c5723a7376674a2585a10265df162304"
    },
    {
      "Start": "55939f003a0d408681622652bc9c72b6",
      "End": "39772af1835e467982718d7ae096579e",
      "Id": "3e663a36f23348cc9feca9cefff9208d"
    },
    {
      "Start": "0262bdaa335446919b24831071029ab6",
      "End": "52019d2e5d174dc48b12fdce6846d9c2",
      "Id": "face3269eeaa443e84ad324942c0c913"
    },
    {
      "Start": "e9a2d06a98f847af8d75d1e5e75cddce",
      "End": "4662dbdc67f64d9eaa25bb84b6cf3169",
      "Id": "a9e306de17cb4f5293d201edc3a532fd"
    },
    {
      "Start": "bd06b513d42a4ec5a2267a0de6b95808",
      "End": "e7e61833af494128a48af19e439a1388",
      "Id": "0146523d4cfb4c6a9b202cb6bd2283d1"
    },
    {
      "Start": "1f0cb819129547a99f848b267ec00c25",
      "End": "484d2768b2d0421fb401750cf2bdfaa2",
      "Id": "53cf17b7f5f94f8ab291112a26a4d565"
    },
    {
      "Start": "c9de4ac4aa7645d791ba8d9f8a1bd097",
      "End": "e0b36f25ff0a43feab340b908c2720e4",
      "Id": "64f4ea8527044d7fa1ce2d2ace55b75e"
    },
    {
      "Start": "e353654a2d624523b843b76fc1b26eac",
      "End": "3dd15c6a7ab447d2bb0a1ceb5546319b",
      "Id": "30e5340af7104126b9b18346c6e0babc"
    },
    {
      "Start": "3aea9da347654932aa87ba43fe0a3f42",
      "End": "fe5985acf0cd4a6aafecc026805c66ea",
      "Id": "220f7f728ba74abebec777ccb6c7433c"
    },
    {
      "Start": "abc883ea418c4c88a5dd5e0788732297",
      "End": "fff1532b9c694128abe53096193301d5",
      "Id": "eb21715eef1a470c99e6389676689199"
    },
    {
      "Start": "e4b3930d4fa043c3982d30a182ffdd14",
      "End": "36c4e1b3f3a64684bc754fc3a22c8e73",
      "Id": "d3b0457172f54657bba638bfe44e3624"
    },
    {
      "Start": "34aab1073991461ea21aecb8f98aa0f5",
      "End": "0c38a73373df435f99aec06780c034e3",
      "Id": "0ae45fdea6744963836f781b33242bda"
    },
    {
      "Start": "34aab1073991461ea21aecb8f98aa0f5",
      "End": "1bf83e6357a44ed88c6b44b3703edca8",
      "Id": "a8d478b9cf7f4922b69aed04d323fd25"
    },
    {
      "Start": "5fe36685da954660a004fb6cb7cd2e82",
      "End": "ed6464b138724d0181567f790d503ba9",
      "Id": "7f60a7eda6d24006aa5d17b56eef9f45"
    },
    {
      "Start": "28ec952b8c534477af8a2d155982a262",
      "End": "0bca9ddb0fc7416a8910320ba64cc086",
      "Id": "43eb2fe7d20c4db98f32ab00f3b5f642"
    },
    {
      "Start": "608c5793ace947c5a5a77c1190e48361",
      "End": "878e021702b140fab60601c5718d1a24",
      "Id": "5be447503c564ee0ac334ff45274693e"
    },
    {
      "Start": "781fcb4195b84639946d3e5b2f931bbb",
      "End": "46a3b423c77747f4a0d1008d648a03ac",
      "Id": "0ed6c57250844177933398151fb03647"
    },
    {
      "Start": "fdb8567c84eb4afaafbdf30e0e106dd2",
      "End": "943982f8da9b425996dcc1273478a2e0",
      "Id": "b897c8f7c7904c33b586e427b156da66"
    },
    {
      "Start": "400bcf4ffdda48e9bb00243cebdd7f54",
      "End": "dcabbbb6db9f479bbfd19b9899eef3f5",
      "Id": "fdf31858a2074edfa6a702d8fe7ceeed"
    },
    {
      "Start": "57159d27bec049a8a2866d4e12adf284",
      "End": "43b45844e3c8420d97926d7e524b33b7",
      "Id": "51fea2b0cdae4793b7b5e01c3f58d543"
    },
    {
      "Start": "ab30e4972dee4b53b8c95c8e222a6ccd",
      "End": "2fcd0388ae9b49c999f225a3ef51d25c",
      "Id": "b532934f0cec4274b637159ef1b4082c"
    },
    {
      "Start": "ca0881434dfa48c0b442878a5d001280",
      "End": "81de61bb84f64c28b3d884c9f4d6d728",
      "Id": "18e4f55e4250493cac3b876b57939729"
    },
    {
      "Start": "ca0881434dfa48c0b442878a5d001280",
      "End": "0610d434bae34f388dcbe007bf32e9bb",
      "Id": "add43fcd2bdd4179960c32a126c932ef"
    },
    {
      "Start": "ca0881434dfa48c0b442878a5d001280",
      "End": "70e5cb9854cf4853bacb893114ea05c7",
      "Id": "5be0c538eacb44209b597c6243302e4e"
    },
    {
      "Start": "f961f597dc734b07b2c3b538edfd7d7f",
      "End": "c9bd05e91cee47d6aa242639a1d9d9c1",
      "Id": "2bc0ff01ba8c4808bfdf8af214c51c69"
    },
    {
      "Start": "0eaa73dd93cf42ccb63b6a16cfabc70e",
      "End": "0586be6a83484629a7639335e23f66a2",
      "Id": "fa71eb83bee443d5b759a30955de3274"
    },
    {
      "Start": "28d8dfafd9b84e6a9f2e7caf64469b7c",
      "End": "ad16ba208c4a435eb9c34e51e4bb261f",
      "Id": "c734f4813c6743ada61c1ef707840e40"
    },
    {
      "Start": "45aaf9ee46ce4e6b9b360474e42a00f7",
      "End": "cc24c35c21394c76905680aa0f6f12be",
      "Id": "29e2ae9dcc914571a5b8205a13c4da66"
    },
    {
      "Start": "439de5740ce84a57a04ad937f1fd2850",
      "End": "98ba3777f47f4ac997afb221c08a805d",
      "Id": "fab9ddb5e7594ffe890b85d213247275"
    },
    {
      "Start": "7b839acc4d3f42a787f66ce06678200b",
      "End": "50de933f946b4adf9404500c7659cc24",
      "Id": "f0f625a38a854a95bf5cdae6535b6ff2"
    },
    {
      "Start": "769a888447694d52843db4a01a65b6da",
      "End": "ab6ed296fc8940a9b02d84cccfd388f2",
      "Id": "9ed16bddc74148e79441e963cb516090"
    },
    {
      "Start": "4129e041c498492682d40af856f46bb3",
      "End": "f28bca006da0436d907e74f6ddfcc47c",
      "Id": "0a65835f05fb4214ba1395f779ec3380"
    },
    {
      "Start": "08617312f3984ba3ba87333c0c5dcd7d",
      "End": "44b3b3ae4a7e42638075a0181eef0ec8",
      "Id": "31ad90912c0e471582789a2d87595de2"
    },
    {
      "Start": "9db067cbbcc44c33a851a767533fbe92",
      "End": "587b2434faa54423b730bebc2838078d",
      "Id": "a103cd3aaadb40329823b228a568ff98"
    },
    {
      "Start": "cd9461dd154442f5ad3f4455b21d284f",
      "End": "ff3d8b52f1d24134a8305e8e54aa2660",
      "Id": "def0abbcc0df4daa961c77538f2a36c6"
    },
    {
      "Start": "c2ddf3243c194b06ae99504b94c5581b",
      "End": "8ec132a0dceb427787def776937d93b5",
      "Id": "41f8664d2a9540ff981921c4ac5776a5"
    },
    {
      "Start": "1e9c417c0e1c4d9a97636288cf39e80e",
      "End": "7b5fb97d61454deabeca57cd9107959c",
      "Id": "87464f76ab60488ab004f0941555a213"
    },
    {
      "Start": "88af41fe43f9439eaf454f8435dc2439",
      "End": "e96bbdfa8caf47a5a30a41e6581c4821",
      "Id": "9b853b9e1e4e4873a245e351e5ccd6b0"
    }
  ],
  "Dependencies": [
    "1757a922-9ef3-11eb-a8b3-0242ac130003"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "MeshToolkit",
      "Version": "3.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "06493a8f57ad4782bdb9ae1e15d0525d",
        "99ce511072864923816a141a10b068e5",
        "991bc6014911493e84623456f751195a",
        "67f1909d2ab7455c943e505eb46f0258"
      ]
    },
    {
      "Name": "TextNoteByPointAndDo",
      "Version": "0.0.1",
      "ReferenceType": "Package",
      "Nodes": [
        "0b8e35ebe34a4a37bb7f2d6057e89d6f"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.8.0.2471",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -35.670654296875,
      "EyeY": 14.421408653259277,
      "EyeZ": -12.73851203918457,
      "LookX": 24.433921813964844,
      "LookY": -11.571124076843262,
      "LookZ": 11.130826950073242,
      "UpX": 0.19516484439373016,
      "UpY": 0.97625726461410522,
      "UpZ": 0.093982324004173279
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "RDF Wrapper (Python Script)",
        "Id": "e00054a13da24212ab4540997633798f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1878.7956840799077,
        "Y": 776.59391571718618
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.FileExists",
        "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -105.85299614696385,
        "Y": 1083.9036861039187
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "963c470715ed4f5b815704780b1b964a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -370.79370799966853,
        "Y": 1088.165260561291
      },
      {
        "ShowGeometry": true,
        "Name": "Query Result Viewer",
        "Id": "aef00e0d9cbc4c89bc624f16784d0389",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 648.369461593857,
        "Y": 1076.6639164500605
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3caf2c5d39a14bb8a8d117a845916766",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 124.56095111529692,
        "Y": 1079.8241742550795
      },
      {
        "ShowGeometry": true,
        "Name": "Polygon1-Name",
        "Id": "c5ca528b4d9f4975bf11edd564038195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1620.9406894054739,
        "Y": 2874.9670032902595
      },
      {
        "ShowGeometry": false,
        "Name": "Points",
        "Id": "8cc6c1fb61484b86bab82908655d3df0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.47763177514014,
        "Y": 145.72932343491163
      },
      {
        "ShowGeometry": false,
        "Name": "PolygonCoordList1",
        "Id": "ff616aa35b194fbfa265d2a312b357bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 399.18742166735035,
        "Y": 377.74630311816816
      },
      {
        "ShowGeometry": false,
        "Name": "PolygonCoordList2",
        "Id": "20f595b21050444cad303c1015c8207f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 400.52585855685845,
        "Y": 573.687438856212
      },
      {
        "ShowGeometry": true,
        "Name": "RDF Prefixes",
        "Id": "94e1fb21689642b9b5fa86b874146ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1068.7662714437977,
        "Y": 99.67744193056717
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "c35aef94b79f494486311eadd2b8352d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2309.0891641374765,
        "Y": 634.84558294639987
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "bc6e3de400aa462da2f128593313d246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2577.0640129683261,
        "Y": 678.45717036048973
      },
      {
        "ShowGeometry": true,
        "Name": "Notes",
        "Id": "29d4977ffd5a4fbc99b46521c03c224b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 397.40129175083518,
        "Y": 1999.1791039988939
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "15a7732f6cb04dd091354990f47294cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2563.8777472191923,
        "Y": 564.15582665213708
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6a6b21fb028f4604bb96288628d53ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2910.7745709309484,
        "Y": 679.61245226103949
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "707d96c4b0c447fab11fd20d86754199",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 303.59339538174788,
        "Y": 1078.3086938140048
      },
      {
        "ShowGeometry": false,
        "Name": "CubeCoord + Length",
        "Id": "26b91f1a142e42539c8751f65ccacf8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 395.1897705469745,
        "Y": 766.8269594917864
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "3f57e74dd731444791e46505ab0dfb81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 185.38526434276787,
        "Y": 1217.3573574995726
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "4e3575612a134261972d058ad1f6bbdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2308.1435146894951,
        "Y": 542.91048628015517
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "6f5992239c4844a3884b639772e60a4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1842.0627296704188,
        "Y": 2899.5315994543926
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2fc07c798e1b4ebf958f7ff659859e87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1066.5491876748795,
        "Y": 652.86481600013815
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter",
        "Id": "09412fe94eab41e68c31fa0307c3b82e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1440.2098752967229,
        "Y": 752.12390230051085
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "5b79af2b71e44701b490b40587de9acd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1874.9528663836177,
        "Y": 385.43824957103016
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fe789f3241d045fa93cd43927766996a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1564.8265591961,
        "Y": 2454.8232832346539
      },
      {
        "ShowGeometry": true,
        "Name": "Sphere.ByCenterPointRadius",
        "Id": "34c3ec044e2643248116b32cbc85bc9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2016.1837134636362,
        "Y": 2454.5167866796564
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.ByGeometry",
        "Id": "06493a8f57ad4782bdb9ae1e15d0525d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2287.3297543721942,
        "Y": 2453.9236986681822
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.TriangleCentroids",
        "Id": "99ce511072864923816a141a10b068e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2704.5040967480231,
        "Y": 2476.4870630378346
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.Explode",
        "Id": "991bc6014911493e84623456f751195a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2704.2183783633241,
        "Y": 2715.2160683024508
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "1a9767da639d4cb083a8d568b124b464",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4030.6768708294403,
        "Y": 2715.7349749745872
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "ac7baec18464456eaf2c0d5b50d4030f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3150.8430820017825,
        "Y": 2475.5002847314272
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7dcb24a2ce40468685c26d7890aa99f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3605.5495460018892,
        "Y": 2558.5890275799416
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "4600ed00ce004c5ab079a769be303029",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3064.8516635374367,
        "Y": 2703.7585701536836
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "5f0e1deb219e45e28b2a6b9fa3e9792f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3579.1239516259379,
        "Y": 2778.8550629850788
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.Vertices",
        "Id": "67f1909d2ab7455c943e505eb46f0258",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3339.8822600883382,
        "Y": 2736.2567778736084
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Generator",
        "Id": "ed9a22b47c4f467485b00c23697814cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1091.3729483448258,
        "Y": 777.73253096469057
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "15b03d534ea443bc817c75dcd2beca67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1298.2347701476549,
        "Y": 1080.0248540865045
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "b748c56692a542cf82608f2f5de3368e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1055.9621214249971,
        "Y": 1082.8758719607654
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "7d9284078cbe4cc4976d171bbf5209a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1578.3173409259414,
        "Y": 1090.5859776891257
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "80b16f3f20094a978114d38819afd778",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -205.62373567648672,
        "Y": 1235.1205515028512
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a526582e5e1b49d8bd36b6bac2d75c86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -877.0,
        "Y": 2347.0
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Selector",
        "Id": "c302d8cb07164d148faa4c41aaa1d95e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1540.4519388295203,
        "Y": 1548.524383985196
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "fe320baea1a947dc9f3209b013ba191e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1056.6697073170694,
        "Y": 1822.1584798825461
      },
      {
        "ShowGeometry": true,
        "Name": "Selection Board",
        "Id": "fb87db2584334ccaae2d4b50cf6a3ee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1035.0301963989912,
        "Y": 1507.4937252966283
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "cf3db25f6480433ebb3b8afa03322ecf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1791.6832309173303,
        "Y": 1542.1084056506361
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "eee283b1c55244568a077e84693ca07b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2047.8547178748104,
        "Y": 1546.380814382976
      },
      {
        "ShowGeometry": true,
        "Name": "TextNoteByPointAndDo",
        "Id": "0b8e35ebe34a4a37bb7f2d6057e89d6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3004.75605720519,
        "Y": 1387.5340988060302
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3565fe566d7e458cb57f96293feb8f1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2540.4903746204895,
        "Y": 1399.4524212108361
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "fc981453b0794914b817ce8ea9bbb909",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2450.6009629925643,
        "Y": 1049.3444037928527
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "623155df950d42d8bcb2aea95f3f92b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2801.9038987218842,
        "Y": 1049.3444037928527
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "3fda2bb02e894210b2737c036cf51d36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2243.8418682400643,
        "Y": 1049.3444037928527
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "11aaf64f4c974045b73d59b169681833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3222.7111017862539,
        "Y": 2910.0464377865878
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "871f675867674a7785c7487d610873d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2914.89548041994,
        "Y": 2854.7472880021787
      }
    ],
    "Annotations": [
      {
        "Id": "23fd0eb5566041e59353ff762a20a4c2",
        "Title": "Coordinates\r\n ",
        "Nodes": [
          "8cc6c1fb61484b86bab82908655d3df0",
          "ff616aa35b194fbfa265d2a312b357bd",
          "20f595b21050444cad303c1015c8207f",
          "26b91f1a142e42539c8751f65ccacf8b"
        ],
        "Left": 385.1897705469745,
        "Top": 49.229323434911635,
        "Width": 402.0,
        "Height": 855.09763605687476,
        "FontSize": 36.0,
        "InitialTop": 145.72932343491163,
        "InitialHeight": 766.09763605687476,
        "TextblockHeight": 86.5,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04072cb4669049209b52fd1ac4d025a5",
        "Title": "WKT Generator",
        "Nodes": [
          "e00054a13da24212ab4540997633798f",
          "94e1fb21689642b9b5fa86b874146ae5",
          "09412fe94eab41e68c31fa0307c3b82e",
          "2fc07c798e1b4ebf958f7ff659859e87",
          "5b79af2b71e44701b490b40587de9acd",
          "ed9a22b47c4f467485b00c23697814cc"
        ],
        "Left": 1056.5491876748795,
        "Top": 46.67744193056717,
        "Width": 1118.4036787087382,
        "Height": 861.44646036994368,
        "FontSize": 36.0,
        "InitialTop": 99.67744193056717,
        "InitialHeight": 823.0550890341234,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "5c0afc45a1c048e1a54d2a4955e0da61",
        "Title": "RDF Export",
        "Nodes": [
          "15a7732f6cb04dd091354990f47294cf",
          "6a6b21fb028f4604bb96288628d53ad4",
          "c35aef94b79f494486311eadd2b8352d",
          "bc6e3de400aa462da2f128593313d246",
          "4e3575612a134261972d058ad1f6bbdb"
        ],
        "Left": 2298.1435146894951,
        "Top": 489.91048628015517,
        "Width": 701.63105624145328,
        "Height": 307.54668408033456,
        "FontSize": 36.0,
        "InitialTop": 542.91048628015517,
        "InitialHeight": 281.70196598088432,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "3b23e7e8a50c49f58eeca893711b4716",
        "Title": "XML(query result) Import and Parsing",
        "Nodes": [
          "9c3c9a9cb6f048cf9f7f1435208d010b",
          "963c470715ed4f5b815704780b1b964a",
          "aef00e0d9cbc4c89bc624f16784d0389",
          "3caf2c5d39a14bb8a8d117a845916766",
          "707d96c4b0c447fab11fd20d86754199",
          "3f57e74dd731444791e46505ab0dfb81"
        ],
        "Left": -380.79370799966853,
        "Top": 1023.6639164500605,
        "Width": 1244.6631695935255,
        "Height": 431.0,
        "FontSize": 36.0,
        "InitialTop": 1076.6639164500605,
        "InitialHeight": 285.6934410495121,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "ae93889f56834dc4bcf3ed27c24b8842",
        "Title": "Highlight of Query Result",
        "Nodes": [
          "15b03d534ea443bc817c75dcd2beca67",
          "b748c56692a542cf82608f2f5de3368e",
          "7d9284078cbe4cc4976d171bbf5209a6"
        ],
        "Left": 1045.9621214249971,
        "Top": 1027.0248540865045,
        "Width": 752.35521950094426,
        "Height": 341.56112360262114,
        "FontSize": 36.0,
        "InitialTop": 1080.0248540865045,
        "InitialHeight": 155.56112360262114,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d60db286ae754d1389ec192a4464838f",
        "Title": "Geometry Selection",
        "Nodes": [
          "c302d8cb07164d148faa4c41aaa1d95e",
          "fe320baea1a947dc9f3209b013ba191e",
          "fb87db2584334ccaae2d4b50cf6a3ee0",
          "cf3db25f6480433ebb3b8afa03322ecf",
          "eee283b1c55244568a077e84693ca07b"
        ],
        "Left": 1025.0301963989912,
        "Top": 1468.4937252966283,
        "Width": 1140.8245214758192,
        "Height": 421.66475458591776,
        "FontSize": 24.0,
        "InitialTop": 1507.4937252966283,
        "InitialHeight": 459.66475458591776,
        "TextblockHeight": 29.0,
        "Background": "#FFB0C4DE"
      },
      {
        "Id": "70df506eb59b4a4fb35aab5b9397f8b8",
        "Title": "Geometry Validator",
        "Nodes": [
          "fc981453b0794914b817ce8ea9bbb909",
          "623155df950d42d8bcb2aea95f3f92b2",
          "3fda2bb02e894210b2737c036cf51d36"
        ],
        "Left": 2233.8418682400643,
        "Top": 1010.3444037928527,
        "Width": 788.06203048181987,
        "Height": 317.0,
        "FontSize": 24.0,
        "InitialTop": 1049.3444037928527,
        "InitialHeight": 145.0,
        "TextblockHeight": 29.0,
        "Background": "#FFFFA07A"
      },
      {
        "Id": "2aa977e44a5f45c0bbf3d9719e6ac3c1",
        "Title": "Sphere testing\r\n",
        "Nodes": [
          "c5ca528b4d9f4975bf11edd564038195",
          "6f5992239c4844a3884b639772e60a4c",
          "fe789f3241d045fa93cd43927766996a",
          "34c3ec044e2643248116b32cbc85bc9f",
          "06493a8f57ad4782bdb9ae1e15d0525d",
          "99ce511072864923816a141a10b068e5",
          "991bc6014911493e84623456f751195a",
          "1a9767da639d4cb083a8d568b124b464",
          "ac7baec18464456eaf2c0d5b50d4030f",
          "7dcb24a2ce40468685c26d7890aa99f8",
          "4600ed00ce004c5ab079a769be303029",
          "5f0e1deb219e45e28b2a6b9fa3e9792f",
          "67f1909d2ab7455c943e505eb46f0258",
          "11aaf64f4c974045b73d59b169681833",
          "871f675867674a7785c7487d610873d9"
        ],
        "Left": 1554.8265591961,
        "Top": 2386.4236986681822,
        "Width": 2695.8503116333404,
        "Height": 773.10790078621039,
        "FontSize": 24.0,
        "InitialTop": 2453.9236986681822,
        "InitialHeight": 601.12273911840566,
        "TextblockHeight": 57.5,
        "Background": "#FFD3D3D3"
      }
    ],
    "X": -857.60739812629117,
    "Y": -464.44034953444805,
    "Zoom": 0.82180645717529943
  }
}