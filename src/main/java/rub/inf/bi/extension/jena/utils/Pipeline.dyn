{
  "Uuid": "8b1e7f7f-7304-4d5e-a570-fd8ce7ff620e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Pipeline",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\nnamespaces = dataEnteringNode[0]\r\ninserts = dataEnteringNode[1]\r\n\r\n# open RDF header\r\nrdfStr = \"<rdf:RDF\";\r\n\r\n# handle Namespaces\r\nfor key in namespaces:\r\n    rdfStr += \" xmlns:\" + key + \"='\" + namespaces[key] + \"'\";\r\n\r\nrdfStr += \">\";\r\n\r\n#add inserts\r\n\r\nrdfStr += \"<rdf:Description rdf:about='my:\" + \"RootModel\" + \"'>\";\r\n\r\nfor insert in inserts:\r\n    rdfStr += insert;\r\n\r\nrdfStr += \"</rdf:Description>\"\r\n\r\n# close RDF header\r\nrdfStr += \"</rdf:RDF>\"\r\n\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nOUT = rdfStr",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e00054a13da24212ab4540997633798f",
      "Inputs": [
        {
          "Id": "4662dbdc67f64d9eaa25bb84b6cf3169",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bf83e6357a44ed88c6b44b3703edca8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4c68ed56fdd401c858255578208df3b",
          "Name": "OUT",
          "Description": "Ergebnis des Python-Skripts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "inserts = [a, b, c, d, e, f, g];",
      "Id": "61e44d5eee674f26b9e8103bb75c7aa8",
      "Inputs": [
        {
          "Id": "67efea98248b4d3f8c33d3dff1e108ac",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47b0d05012a248e1b0022f3e579d4986",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e2571cd104d452cadc729fcf6dac5c0",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "499d8247b0db436a98f7f908da93e5d5",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae92e191bb9f45e18119f94b648c9f99",
          "Name": "e",
          "Description": "e",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7af7651287f4a1a9ec8c440e49cbaf3",
          "Name": "f",
          "Description": "f",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4515bb66cbd4b8b857d3bfe8ff11580",
          "Name": "g",
          "Description": "g",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93cd21f1577c4819b50305eb0dea5c37",
          "Name": "",
          "Description": "inserts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "55e5541613984633bd3985a301a6f2f0",
      "Inputs": [
        {
          "Id": "df6bd6c740bd4c5aa0dad6bc110ad43c",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6f0f1e62fef44aeb70b601c869d460c",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.FileExists@string",
      "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
      "Inputs": [
        {
          "Id": "949291cdd50249a388dcd7b15fdc6e59",
          "Name": "path",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e6a623c31214ec7a86d96dce9d36894",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if a file exists at the given path.\n\nFileSystem.FileExists (path: string): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\target\\classes\\rdf\\query_result.xml",
      "InputValue": "..\\Workspace\\ExtendingJena\\target\\classes\\rdf\\query_result.xml",
      "NodeType": "ExtensionNode",
      "Id": "963c470715ed4f5b815704780b1b964a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0eba4e25d56d42f99f6cd7d1d4848abe",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aef00e0d9cbc4c89bc624f16784d0389",
      "Inputs": [
        {
          "Id": "3dd15c6a7ab447d2bb0a1ceb5546319b",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport ctypes\r\nimport xml.etree.ElementTree as ET\r\nsys.path.append(r\"C:\\Users\\nobita_yhe\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom xml.dom.minidom import parse, parseString\r\n\r\ndir = \"r'C:\\\\Users\\\\nobita_yhe\\\\Workspace\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\rdf\\\\query_result.xml'\"\r\n#dir = r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml'\r\nwarn_str = 'File or File Path does not exist.'\r\nres = ''\r\n\r\ndef xmlParsing2Uri(path=dir):\r\n    \"\"\" it returns the list in structure like [[uri1, uri2],...,[uri1, uri2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    \r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                ur_lst.append(ur.childNodes[0].nodeValue)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\n\r\ndef xml2GeometryString(path=dir):\r\n    \"\"\" it returns the list in structure like [[Geomety1, Geomety2],...,[Geomety1, Geomety2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    seperator = '#'\r\n\r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                uri_str = ur.childNodes[0].nodeValue\r\n                geo_index = uri_str.find(seperator) \r\n                geo_str = uri_str[geo_index+1:]\r\n                ur_lst.append(geo_str)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\ndef xml2GeoInDynamo(path=dir):\r\n    with open(r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml', 'r', encoding='utf-8') as file:\r\n        xml_data = file.read()\r\n        dom = parseString(xml_data)\r\n        #dom = parse(xml_data)\r\n        data = dom.documentElement\r\n        resList = data.getElementsByTagName('result')\r\n        seperator = '#'\r\n        \r\n        res_lst = []\r\n        for res in resList: # handle the <result>...</result>\r\n            ur_lst = []\r\n            for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n                for ur in bi.getElementsByTagName('uri'):\r\n                    uri_str = ur.childNodes[0].nodeValue\r\n                    geo_index = uri_str.find(seperator) \r\n                    geo_str = uri_str[geo_index+1:]\r\n                    ur_lst.append(geo_str)\r\n            res_lst.append(ur_lst)\r\n            ur_lst = []\r\n    return res_lst\r\n    \r\n   \r\n\r\nif IN[0] == True:\r\n\tdir = IN[1]\r\n\tres = xml2GeoInDynamo(dir)\r\nelse:\r\n\tctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\tres = warn_str\r\n\t\r\n# Assign your output to the OUT variable.\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3caf2c5d39a14bb8a8d117a845916766",
      "Inputs": [
        {
          "Id": "77bc87c15e0546b0a908a7568c2c03bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad16ba208c4a435eb9c34e51e4bb261f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bbd33f439eb4c1ea76d5b4863a65de8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// Geometry Types\n\"POINT\";\n\"MULTIPOINT\";\n\"LINESTRING\";\n\"LINEARRING\";\n\"MULTILINESTRING\";\n\"POLYGON\";\n\"MULTIPOLYGON\";\n\"GEOMETRYCOLLECTION\";\n// Geometry List\n[\"POINT\",\"MULTIPOINT\"];\n\"POLYGON1\";\n\"POLYGON2\";\n\"LINE1\";\n\"LINE2\";\n\"POINT1\";\n\"MULTIPOLYGON1\";\n\"MULTIPOLYGON2\";",
      "Id": "97a460bf0a4c4dc4b8db487e25973aa9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73623bc763c5457eae42a2d72ceebc8e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b53c77c65d74558b5813a09a9f5b16d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5719a3b70bf42d58dfbde93b9b79119",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18a03f6573df4556bcbb08d1fbe6df55",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c91a2fc836a4439a840c34df84b7c3f",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38899dffcb5d4c5dbf9295db664a304f",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31a33c97c7b140b695c30055755bae80",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "168005965af342a7a6634fb5d4f61a00",
          "Name": "",
          "Description": "Value of expression at line 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a698b3bafcba4188948cf4ce3dd281ac",
          "Name": "",
          "Description": "Value of expression at line 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9610b4ca25ab4696ad1cf5b3a07e5444",
          "Name": "",
          "Description": "Value of expression at line 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6322a1e9b154119a1740cb5240bcbf8",
          "Name": "",
          "Description": "Value of expression at line 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f06b3a1dc42491c9d3d73339b256941",
          "Name": "",
          "Description": "Value of expression at line 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87295e117d6143f3a0ca49ebf8ea8605",
          "Name": "",
          "Description": "Value of expression at line 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e431f7fede0f48bbaa1a5a0038b8a00e",
          "Name": "",
          "Description": "Value of expression at line 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27f76adae7424e2199c6faa5ce9e20b3",
          "Name": "",
          "Description": "Value of expression at line 17",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3fbae279a534ce681a6c5d521ceb4a2",
          "Name": "",
          "Description": "Value of expression at line 18",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// length of indexes\n1;\n// index type\n\"EN\";\n\"NUM\";",
      "Id": "ae8694a67be34db0b7c6da183bae8d1a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ac84de10d4b42aaba023c5f305b3998",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b02a0dcadb024689bced739f1f26e30b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06684457eb6c4376a13de25a8712cb65",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\nINDEX_EN = ['A','B','C','D'];\r\nINDEX_NUM = ['1','2','3','4'];\r\nINDEX = [];\r\n\r\nif IN[2] == \"EN\":\r\n    INDEX = INDEX_EN\r\nif IN[2] == \"NUM\":\r\n    INDEX = INDEX_NUM\r\n\"\"\"\r\n# Place your code below this line\r\ndef name_concatenation(geo_name:str, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n \r\n    geo_concat = [geo_name + index[i] for i in range(geo_number)]\r\n    return geo_concat\r\n\r\ndef name_lst_concatenation(geo_name_lst:list, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n    \r\n    geo_concat = [[geo_name + index[i] for i in range(geo_number)] for geo_name in geo_name_lst]\r\n    return geo_concat\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif isinstance(IN[0], str):\r\n    OUT = name_concatenation(IN[0], IN[1])\r\nelse:\r\n    OUT = name_lst_concatenation(IN[0], IN[1])\r\n\"\"\"\r\nOUT = \"\"",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5ca528b4d9f4975bf11edd564038195",
      "Inputs": [
        {
          "Id": "57a2238033c24b7383d6cfe1176f6768",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73aea16d17b4d98b03e2e682d83d9fe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab031f3cf0f84f0dbda06b2acc56dae0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2769ba043845426fba267cb4438486f4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2.5,3);\np2 = Point.ByCoordinates(5,0);\n// Line1\nline1S = Point.ByCoordinates(2.5,0,1);\nline1E = Point.ByCoordinates(2.5,6,2);\nline1 = [line1S, line2E];\n// Line2\nline2S = Point.ByCoordinates(0,4,1);\nline2E = Point.ByCoordinates(4,4,2);\nline2 = [line2S, line2E];",
      "Id": "8cc6c1fb61484b86bab82908655d3df0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ebd52d91722c4b258923a0f21bfbeef8",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "390b89666ee84a8bb7aed62e12962f33",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e91accce2ac448ea9ab10f548b5434f",
          "Name": "",
          "Description": "line1S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d77caeae84d0486ea7d77de68a347c58",
          "Name": "",
          "Description": "line1E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a17fae6321c44d3ac143b9f64192f0d",
          "Name": "",
          "Description": "line1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38ac865a0db44b87adc3a25f9246aa36",
          "Name": "",
          "Description": "line2S",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a804db449faa4becb61a701bb5e840ac",
          "Name": "",
          "Description": "line2E",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e4dccdc34a649e8ae1b048d20deb387",
          "Name": "",
          "Description": "line2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(2,-1,0);\np2 = Point.ByCoordinates(2,1,0);\np3 = Point.ByCoordinates(0,1,0);\np4 = Point.ByCoordinates(0,-1,0);\n//p5 = Point.ByCoordinates(2,-1,0);\np = [p1,p2,p3,p4];",
      "Id": "ff616aa35b194fbfa265d2a312b357bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "79e2f3a26c6142f1a09d13c34fda6269",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a4c10606fe1465cb482cdc5dbd20b66",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8c14028d2234588a16befa14a2f3e78",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "632b6f7963b84c3a8a4b55b779bef39e",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d6d194e17a54cf2a1a0f22681363d56",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "p1 = Point.ByCoordinates(4,0,0);\np2 = Point.ByCoordinates(4,4,0);\np3 = Point.ByCoordinates(0,4,0);\np4 = Point.ByCoordinates(0,0,0);\np5 = Point.ByCoordinates(4,0,0);\np = [p1,p2,p3,p4];",
      "Id": "20f595b21050444cad303c1015c8207f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1dccd8b2cf454f27be38803c91bf2306",
          "Name": "",
          "Description": "p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d606baa83e504724865f086030a12101",
          "Name": "",
          "Description": "p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "134101cb4aaf4a3fa258a15b0dff0daf",
          "Name": "",
          "Description": "p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e449543d15034744868462a208a0002f",
          "Name": "",
          "Description": "p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9d077199d924b95b6bb646ed2949f07",
          "Name": "",
          "Description": "p5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75bb7661dd464af28919290445064026",
          "Name": "",
          "Description": "p",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "7747bbbfa858460687e58cfecc9b5cf4",
      "Inputs": [
        {
          "Id": "94de2f4b3ef04d618ed6e05a8ec882c9",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89b81b70b9ad42ab812695cea31fa9db",
          "Name": "endPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acea5b7fcaf04b2eaa0fa8b22ea5fe3a",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "fa9f7cec796e49d2981be54453892be2",
      "Inputs": [
        {
          "Id": "26c4eaf7c6124adf9c9aba31e131aeab",
          "Name": "startPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cca9f0853a7a44eeb3bd29d483f64a42",
          "Name": "endPoint",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9606795a730048d29a3c9fa3d82ea983",
          "Name": "Line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\nowl=\"http://www.w3.org/2002/07/owl#\";\nogc=\"http://www.opengis.net/\";\nmy=\"https://www.inf.bi.ruhr-uni-bochum.de/jena/#\";\ngml=\"http://www.opengis.net/ont/gml#\";\ngeo=\"http://www.opengis.net/ont/geosparql#\";\ngeof=\"http://www.opengis.net/def/function/geosparql/\";\nrdfs=\"http://www.w3.org/2000/01/rdf-schema#\";\nuom=\"http://www.opengis.net/def/uom/OGC/1.0/\";\nsf=\"http://www.opengis.net/ont/sf#\";\nxsd=\"http://www.w3.org/2001/XMLSchema#\";\ngeor=\"http://www.opengis.net/def/rule/geosparql/\";\n\nnamespaces = {\n\t\"rdf\" : rdf,\n\t\"owl\" : owl,\n\t\"ogc\" : ogc,\n\t\"my\" : my,\n\t\"gml\" : gml,\n\t\"geo\" : geo,\n\t\"geof\": geof,\n\t\"rdfs\": rdfs,\n\t\"uom\": uom,\n\t\"sf\": sf,\n\t\"xsd\": xsd,\n\t\"geor\": geor\n};",
      "Id": "94e1fb21689642b9b5fa86b874146ae5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14a74a6721ba4b4c96b29ec99ab36dd3",
          "Name": "",
          "Description": "rdf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbd7738a74ab46dfa91132fe2fe0748e",
          "Name": "",
          "Description": "owl",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdeda2f4aec14f54b8c91f0d5151f728",
          "Name": "",
          "Description": "ogc",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5640c36aa874fb99957c7fbfc97bd6e",
          "Name": "",
          "Description": "my",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ab868b2ecc44e99c2b667f608ed4ca",
          "Name": "",
          "Description": "gml",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8fce02e7523459b989de8e70c67fbe7",
          "Name": "",
          "Description": "geo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa9fcf8f6cb5400ca3d6a2683eafb96f",
          "Name": "",
          "Description": "geof",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "158a4084313d45e69676af0810e305ce",
          "Name": "",
          "Description": "rdfs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff95c2f9c259443cb522b3e66ed0cbbf",
          "Name": "",
          "Description": "uom",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1c251b87b364adebb7dee3182eb24b9",
          "Name": "",
          "Description": "sf",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "152f1a91a3f14e599e6aae3fcc003c35",
          "Name": "",
          "Description": "xsd",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91cf56785daa4c408af3ee4dca001e59",
          "Name": "",
          "Description": "geor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3079abf98a7148b6962e2e0267973632",
          "Name": "",
          "Description": "namespaces",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n      \r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5176eda205e34de7a665e804a6aae486",
      "Inputs": [
        {
          "Id": "c7c1cdc3a90647f89e22fd2bb77c8470",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0429bbf0f2e64054ad269493cec091d4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7020ecec52646d583974d7d53d5b9e3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb980cc6f8a042408eb5b8d26562ee55",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "017679051d804efcbff1ab5769d8a3d6",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d85d5be604b4ffbb2ea2e258879ca0e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "a231e2256f9d425e90c75023e27da8cc",
      "Inputs": [
        {
          "Id": "42dabbf0174e4eb7bead3ca6b0748e13",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d42ddc6904e14f649ece951c41654d93",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "35b5556ac3ae45acb564e76c7b0f35c3",
      "Inputs": [
        {
          "Id": "d461b6d8da1c4a208ba29060c53684ac",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01a275aae7ce4701aa1851e0754bebc7",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "8e0e97ac-4563-4934-8ae8-f407ab7fb7ce Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "8e0e97ac456349348ae8f407ab7fb7ce",
      "Inputs": [
        {
          "Id": "59cd2113c3a84201972447f762f4d06f",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31e73eeff94b493fa46fe7ba29cfd59e",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n      \r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b7f93905b81c487c99a0bb121432d94b",
      "Inputs": [
        {
          "Id": "c3d06f7de8254ed99a71de874363ad93",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ac867b5ef354a4580f06cb8f30d8672",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6564501c55b5436a9428bddbc438bf0e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bc34479b73640a38dd011ce9beeb2a9",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cf66f51b5f24eeb9d982ea822d70ec8",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0a56a570c384cceb599462670e5af91",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n      \r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\ndef linestring2WKT():\r\n    wktLiteral = \"<sf:LINESTRING>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"LINESTRING Z(\";\r\n    \r\n    originP = geometry[0];\r\n    endP = geometry[1]\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    wktLiteral += \", \" + str(endP.X) + \" \" +  str(endP.Y) + \" \" +  str(endP.Z); # end point\r\n    wktLiteral += \")\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:LINESTRING>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n    \r\nif(geometryType.upper() == \"LINESTRING\"):\r\n    res = linestring2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "10afdaeff2a642dba625b86ba323d6fe",
      "Inputs": [
        {
          "Id": "88e97bfc5e4d42a9a651a587c7fca052",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b01bfb6ac3944b059e6318204366b8e2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5ac601e9ca34ffa8fcb6fa084987d9a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7892e7485e9a49949993db776c79e1f2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60db302f0f6948cd854d044875800a1a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5acabe01a1144de29664ede0b9606ac5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n      \r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\ndef linestring2WKT():\r\n    wktLiteral = \"<sf:LINESTRING>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"LINESTRING Z(\";\r\n    \r\n    originP = geometry[0];\r\n    endP = geometry[1]\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    wktLiteral += \", \" + str(endP.X) + \" \" +  str(endP.Y) + \" \" +  str(endP.Z); # end point\r\n    wktLiteral += \")\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:LINESTRING>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n    \r\nif(geometryType.upper() == \"LINESTRING\"):\r\n    res = linestring2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "013e8a67712b4ae39da0ed75f65594d5",
      "Inputs": [
        {
          "Id": "fbfffba9e4dd4b87849064fbce802d7e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8538d760b6b244408cc3ad59ab11a570",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "451563da36884068a2161f8d73f96be5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00a383edfa12485381a6a9fd958a9586",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1dbea3b831fe43118547e35ee00834b4",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74ff5a89849449d7b55049d0992dfd3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\example.rdf",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\rdf\\example.rdf",
      "NodeType": "ExtensionNode",
      "Id": "c35aef94b79f494486311eadd2b8352d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd06b513d42a4ec5a2267a0de6b95808",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.WriteText@string,string",
      "Id": "bc6e3de400aa462da2f128593313d246",
      "Inputs": [
        {
          "Id": "e0b36f25ff0a43feab340b908c2720e4",
          "Name": "filePath",
          "Description": "Path to write to\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f433e359e584c96b5cd746da1837256",
          "Name": "text",
          "Description": "Text content\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1910f40416c94ea289b943413a397a63",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write the text content to a file specified by the path\n\nFileSystem.WriteText (filePath: string, text: string): void"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    \r\n    # for curves/surfaces\r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n        \r\n    wktLiteral += \")))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:MultiPolygon>\";\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\ndef linestring2WKT():\r\n    wktLiteral = \"<sf:LINESTRING>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"LINESTRING Z(\";\r\n    \r\n    originP = geometry[0];\r\n    endP = geometry[1]\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    wktLiteral += \", \" + str(endP.X) + \" \" +  str(endP.Y) + \" \" +  str(endP.Z); # end point\r\n    wktLiteral += \")\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:LINESTRING>\";\r\n    return wktLiteral\r\n\r\ndef point2WKT():\r\n    wktLiteral = \"<sf:POINT>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POINT (\";\r\n  \r\n    wktLiteral += str(geometry.X) + \" \" +  str(geometry.Y) + \" \" +  str(geometry.Z)\r\n\r\n    wktLiteral += \")\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POINT>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n    \r\nif(geometryType.upper() == \"LINESTRING\"):\r\n    res = linestring2WKT()\r\n\r\nif(geometryType.upper() == \"POINT\"):\r\n    res = point2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bfdc4615c6274338b4d5becf5c10fbc6",
      "Inputs": [
        {
          "Id": "01668464677e4cd68af8a7c380068582",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98612626b2e94ab695ad772fb33a34b3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73a256007fda473898f79397d214ff2e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6825a25d266c49d3ad2faba7bfb8bd0e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f64c2e998a8416f83301a499c489d25",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84313ef731d34cd1bf1d4c3052f26af8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5b34801b03bf4e0290214b4c52894850",
      "Inputs": [
        {
          "Id": "42915191fa9e411da75814f63335e81c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71e557c3927646778b6c4cfc2e1523e4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "935a678206df4d0ab3fcb92690a97b46",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee765cd3c18344a3aca7874845aee6b1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 255,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "b714a12042164093bebad72997dbaf06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4978c6c037cc47f18f293d2e287a9fc9",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "79e259c2f8714e5fbd282e95e3b9d02f",
      "Inputs": [
        {
          "Id": "33dcf3982e36401ca42371bc76a940a6",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5219b9f65c034fbaa5929d7bdb9a1aa1",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c9acdcfe2174ee6845ae78b0d0b25af",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85d6786523a4489f9401ff3d4f5ade66",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a285ae495094d2ba8a2a15ce34ed686",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49521c4d46a141a488482652db11a1a1",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "176c13c5add1459a8f2f7e5bf40dd10e",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49af91b85d5a4785beaeb033163bfe0b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "891cb708face45dcb61b76824f8a7305",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "d2b62629a0554201bd1a5a39be2d7d7b",
      "Inputs": [
        {
          "Id": "8dd0ab8d3eaa4699bd7b1b2d71443584",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44876683f7e04f6db2fe453ea57afd1b",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0d064e528614f2abc9800ee829d9f33",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84e78d10a061418fb5c15c1c20f744b9",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aec83607be1541daa996c40285686168",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fadcb71049d5480cabc40645254ce9fd",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e63a2a38ff8b4660a8e756056051fd99",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3ba39949cde4d3798e40c51f3dc72ed",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42895e8840b74599acc12a0bea92aede",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "32e8539b08034a57a003e887d6011f13",
      "Inputs": [
        {
          "Id": "a5e56530018f40c6a8370fd47b3b42ff",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f08da93aa304f2da40c14b3277e85ae",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae5de0a712124ed2aff5773890f3538a",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e044731ce7f5418697b84dbb000e2c16",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81c6fe52fac9477380ad53eff3168ff6",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25873aed8ac6491ba11b54ca967bb979",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95dce8c9e7ab4cba93cc356f75803b29",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7799bf8602a4587b6911e09824274e5",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57f99f0c83434d0895a81007c11060f5",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "5bcfa659ed5849c2ba551bd23c2a9d5e",
      "Inputs": [
        {
          "Id": "719dd61bf81e4869a2cdefbd828a3b75",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ec6f21671ba4f90afd4b65002863435",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c55a5d32a3614675a2de070f76e2362c",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f7237b4c0254a1bb9bc67f8119329c9",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4052a0d594d14ebdb6d36c6d04c55562",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4c9fb43350940869d90f7434723d8c5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2298b68bfa14bb08bc4500ed7d31b78",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b064201a3ca348eb8e7b383e9feeb3c4",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "882d7daa44724ceb80ea3fcc1794e4b8",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "9d2e9a1bc56b4de792b3b7e923a76afd",
      "Inputs": [
        {
          "Id": "c04dc0fcd81d49f8b7312faeecb9742a",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7371f31c34294280b0be928656a2d888",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8560d8ba3ff04b7495b0a4dd36b775b6",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c1b97b74df048ad84c22b1d942ccc20",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09d6abcd0b9c4f1caf855ce077e39923",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4aa3ea051d949348a1158cd83d1f3bf",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "488720186b0e493e9aaf5f853784374c",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "057d12639b1f4f31bf9f5b8865783d93",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03e363ece3ce4073b34f2c8510001c2b",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fa87b26c82a8488b888bd68e66796f2a",
      "Inputs": [
        {
          "Id": "8f782d14e05842bf950e089df4756d1a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b354cda0dfe34d6c8a49e9a74ddbf7f7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ef20f12a3e84a1ba41f1a346b2a1d16",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e9ad885b7e2845d3b44873e888a7be38",
      "Inputs": [
        {
          "Id": "599198b6a4784e43a03aa6d927630812",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27939742b45246aea1aa77fb3007133b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "058e873801cb4821b061b4b2fed0f5b7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe9f9b9d604e448bb929e13a8b6eac0f",
      "Inputs": [
        {
          "Id": "53000e9398e4440aaeff2b1947c9536b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11c480b0bd9b4c12ab6edc5afab31e5c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8789f690d0fb4d4ea09962f50d1af2d8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1df51be173274ce583cf70b7987b356d",
      "Inputs": [
        {
          "Id": "08d637beb7f44745968098ad801f7bcd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cb94fe3480c471bab4364ef5abedf5d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9e178ae93e64c0a8da12b138d79da37",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n\r\ndef inList(res_lst, geo):\r\n    flat_lst = flatten(res_lst)\r\n    res = False\r\n    \r\n    for e in flat_lst:\r\n        if e is None:\r\n            break\r\n        if geo.upper() == e.upper():\r\n            res = True\r\n            break\r\n    return res\r\n\t#return geo.upper() == e.upper() for e in flat_lst\r\n    #if geo in flat_lst:\r\n    #    return True\r\n    #return False\r\n\t\r\n# Assign your output to the OUT variable.\r\nres_lst = IN[0]\r\ngeo_name = IN[1]\r\nOUT = inList(res_lst, geo_name)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e7c2b58156c0432f8ebc24618c2f8e0e",
      "Inputs": [
        {
          "Id": "56746e9369564afe9b2d91274d0febc5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acd41a39164246878a61a17134e60aca",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06eee4082ef1498b9077ab77abefe8a1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d816a2d3c88e4876baa161a90f11a416",
      "Inputs": [
        {
          "Id": "203ae1d29d8f4c1a95e964baddbf4701",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61bb6a1bf78641b28657f9cf8c3fd969",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "195518c28b114e62b18d4e0070eaf4c7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb07da86db734600be0f078466535df2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n#else:\r\n#    o = geom\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "43c394e8ed6a49e08743c025d5fde3fc",
      "Inputs": [
        {
          "Id": "1bddaf911be1401ab475a828ef760c26",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ebe7601e0d64625a1e74a83c5e10bb2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd8d36c918ef41d590260075e675f70c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25db36f9776f4d489bb96cc62118bbfc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad18b37dc3c14625bbfacef86803868b",
      "Inputs": [
        {
          "Id": "d58a465620f14ccebf2f1db08763f2ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6c7a8703503455da3547336e6a3e8bf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "208a7ca84f3d4846b00a515259a1f55c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2db22f83dbe143569e2457d82993c7da",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n#cBoid = Cuboid.ByLengths(2,2,2)\r\ncolor = Color.ByARGB(255,255,0,0) # red\r\n\r\ngeom = IN[0]\r\ninList = IN[1]\r\ncolor = IN[2]\r\no = ''\r\n\r\nif inList:\r\n    o = GeometryColor.ByGeometryColor(geom, color)\r\n    \r\nOUT = o\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "41f46af230dc407c854a0bb264db0f58",
      "Inputs": [
        {
          "Id": "e9ed3926112e46ff8b2171289274241c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95a75c96b8a54f65a788c59cc5e3c6f9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8d0be1e622d4af39354070a3eff6466",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad6ea306939b40809e4969faaff8a7a9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4aa5aca4c9d245ce95df137be708a5e7",
      "Inputs": [
        {
          "Id": "900f2a08ee5e4ce386b7bbcb4523deef",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61b6ae7ba5b542d6888769993e6a6b3d",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6af2b7a021d4d9c8d7871a16d248560",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13ebefd1b3c244cab6db4dfd4996bcea",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbcc9f3830624c75bf3a2accb5c79c24",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9116484351f45579a2f99d2bfd526f2",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "/**\n* \"F5\": Run the script\n* \"Ctrl + I\": Isolate Selected Geometry\n*\n*\n*\n*\n**/;",
      "Id": "29d4977ffd5a4fbc99b46521c03c224b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "53b66a95df584de1bbabfe444f3b3828",
      "Inputs": [
        {
          "Id": "228888bd05a248b99b139629841fbd97",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e695d0772cef4b3c837549eebeddf357",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "15a7732f6cb04dd091354990f47294cf",
      "Inputs": [
        {
          "Id": "f92d4d948b40403391a7a0c1b07ba273",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0212e2a0b0ed4b5380c68c447d397ffa",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fde71122b42f433eac50a7bc95aabbd6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6a6b21fb028f4604bb96288628d53ad4",
      "Inputs": [
        {
          "Id": "484d2768b2d0421fb401750cf2bdfaa2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9de4ac4aa7645d791ba8d9f8a1bd097",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "707d96c4b0c447fab11fd20d86754199",
      "Inputs": [
        {
          "Id": "fe5985acf0cd4a6aafecc026805c66ea",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c734acd6cd42a8a12c95047633db6a",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e353654a2d624523b843b76fc1b26eac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "cub_coord1 = Point.ByCoordinates(0,0,2);\ncub_coord2 = Point.ByCoordinates(2,2,2);\nlen1 = 4;\nlen2 = 2;",
      "Id": "26b91f1a142e42539c8751f65ccacf8b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "267a4da548ad4f2eb251c96859b81b93",
          "Name": "",
          "Description": "cub_coord1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c47bf91a29b242bc85dafd9860340c5b",
          "Name": "",
          "Description": "cub_coord2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f7d6d0d598a4cdfbd7b7372d917c509",
          "Name": "",
          "Description": "len1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afd102f21e2a42ce9ace59e784d52456",
          "Name": "",
          "Description": "len2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.CoordinateSystem,double,double,double",
      "Id": "4af187e559c648cc8e8f4b850a65f5dd",
      "Inputs": [
        {
          "Id": "d096c172f2e1475c899305e93bda104d",
          "Name": "cs",
          "Description": "CoordinateSystem\nDefault value : Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07b6872bfc7e406ab172b90914c3fe0a",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35844cf20df743bdbe3e7f47db50d608",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12e84a66934245b68f8705fede6c82d7",
          "Name": "height",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9acde4b8ddc4bbbbbe3eff77274c786",
          "Name": "Cuboid",
          "Description": "Cuboid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Cuboid centered and oriented to input CoordinateSystem, with specified width, length, and height.\n\nCuboid.ByLengths (cs: CoordinateSystem = Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0), width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "3f57e74dd731444791e46505ab0dfb81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aea9da347654932aa87ba43fe0a3f42",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "4e3575612a134261972d058ad1f6bbdb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abc883ea418c4c88a5dd5e0788732297",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.CoordinateSystem,double,double,double",
      "Id": "bcf4ca6143d3499eb8becca4eef436c8",
      "Inputs": [
        {
          "Id": "2080a3bf483046a28135e46768033bb2",
          "Name": "cs",
          "Description": "CoordinateSystem\nDefault value : Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b27b801fd6af4c5196156897639b344d",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74679466176f4c91aea18d7bcf1670cc",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fc938a787394253ad5cab94eca2710f",
          "Name": "height",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c4d68259aa6408c9d11e9f9e404538b",
          "Name": "Cuboid",
          "Description": "Cuboid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Cuboid centered and oriented to input CoordinateSystem, with specified width, length, and height.\n\nCuboid.ByLengths (cs: CoordinateSystem = Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0), width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "9c9993db47df42cbb01f8dc59d85d42b",
      "Inputs": [
        {
          "Id": "92e752bbf57045c2bdf87e9555fa76e8",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "305a0f6200ea40f793166b38591480e5",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ec17454e97b4996847e00e361c52858",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a6cbce1f89949dd91322b231f2db8cb",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3644e213433644e09f2f849c8523146c",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2361f1e0d10a4663972a9832721a97f9",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cd1708b323e4bdfa1aa5713a4de4294",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d5d7bea50e54ece862193ae42e20735",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b13340ca7394e998ccb46dfd676c7b4",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_data = [centroid, length];",
      "Id": "9d4f3ac7e86c4eed9551601d7a456da1",
      "Inputs": [
        {
          "Id": "a202442a79f0489d83f26411f0b04c26",
          "Name": "centroid",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f091ba28f1bf4ceab2a4a7a77794666a",
          "Name": "length",
          "Description": "length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "795248b99ecd458f81104f2d2e8b0d54",
          "Name": "",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Centroid",
      "Id": "99071d55456f4470a9b60e93674bc3ad",
      "Inputs": [
        {
          "Id": "e96a987091b84adca3705aa9482018fe",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c101a8c5cbc84f46915b39ddeb32b7e3",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The centroid of the Solid\n\nSolid.Centroid ( ): Point"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    \"\"\"\r\n    # for curves/surfaces\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \"\"\"\r\n    # for cuboids with geometry = [centroid, length]\r\n    centroid = geometry[0]\r\n    length = geometry[1]\r\n    offset = geometry[1]/2\r\n    c_X = centroid.X\r\n    c_Y = centroid.Y\r\n    c_Z = centroid.Z\r\n\r\n    # idea: determine the coordinates of bottom- and top faces\r\n    \r\n    # p1 -- p2\r\n    # |  c   |\r\n    # p3 -- p4           \r\n    # bottom-face\r\n    bottom_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)  \r\n    bottom_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_face = \"((\" + bottom_p1 + \", \" + bottom_p2 + \", \" + bottom_p3 + \", \" + bottom_p4 +  \", \" + bottom_p1 + \"))\"\r\n    # top-face\r\n    top_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)  \r\n    top_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_face = \"((\" + top_p1 + \", \" + top_p2 + \", \" + top_p3 + \", \" + top_p4 +  \", \" + top_p1 + \"))\"\r\n    # front-face\r\n    front_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    front_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    front_p3 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    front_p4 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    front_face = \"((\" + front_p1 + \", \" + front_p2 + \", \" + front_p3 + \", \" + front_p4 + \", \" + front_p1 + \"))\"\r\n    # back-face             \r\n    back_p1 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)  \r\n    back_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    back_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)  \r\n    back_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    back_face = \"((\" + back_p1 + \", \" + back_p2 + \", \" + back_p3 + \", \" + back_p4 + \", \" + back_p1 + \"))\"\r\n    # left-face\r\n    left_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p2 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p3 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_face = \"((\" + left_p1 + \", \" + left_p2 + \", \" + left_p3 + \", \" + left_p4 + \", \" + left_p1 + \"))\"            \r\n    # right-face\r\n    right_p1 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)         \r\n    right_p3 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_face = \"((\" + right_p1 + \", \" + right_p2 + \", \" + right_p3 + \", \" + right_p4 + \", \" + right_p1 + \"))\"   \r\n    \r\n    cuboid_face = bottom_face + \", \" + top_face + \", \" + front_face + \", \" + back_face + \", \" + left_face + \", \" + right_face\r\n    \r\n    wktLiteral += \"MULTIPOLYGON Z(\"\r\n    try:\r\n        wktLiteral = wktLiteral + cuboid_face\r\n    except e:\r\n        return e\r\n    print(cuboid_face)\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\"\r\n    wktLiteral += \"</rdf:Description>\"\r\n    wktLiteral += \"</sf:MultiPolygon>\"\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "66b36e8a68fc47fd9676c33a9e6a2914",
      "Inputs": [
        {
          "Id": "6735e731349a4498af5bb53fc8fedd7d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "264c5cf049af4dfcb838d7d04b92ed48",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cc94ac643b04dd891423907a405ad91",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d1a6a663a874ab5ada707bc8a99e920",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38c5487eadf947a1a250cb14dcc780e5",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97bfd7ef2179445fb9a429903a42c3ff",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Centroid",
      "Id": "7613c44469dc4898a47b8fbc413da509",
      "Inputs": [
        {
          "Id": "1c14fa4067ef4d36bc7bc5b1c484f9fc",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d96539532204441aa29769abe0ff383",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The centroid of the Solid\n\nSolid.Centroid ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_data = [centroid, length];",
      "Id": "55438b6afc574fa0894c6645a8fc0906",
      "Inputs": [
        {
          "Id": "ed3d42b034cf4e83b96f811e75f59ecf",
          "Name": "centroid",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13ddfe38377e45a4907498b2ec1a59c7",
          "Name": "length",
          "Description": "length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43ce538de3e64be887c6520ae04916da",
          "Name": "",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "geo_obj = [geo_data, geo_name, geo_type, geometry];\ngeo_obj[0];\ngeo_obj[1];\ngeo_obj[2];\ngeo_obj[3];",
      "Id": "a83e7d84eb16436d99c9d93164e6cd1e",
      "Inputs": [
        {
          "Id": "c98d3af91b1640cf8ef705ec35d1ed80",
          "Name": "geo_data",
          "Description": "geo_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3971ab0e785b4b4cba1c953a7ea34008",
          "Name": "geo_name",
          "Description": "geo_name",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bee90a8323845bfb9c010402033cb2c",
          "Name": "geo_type",
          "Description": "geo_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "316b00814b244ebf8252035cbe46ce6c",
          "Name": "geometry",
          "Description": "geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5628994a94e4d2180338456b4fabf30",
          "Name": "",
          "Description": "geo_obj",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22e2ba7813ad45df89ef9104e793b859",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2df4d80d93ee49c3890985de8dad0b84",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f503dbe3f1c144c7a159cd1523b68937",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82e48562c05c4ed689ecabf0cbac8da6",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Phython-Standard- und DesignScript-Bibliotheken laden\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Die Eingaben f√ºr diesen Block werden in Form einer Liste in den IN-Variablen gespeichert.\r\ndataEnteringNode = IN\r\n\r\ngeometry = dataEnteringNode[0];\r\nname = dataEnteringNode[1];\r\nif isinstance(dataEnteringNode[1], list):\r\n    name = dataEnteringNode[1][0]\r\ngeometryType = dataEnteringNode[2];\r\nexampleInstanceNamespace = dataEnteringNode[3];\r\ngeoSparqlNamespace = dataEnteringNode[4];\r\n\r\n# Code unterhalb dieser Linie platzieren\r\n\r\ndef multipolygon2WKT():\r\n    wktLiteral = \"<sf:MultiPolygon>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    \r\n    \"\"\"\r\n    # for curves/surfaces\r\n    wktLiteral += \"MULTIPOLYGON Z(((\";\r\n    try:\r\n        curves = Surface.PerimeterCurves(geometry);\r\n    except:\r\n        raise Exception(\"something wrong at geometry import!\")\r\n    startP = None;\r\n    for curve in curves:\r\n        nextP = curve.StartPoint;\r\n        if(startP != None):\r\n            wktLiteral += \", \";\r\n        else:\r\n            startP = nextP;\r\n        wktLiteral += str(nextP.X) + \" \" +  str(nextP.Y) + \" \" +  str(nextP.Z);\r\n        \r\n    #Close the tiangle loop with a repeat of the first Point\r\n    wktLiteral += \", \" + str(startP.X) + \" \" +  str(startP.Y) + \" \" +  str(startP.Z);\r\n    wktLiteral += \")))\"\r\n    \"\"\"\r\n    # for cuboids with geometry = [centroid, length]\r\n    centroid = geometry[0]\r\n    length = geometry[1]\r\n    offset = geometry[1]/2\r\n    c_X = centroid.X\r\n    c_Y = centroid.Y\r\n    c_Z = centroid.Z\r\n\r\n    # idea: determine the coordinates of bottom- and top faces\r\n    \r\n    # p1 -- p2\r\n    # |  c   |\r\n    # p3 -- p4           \r\n    # bottom-face\r\n    bottom_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    bottom_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)  \r\n    bottom_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    bottom_face = \"((\" + bottom_p1 + \", \" + bottom_p2 + \", \" + bottom_p3 + \", \" + bottom_p4 +  \", \" + bottom_p1 + \"))\"\r\n    # top-face\r\n    top_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    top_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)  \r\n    top_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    top_face = \"((\" + top_p1 + \", \" + top_p2 + \", \" + top_p3 + \", \" + top_p4 +  \", \" + top_p1 + \"))\"\r\n    # front-face\r\n    front_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    front_p2 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    front_p3 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    front_p4 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    front_face = \"((\" + front_p1 + \", \" + front_p2 + \", \" + front_p3 + \", \" + front_p4 + \", \" + front_p1 + \"))\"\r\n    # back-face             \r\n    back_p1 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)  \r\n    back_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    back_p3 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)  \r\n    back_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    back_face = \"((\" + back_p1 + \", \" + back_p2 + \", \" + back_p3 + \", \" + back_p4 + \", \" + back_p1 + \"))\"\r\n    # left-face\r\n    left_p1 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p2 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z-offset)\r\n    left_p3 = str(c_X-offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_p4 = str(c_X+offset) + \" \" + str(c_Y-offset) + \" \" + str(c_Z+offset)\r\n    left_face = \"((\" + left_p1 + \", \" + left_p2 + \", \" + left_p3 + \", \" + left_p4 + \", \" + left_p1 + \"))\"            \r\n    # right-face\r\n    right_p1 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)\r\n    right_p2 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z-offset)         \r\n    right_p3 = str(c_X-offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_p4 = str(c_X+offset) + \" \" + str(c_Y+offset) + \" \" + str(c_Z+offset)\r\n    right_face = \"((\" + right_p1 + \", \" + right_p2 + \", \" + right_p3 + \", \" + right_p4 + \", \" + right_p1 + \"))\"   \r\n    \r\n    cuboid_face = bottom_face + \", \" + top_face + \", \" + front_face + \", \" + back_face + \", \" + left_face + \", \" + right_face\r\n    \r\n    wktLiteral += \"MULTIPOLYGON Z(\"\r\n    try:\r\n        wktLiteral = wktLiteral + cuboid_face\r\n    except e:\r\n        return e\r\n    print(cuboid_face)\r\n    wktLiteral += \")\"\r\n    wktLiteral += \"</geo:asWKT>\"\r\n    wktLiteral += \"</rdf:Description>\"\r\n    wktLiteral += \"</sf:MultiPolygon>\"\r\n    return wktLiteral\r\n    \r\ndef polygon2WKT():\r\n    wktLiteral = \"<sf:POLYGON>\";\r\n    wktLiteral += \"<rdf:Description rdf:about='\" + exampleInstanceNamespace + str(name) + \"'>\";\r\n    wktLiteral += \"<geo:asWKT rdf:datatype='\" + geoSparqlNamespace + \"wktLiteral'>\";\r\n    wktLiteral += \"POLYGON Z((\";\r\n    \r\n    points =  geometry\r\n    originP = points[0];\r\n    \r\n    wktLiteral += str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z) # start point\r\n    for i in range(1, len(points)):\r\n        wktLiteral += \", \" + str(points[i].X) + \" \" +  str(points[i].Y) + \" \" +  str(points[i].Z);       \r\n    wktLiteral += \", \" + str(originP.X) + \" \" +  str(originP.Y) + \" \" +  str(originP.Z); # end point\r\n    wktLiteral += \"))\"\r\n    \r\n    wktLiteral += \"</geo:asWKT>\";\r\n    wktLiteral += \"</rdf:Description>\";\r\n    wktLiteral += \"</sf:POLYGON>\";\r\n    return wktLiteral\r\n\r\nres = \"\"\r\n# Weisen Sie Ihre Ausgabe der OUT-Variablen zu.\r\nif(geometryType.upper() == \"MULTIPOLYGON\"):\r\n    res = multipolygon2WKT()\r\n    \r\nif(geometryType.upper() == \"POLYGON\"):\r\n    res = polygon2WKT()\r\n\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d4c09c32a6e947509b1d3203858097a2",
      "Inputs": [
        {
          "Id": "c8550e2235ff4fee914c5d79e8e67204",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14e56e349de54163a5b7f239f777db2d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bca7453bf4d043798675ece20c37795f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bac2317c9c6f4db2bc567e49d469ca09",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8aece168d9a44b8eba896d40d5a1820e",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66fce0a8ecbf4c799f977ea49fcaf5b6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "f4c68ed56fdd401c858255578208df3b",
      "End": "0212e2a0b0ed4b5380c68c447d397ffa",
      "Id": "00f35e42b59949a3950f0065315f77d9"
    },
    {
      "Start": "93cd21f1577c4819b50305eb0dea5c37",
      "End": "1bf83e6357a44ed88c6b44b3703edca8",
      "Id": "f4a6e669508f4025bf8fd3133e9f520b"
    },
    {
      "Start": "c6f0f1e62fef44aeb70b601c869d460c",
      "End": "ad16ba208c4a435eb9c34e51e4bb261f",
      "Id": "3f174c8b529f43b9bd9faadf19c16cd8"
    },
    {
      "Start": "9e6a623c31214ec7a86d96dce9d36894",
      "End": "77bc87c15e0546b0a908a7568c2c03bf",
      "Id": "526baebac1aa46cd9758d264da03620f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "949291cdd50249a388dcd7b15fdc6e59",
      "Id": "9251985f228d4dfea1fec293f4630d7f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "df6bd6c740bd4c5aa0dad6bc110ad43c",
      "Id": "7e99db6f4ae94f0ea884b776c32edf85"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "8f782d14e05842bf950e089df4756d1a",
      "Id": "ba116d2ad9f241bca6379b5b2440ec82"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "53000e9398e4440aaeff2b1947c9536b",
      "Id": "8927c4cb52df4bc4b620f4ad54d44aa9"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "08d637beb7f44745968098ad801f7bcd",
      "Id": "b4b2d66aeec542e080b21cd05422b20b"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "56746e9369564afe9b2d91274d0febc5",
      "Id": "4929ac43fb2d4942a131d5eb56a14280"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "599198b6a4784e43a03aa6d927630812",
      "Id": "bbceb618483e4937820a3c025188cb57"
    },
    {
      "Start": "8bbd33f439eb4c1ea76d5b4863a65de8",
      "End": "b1c734acd6cd42a8a12c95047633db6a",
      "Id": "c5723a7376674a2585a10265df162304"
    },
    {
      "Start": "73623bc763c5457eae42a2d72ceebc8e",
      "End": "a0d064e528614f2abc9800ee829d9f33",
      "Id": "ada63ace27b1494aa2ef1fbb7d9d12a9"
    },
    {
      "Start": "e5719a3b70bf42d58dfbde93b9b79119",
      "End": "ae5de0a712124ed2aff5773890f3538a",
      "Id": "0bd08915a06c482ab8783bde0920927d"
    },
    {
      "Start": "e5719a3b70bf42d58dfbde93b9b79119",
      "End": "8c9acdcfe2174ee6845ae78b0d0b25af",
      "Id": "4aa5dd1f049449f09efe8d729c3986a1"
    },
    {
      "Start": "38899dffcb5d4c5dbf9295db664a304f",
      "End": "c55a5d32a3614675a2de070f76e2362c",
      "Id": "d3cee8fad5d644e89d9ea37661cd9bb5"
    },
    {
      "Start": "38899dffcb5d4c5dbf9295db664a304f",
      "End": "8560d8ba3ff04b7495b0a4dd36b775b6",
      "Id": "26fd9f51388c4639a13a6e54f2253fcd"
    },
    {
      "Start": "31a33c97c7b140b695c30055755bae80",
      "End": "1ec17454e97b4996847e00e361c52858",
      "Id": "6a04af8118f64215a8cb9f1687d67352"
    },
    {
      "Start": "31a33c97c7b140b695c30055755bae80",
      "End": "4bee90a8323845bfb9c010402033cb2c",
      "Id": "78a5946835974b27a92e73f2c6bc8777"
    },
    {
      "Start": "9610b4ca25ab4696ad1cf5b3a07e5444",
      "End": "5ec6f21671ba4f90afd4b65002863435",
      "Id": "2f159d7e13f049999ed70feabe8d9b90"
    },
    {
      "Start": "9610b4ca25ab4696ad1cf5b3a07e5444",
      "End": "7371f31c34294280b0be928656a2d888",
      "Id": "0e436cc991674e0780cd7a92790b0ff6"
    },
    {
      "Start": "2f06b3a1dc42491c9d3d73339b256941",
      "End": "5219b9f65c034fbaa5929d7bdb9a1aa1",
      "Id": "e3d90f2db4474c0d92b4dc5931fbd362"
    },
    {
      "Start": "87295e117d6143f3a0ca49ebf8ea8605",
      "End": "1f08da93aa304f2da40c14b3277e85ae",
      "Id": "9fedcd0e689c4139a275ffff30b87f9b"
    },
    {
      "Start": "e431f7fede0f48bbaa1a5a0038b8a00e",
      "End": "44876683f7e04f6db2fe453ea57afd1b",
      "Id": "9c5262c564f744709ac6f43941c67886"
    },
    {
      "Start": "27f76adae7424e2199c6faa5ce9e20b3",
      "End": "305a0f6200ea40f793166b38591480e5",
      "Id": "a5a2489777b3407b971245c57708de24"
    },
    {
      "Start": "a3fbae279a534ce681a6c5d521ceb4a2",
      "End": "3971ab0e785b4b4cba1c953a7ea34008",
      "Id": "77d9e839e5c54b6489dcf503512edbea"
    },
    {
      "Start": "ebd52d91722c4b258923a0f21bfbeef8",
      "End": "8dd0ab8d3eaa4699bd7b1b2d71443584",
      "Id": "315988ffdf0e42e99850b34c10993760"
    },
    {
      "Start": "2e91accce2ac448ea9ab10f548b5434f",
      "End": "94de2f4b3ef04d618ed6e05a8ec882c9",
      "Id": "38745f09346849ecb670ad52841d46af"
    },
    {
      "Start": "d77caeae84d0486ea7d77de68a347c58",
      "End": "89b81b70b9ad42ab812695cea31fa9db",
      "Id": "bc09599a2d62427bba4d0e664f1d0bff"
    },
    {
      "Start": "3a17fae6321c44d3ac143b9f64192f0d",
      "End": "33dcf3982e36401ca42371bc76a940a6",
      "Id": "2b5bf6e4ea174b3eb9b43915b35fb024"
    },
    {
      "Start": "38ac865a0db44b87adc3a25f9246aa36",
      "End": "26c4eaf7c6124adf9c9aba31e131aeab",
      "Id": "ba976a087e2e4e139009c1cce73f63b7"
    },
    {
      "Start": "a804db449faa4becb61a701bb5e840ac",
      "End": "cca9f0853a7a44eeb3bd29d483f64a42",
      "Id": "b5b70b2d09ae434ab9ea81f2dca35cea"
    },
    {
      "Start": "5e4dccdc34a649e8ae1b048d20deb387",
      "End": "a5e56530018f40c6a8370fd47b3b42ff",
      "Id": "3c85deb8664e4106adebfcc87d8a2ac5"
    },
    {
      "Start": "6d6d194e17a54cf2a1a0f22681363d56",
      "End": "d461b6d8da1c4a208ba29060c53684ac",
      "Id": "eaa2e98dd37b4d07ac917b47cf79c328"
    },
    {
      "Start": "6d6d194e17a54cf2a1a0f22681363d56",
      "End": "719dd61bf81e4869a2cdefbd828a3b75",
      "Id": "bf0152cc60d943228104c9851bb3608b"
    },
    {
      "Start": "75bb7661dd464af28919290445064026",
      "End": "42dabbf0174e4eb7bead3ca6b0748e13",
      "Id": "d4d1d1bfeed1467c976c7b1c9fdeb293"
    },
    {
      "Start": "75bb7661dd464af28919290445064026",
      "End": "c04dc0fcd81d49f8b7312faeecb9742a",
      "Id": "250700be8a3648908ace803da6272572"
    },
    {
      "Start": "acea5b7fcaf04b2eaa0fa8b22ea5fe3a",
      "End": "85d6786523a4489f9401ff3d4f5ade66",
      "Id": "b5b1fddcb7e340418537bb1cb573e55b"
    },
    {
      "Start": "9606795a730048d29a3c9fa3d82ea983",
      "End": "e044731ce7f5418697b84dbb000e2c16",
      "Id": "4c8706ee3b084a8f9009f7972a7854de"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "6825a25d266c49d3ad2faba7bfb8bd0e",
      "Id": "3d55e24a2b6244f9b687a2848e0b7799"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "fb980cc6f8a042408eb5b8d26562ee55",
      "Id": "2ee7ef1728274f4eaa49421c64b7e1a9"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "0bc34479b73640a38dd011ce9beeb2a9",
      "Id": "bc513fc9f00744399deffdd9ff2a107f"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "00a383edfa12485381a6a9fd958a9586",
      "Id": "5c87ce9238c44dcfadf5952d1671e76f"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "7892e7485e9a49949993db776c79e1f2",
      "Id": "c09afae269444490b790fa51aebc2913"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "8d1a6a663a874ab5ada707bc8a99e920",
      "Id": "7e643a78a16641009e03333142802a2d"
    },
    {
      "Start": "a5640c36aa874fb99957c7fbfc97bd6e",
      "End": "bac2317c9c6f4db2bc567e49d469ca09",
      "Id": "4f6bdef25c9448858eb077ce0e9e8877"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "5f64c2e998a8416f83301a499c489d25",
      "Id": "63b046ec6bdf4eafb0cfe526bd2a855f"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "017679051d804efcbff1ab5769d8a3d6",
      "Id": "7b33fbbcbc7947c39ca51c59d37516b6"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "6cf66f51b5f24eeb9d982ea822d70ec8",
      "Id": "5f6e3dabfe5a4df5b58c97b47acd2ee9"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "1dbea3b831fe43118547e35ee00834b4",
      "Id": "c1f7baf575884338af91636ed0a60d81"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "60db302f0f6948cd854d044875800a1a",
      "Id": "ab805e4bc8664a20907ec9923316916b"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "38c5487eadf947a1a250cb14dcc780e5",
      "Id": "5d075361873d4849b2b58baf1db65a07"
    },
    {
      "Start": "b8fce02e7523459b989de8e70c67fbe7",
      "End": "8aece168d9a44b8eba896d40d5a1820e",
      "Id": "31490732576b4c1ea5ce72b57dc954fe"
    },
    {
      "Start": "3079abf98a7148b6962e2e0267973632",
      "End": "4662dbdc67f64d9eaa25bb84b6cf3169",
      "Id": "a9e306de17cb4f5293d201edc3a532fd"
    },
    {
      "Start": "8d85d5be604b4ffbb2ea2e258879ca0e",
      "End": "499d8247b0db436a98f7f908da93e5d5",
      "Id": "e0c4ed7c1083437f9d3892f9a62065c3"
    },
    {
      "Start": "d42ddc6904e14f649ece951c41654d93",
      "End": "9c1b97b74df048ad84c22b1d942ccc20",
      "Id": "8936b32a65cf4411b42e9f87d83910e1"
    },
    {
      "Start": "01a275aae7ce4701aa1851e0754bebc7",
      "End": "6f7237b4c0254a1bb9bc67f8119329c9",
      "Id": "ff34132dfd484781936adfc018428a4f"
    },
    {
      "Start": "c0a56a570c384cceb599462670e5af91",
      "End": "1e2571cd104d452cadc729fcf6dac5c0",
      "Id": "0670682a36a64e809a4c431df5045f91"
    },
    {
      "Start": "5acabe01a1144de29664ede0b9606ac5",
      "End": "67efea98248b4d3f8c33d3dff1e108ac",
      "Id": "b7ca3c357f024fa783f4efd58347554d"
    },
    {
      "Start": "74ff5a89849449d7b55049d0992dfd3c",
      "End": "47b0d05012a248e1b0022f3e579d4986",
      "Id": "0be557c4d8104165823e6080c5e92161"
    },
    {
      "Start": "bd06b513d42a4ec5a2267a0de6b95808",
      "End": "e0b36f25ff0a43feab340b908c2720e4",
      "Id": "21b076eb864340f3a6a2203b6fec7a6d"
    },
    {
      "Start": "84313ef731d34cd1bf1d4c3052f26af8",
      "End": "ae92e191bb9f45e18119f94b648c9f99",
      "Id": "83601ebbbfd948aca06061a866b8dfb2"
    },
    {
      "Start": "ee765cd3c18344a3aca7874845aee6b1",
      "End": "900f2a08ee5e4ce386b7bbcb4523deef",
      "Id": "21a2ae1557da4ef191cef58fe0e8e98e"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "195518c28b114e62b18d4e0070eaf4c7",
      "Id": "c35c5f0af736428d89d60b8b9c5473a8"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "bd8d36c918ef41d590260075e675f70c",
      "Id": "ae61e89c0ecd4d37990145c64ee5d938"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "c8d0be1e622d4af39354070a3eff6466",
      "Id": "fd475cb7efaf4a0e8516206acc308bee"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "935a678206df4d0ab3fcb92690a97b46",
      "Id": "01169646c28a4fc68c725b10d71776bb"
    },
    {
      "Start": "4978c6c037cc47f18f293d2e287a9fc9",
      "End": "208a7ca84f3d4846b00a515259a1f55c",
      "Id": "ff49d5ca4315447ab94b40c4d1611558"
    },
    {
      "Start": "49521c4d46a141a488482652db11a1a1",
      "End": "88e97bfc5e4d42a9a651a587c7fca052",
      "Id": "04c4b8c1d31440188a0a0d21dee7e289"
    },
    {
      "Start": "176c13c5add1459a8f2f7e5bf40dd10e",
      "End": "b01bfb6ac3944b059e6318204366b8e2",
      "Id": "70d745b6d2524093a382d466d3c7c2af"
    },
    {
      "Start": "176c13c5add1459a8f2f7e5bf40dd10e",
      "End": "27939742b45246aea1aa77fb3007133b",
      "Id": "de0ab07b2cd244ae81bf92a477e4b253"
    },
    {
      "Start": "49af91b85d5a4785beaeb033163bfe0b",
      "End": "c5ac601e9ca34ffa8fcb6fa084987d9a",
      "Id": "64b51c24dd184b2ca837b40469171823"
    },
    {
      "Start": "891cb708face45dcb61b76824f8a7305",
      "End": "203ae1d29d8f4c1a95e964baddbf4701",
      "Id": "a56d992e9e5144949958cbce9ef7867f"
    },
    {
      "Start": "fadcb71049d5480cabc40645254ce9fd",
      "End": "01668464677e4cd68af8a7c380068582",
      "Id": "fc2d85388071465ab5559869dd23d74b"
    },
    {
      "Start": "fadcb71049d5480cabc40645254ce9fd",
      "End": "42915191fa9e411da75814f63335e81c",
      "Id": "8943c75c11e04279a615d7a1f965ce79"
    },
    {
      "Start": "e63a2a38ff8b4660a8e756056051fd99",
      "End": "98612626b2e94ab695ad772fb33a34b3",
      "Id": "d5e3e20b9ad949aa8be51a024b6bc699"
    },
    {
      "Start": "e63a2a38ff8b4660a8e756056051fd99",
      "End": "b354cda0dfe34d6c8a49e9a74ddbf7f7",
      "Id": "596d5ab93a2f41fe932acd18bf512305"
    },
    {
      "Start": "a3ba39949cde4d3798e40c51f3dc72ed",
      "End": "73a256007fda473898f79397d214ff2e",
      "Id": "9dc631cfdf884c61ba28707930b5a028"
    },
    {
      "Start": "25873aed8ac6491ba11b54ca967bb979",
      "End": "fbfffba9e4dd4b87849064fbce802d7e",
      "Id": "1e4d32a280a8424daaa6ba36d320de87"
    },
    {
      "Start": "95dce8c9e7ab4cba93cc356f75803b29",
      "End": "8538d760b6b244408cc3ad59ab11a570",
      "Id": "fdd1411a0860411d8941ae51eed149f2"
    },
    {
      "Start": "95dce8c9e7ab4cba93cc356f75803b29",
      "End": "11c480b0bd9b4c12ab6edc5afab31e5c",
      "Id": "8c3fd00b41b940b3b9a4a6f9f50dea31"
    },
    {
      "Start": "a7799bf8602a4587b6911e09824274e5",
      "End": "451563da36884068a2161f8d73f96be5",
      "Id": "b1c3d458b41043a5a058614c28c38dfa"
    },
    {
      "Start": "57f99f0c83434d0895a81007c11060f5",
      "End": "1bddaf911be1401ab475a828ef760c26",
      "Id": "3bcef89b8b0a4b528512861dfcaa12d0"
    },
    {
      "Start": "e4c9fb43350940869d90f7434723d8c5",
      "End": "c3d06f7de8254ed99a71de874363ad93",
      "Id": "0253fe14ca994b878a58e2b66530d03a"
    },
    {
      "Start": "d2298b68bfa14bb08bc4500ed7d31b78",
      "End": "1ac867b5ef354a4580f06cb8f30d8672",
      "Id": "65227e405a04417892c244cde23e9c46"
    },
    {
      "Start": "d2298b68bfa14bb08bc4500ed7d31b78",
      "End": "1cb94fe3480c471bab4364ef5abedf5d",
      "Id": "b2a63af41c914924a7e8003df12e28f7"
    },
    {
      "Start": "b064201a3ca348eb8e7b383e9feeb3c4",
      "End": "6564501c55b5436a9428bddbc438bf0e",
      "Id": "05c3943af69f45068011cb2072c9c2a8"
    },
    {
      "Start": "882d7daa44724ceb80ea3fcc1794e4b8",
      "End": "d58a465620f14ccebf2f1db08763f2ab",
      "Id": "043294a4b55f42d0bbc8dfc914ac1cce"
    },
    {
      "Start": "a4aa3ea051d949348a1158cd83d1f3bf",
      "End": "c7c1cdc3a90647f89e22fd2bb77c8470",
      "Id": "1de6beb7fffe44b6bbc8dc08065f40a2"
    },
    {
      "Start": "488720186b0e493e9aaf5f853784374c",
      "End": "0429bbf0f2e64054ad269493cec091d4",
      "Id": "72a8688ab5f7407f93c416770b58bb22"
    },
    {
      "Start": "488720186b0e493e9aaf5f853784374c",
      "End": "acd41a39164246878a61a17134e60aca",
      "Id": "4e83ce31fa4848a3b6f72d342bd8243b"
    },
    {
      "Start": "057d12639b1f4f31bf9f5b8865783d93",
      "End": "f7020ecec52646d583974d7d53d5b9e3",
      "Id": "2903d8fb99a0426b89ef29b15c911ab5"
    },
    {
      "Start": "03e363ece3ce4073b34f2c8510001c2b",
      "End": "e9ed3926112e46ff8b2171289274241c",
      "Id": "fa7b17a72e2b4186a534b787e8230e13"
    },
    {
      "Start": "4ef20f12a3e84a1ba41f1a346b2a1d16",
      "End": "95a75c96b8a54f65a788c59cc5e3c6f9",
      "Id": "56ce75c81470429dae48f6ea5c01f005"
    },
    {
      "Start": "4ef20f12a3e84a1ba41f1a346b2a1d16",
      "End": "71e557c3927646778b6c4cfc2e1523e4",
      "Id": "5c3e82da9bbb49a09da63d828d22cafe"
    },
    {
      "Start": "4ef20f12a3e84a1ba41f1a346b2a1d16",
      "End": "d6c7a8703503455da3547336e6a3e8bf",
      "Id": "32b1729c5e6241599f90dc173a5b322d"
    },
    {
      "Start": "058e873801cb4821b061b4b2fed0f5b7",
      "End": "61bb6a1bf78641b28657f9cf8c3fd969",
      "Id": "619ba13aba6f40739c0901552cde3dce"
    },
    {
      "Start": "8789f690d0fb4d4ea09962f50d1af2d8",
      "End": "7ebe7601e0d64625a1e74a83c5e10bb2",
      "Id": "498c39b96db94bb7becd5d5d10ea3ed6"
    },
    {
      "Start": "eb07da86db734600be0f078466535df2",
      "End": "61b6ae7ba5b542d6888769993e6a6b3d",
      "Id": "c641ec72672e45ecb68dc1cc0fc5aeb5"
    },
    {
      "Start": "25db36f9776f4d489bb96cc62118bbfc",
      "End": "d6af2b7a021d4d9c8d7871a16d248560",
      "Id": "7f0486ea8129482e9cba86ece3f70141"
    },
    {
      "Start": "2db22f83dbe143569e2457d82993c7da",
      "End": "13ebefd1b3c244cab6db4dfd4996bcea",
      "Id": "b28b0c00eb4342f0a8807878175e3b64"
    },
    {
      "Start": "ad6ea306939b40809e4969faaff8a7a9",
      "End": "bbcc9f3830624c75bf3a2accb5c79c24",
      "Id": "d9b5f242d77a4d2f8344b9f71a574c49"
    },
    {
      "Start": "e9116484351f45579a2f99d2bfd526f2",
      "End": "228888bd05a248b99b139629841fbd97",
      "Id": "00d4fc67ff6446929aa4137525e7f9b0"
    },
    {
      "Start": "e695d0772cef4b3c837549eebeddf357",
      "End": "59cd2113c3a84201972447f762f4d06f",
      "Id": "bd49b9ab98ee4fc9a51ee004f82c0674"
    },
    {
      "Start": "fde71122b42f433eac50a7bc95aabbd6",
      "End": "6f433e359e584c96b5cd746da1837256",
      "Id": "08762a13ef63445a8d86b5c309e05251"
    },
    {
      "Start": "fde71122b42f433eac50a7bc95aabbd6",
      "End": "484d2768b2d0421fb401750cf2bdfaa2",
      "Id": "c04eef08ef9d4c87b72efc48a07fe126"
    },
    {
      "Start": "e353654a2d624523b843b76fc1b26eac",
      "End": "3dd15c6a7ab447d2bb0a1ceb5546319b",
      "Id": "6f9aa88d214647b99820690fc2caa518"
    },
    {
      "Start": "267a4da548ad4f2eb251c96859b81b93",
      "End": "d096c172f2e1475c899305e93bda104d",
      "Id": "b81b88787348490a8af334df7378b2bc"
    },
    {
      "Start": "c47bf91a29b242bc85dafd9860340c5b",
      "End": "2080a3bf483046a28135e46768033bb2",
      "Id": "a43655fa02404ef4b519f1134f22e227"
    },
    {
      "Start": "1f7d6d0d598a4cdfbd7b7372d917c509",
      "End": "b27b801fd6af4c5196156897639b344d",
      "Id": "bb95d1ec11954a4b8335bbe0a6215ce7"
    },
    {
      "Start": "1f7d6d0d598a4cdfbd7b7372d917c509",
      "End": "74679466176f4c91aea18d7bcf1670cc",
      "Id": "40cf37a5dc874a4498daa48052ec1272"
    },
    {
      "Start": "1f7d6d0d598a4cdfbd7b7372d917c509",
      "End": "0fc938a787394253ad5cab94eca2710f",
      "Id": "6a9cbac20d9346a6b0bd33ba47df5e0b"
    },
    {
      "Start": "afd102f21e2a42ce9ace59e784d52456",
      "End": "35844cf20df743bdbe3e7f47db50d608",
      "Id": "a2fbac0e0d93432bb409df643ce63206"
    },
    {
      "Start": "afd102f21e2a42ce9ace59e784d52456",
      "End": "12e84a66934245b68f8705fede6c82d7",
      "Id": "a1323c5d92a44247a0d2ed0cf1b2a5ee"
    },
    {
      "Start": "afd102f21e2a42ce9ace59e784d52456",
      "End": "07b6872bfc7e406ab172b90914c3fe0a",
      "Id": "7fb857b580a143c8aafdc982ad86ad0c"
    },
    {
      "Start": "afd102f21e2a42ce9ace59e784d52456",
      "End": "f091ba28f1bf4ceab2a4a7a77794666a",
      "Id": "b0bb670586c248c3bc7be12114e5f389"
    },
    {
      "Start": "afd102f21e2a42ce9ace59e784d52456",
      "End": "13ddfe38377e45a4907498b2ec1a59c7",
      "Id": "7bccc6f9cbc44a06a18561f21d7d38fa"
    },
    {
      "Start": "f9acde4b8ddc4bbbbbe3eff77274c786",
      "End": "2a6cbce1f89949dd91322b231f2db8cb",
      "Id": "be437440b86a4222a2edad1862747dee"
    },
    {
      "Start": "f9acde4b8ddc4bbbbbe3eff77274c786",
      "End": "e96a987091b84adca3705aa9482018fe",
      "Id": "b5ede426045a4551a16f4faf2752f465"
    },
    {
      "Start": "3aea9da347654932aa87ba43fe0a3f42",
      "End": "fe5985acf0cd4a6aafecc026805c66ea",
      "Id": "220f7f728ba74abebec777ccb6c7433c"
    },
    {
      "Start": "abc883ea418c4c88a5dd5e0788732297",
      "End": "f92d4d948b40403391a7a0c1b07ba273",
      "Id": "a65221a53beb43f7b14065fb0112ca62"
    },
    {
      "Start": "1c4d68259aa6408c9d11e9f9e404538b",
      "End": "1c14fa4067ef4d36bc7bc5b1c484f9fc",
      "Id": "0bf78e4f45f949a28f2bb03fce85ceec"
    },
    {
      "Start": "1c4d68259aa6408c9d11e9f9e404538b",
      "End": "316b00814b244ebf8252035cbe46ce6c",
      "Id": "c7b52e65feb440e199685c417b2a512a"
    },
    {
      "Start": "2361f1e0d10a4663972a9832721a97f9",
      "End": "6735e731349a4498af5bb53fc8fedd7d",
      "Id": "c7b6119e5cd74981bcd8009d376d5720"
    },
    {
      "Start": "2cd1708b323e4bdfa1aa5713a4de4294",
      "End": "264c5cf049af4dfcb838d7d04b92ed48",
      "Id": "30be0f555c9b499c890215c4408a6e72"
    },
    {
      "Start": "0d5d7bea50e54ece862193ae42e20735",
      "End": "5cc94ac643b04dd891423907a405ad91",
      "Id": "905f8cf03fca40818865731514252ae4"
    },
    {
      "Start": "795248b99ecd458f81104f2d2e8b0d54",
      "End": "92e752bbf57045c2bdf87e9555fa76e8",
      "Id": "3757803be90b431facab0e4e25a4650d"
    },
    {
      "Start": "c101a8c5cbc84f46915b39ddeb32b7e3",
      "End": "a202442a79f0489d83f26411f0b04c26",
      "Id": "0de9a5bc33cb4fff9bf7910160e91658"
    },
    {
      "Start": "97bfd7ef2179445fb9a429903a42c3ff",
      "End": "c7af7651287f4a1a9ec8c440e49cbaf3",
      "Id": "20f29565790f47f0870537e29195a59a"
    },
    {
      "Start": "6d96539532204441aa29769abe0ff383",
      "End": "ed3d42b034cf4e83b96f811e75f59ecf",
      "Id": "14710786a88b4ff38a5b96ae59137c32"
    },
    {
      "Start": "43ce538de3e64be887c6520ae04916da",
      "End": "c98d3af91b1640cf8ef705ec35d1ed80",
      "Id": "c5792390164d43f683e33d47be89e1c1"
    },
    {
      "Start": "22e2ba7813ad45df89ef9104e793b859",
      "End": "c8550e2235ff4fee914c5d79e8e67204",
      "Id": "cb02394c9789406bbaddd84d16b8af85"
    },
    {
      "Start": "2df4d80d93ee49c3890985de8dad0b84",
      "End": "14e56e349de54163a5b7f239f777db2d",
      "Id": "4a7d75cd1f7f47959610bfbe6ea7d5fc"
    },
    {
      "Start": "f503dbe3f1c144c7a159cd1523b68937",
      "End": "bca7453bf4d043798675ece20c37795f",
      "Id": "15abf9c5e47d4b4c8249199d9b77537d"
    },
    {
      "Start": "66fce0a8ecbf4c799f977ea49fcaf5b6",
      "End": "c4515bb66cbd4b8b857d3bfe8ff11580",
      "Id": "5d368c4b3b7649f1993ce9078a5cb0ce"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.8.0.2471",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 10.989238739013672,
      "EyeY": 8.03773307800293,
      "EyeZ": 1.3666617870330811,
      "LookX": -4.1942195892333984,
      "LookY": -4.0995497703552246,
      "LookZ": -1.3781085014343262,
      "UpX": -0.48218324780464172,
      "UpY": 0.8616260290145874,
      "UpZ": -0.15843001008033752
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "RDF Wrapper (Python Script)",
        "Id": "e00054a13da24212ab4540997633798f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2525.0401305062205,
        "Y": 832.90906694939054
      },
      {
        "ShowGeometry": true,
        "Name": "Geo List",
        "Id": "61e44d5eee674f26b9e8103bb75c7aa8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2182.681684547149,
        "Y": 1027.7985375304561
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "55e5541613984633bd3985a301a6f2f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 876.23891539276974,
        "Y": -84.507238226551749
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.FileExists",
        "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 864.50846742524027,
        "Y": -187.476969515672
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "963c470715ed4f5b815704780b1b964a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 599.56775557253548,
        "Y": -183.2153950582998
      },
      {
        "ShowGeometry": true,
        "Name": "Query Result Viewer",
        "Id": "aef00e0d9cbc4c89bc624f16784d0389",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1390.7185432221877,
        "Y": -78.451079897292516
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3caf2c5d39a14bb8a8d117a845916766",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1094.922414687501,
        "Y": -191.55648136451123
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Names",
        "Id": "97a460bf0a4c4dc4b8db487e25973aa9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34.052890205063363,
        "Y": -136.21929959368157
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Index",
        "Id": "ae8694a67be34db0b7c6da183bae8d1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -21.492905642963024,
        "Y": 240.67580029145222
      },
      {
        "ShowGeometry": true,
        "Name": "Polygon1-Name",
        "Id": "c5ca528b4d9f4975bf11edd564038195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1029.2036635657842,
        "Y": -448.98460456901364
      },
      {
        "ShowGeometry": true,
        "Name": "Points",
        "Id": "8cc6c1fb61484b86bab82908655d3df0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -42.847123295459596,
        "Y": 557.29974461528229
      },
      {
        "ShowGeometry": true,
        "Name": "PolygonCoordList1",
        "Id": "ff616aa35b194fbfa265d2a312b357bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -40.137333403249158,
        "Y": 789.31672429853847
      },
      {
        "ShowGeometry": true,
        "Name": "PolygonCoordList2",
        "Id": "20f595b21050444cad303c1015c8207f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38.798896513741056,
        "Y": 985.25786003658231
      },
      {
        "ShowGeometry": true,
        "Name": "Line1",
        "Id": "7747bbbfa858460687e58cfecc9b5cf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 626.67511768957831,
        "Y": 589.16139269415339
      },
      {
        "ShowGeometry": true,
        "Name": "Line2",
        "Id": "fa9f7cec796e49d2981be54453892be2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 630.01471414985986,
        "Y": 845.88110631972063
      },
      {
        "ShowGeometry": true,
        "Name": "RDF Prefixes",
        "Id": "94e1fb21689642b9b5fa86b874146ae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1703.7978268450852,
        "Y": -218.95176980649921
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "5176eda205e34de7a665e804a6aae486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1733.6503466797785,
        "Y": 1343.2922041574907
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.ByPerimeterPoints",
        "Id": "a231e2256f9d425e90c75023e27da8cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 635.07749046452136,
        "Y": 1345.7770141578756
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.ByPerimeterPoints",
        "Id": "35b5556ac3ae45acb564e76c7b0f35c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 633.13029999809282,
        "Y": 1086.3708270038744
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "8e0e97ac456349348ae8f407ab7fb7ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 59.615097869279,
        "Y": 1904.1284811543383
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "b7f93905b81c487c99a0bb121432d94b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1738.6659447333627,
        "Y": 1089.5272156229084
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "10afdaeff2a642dba625b86ba323d6fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1732.2614398614642,
        "Y": 587.91830794779912
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "013e8a67712b4ae39da0ed75f65594d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1735.8409659980357,
        "Y": 847.73469766565825
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "c35aef94b79f494486311eadd2b8352d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3401.9521292983736,
        "Y": 967.541229345149
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.WriteText",
        "Id": "bc6e3de400aa462da2f128593313d246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3400.33703872241,
        "Y": 1101.1740619038685
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "bfdc4615c6274338b4d5becf5c10fbc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1735.2898393947255,
        "Y": 343.57968423327225
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "5b34801b03bf4e0290214b4c52894850",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -720.45957697023846,
        "Y": 1478.0052624604677
      },
      {
        "ShowGeometry": true,
        "Name": "Color Palette",
        "Id": "b714a12042164093bebad72997dbaf06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -935.67514781722753,
        "Y": 2347.5184492156063
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - Line1",
        "Id": "79e259c2f8714e5fbd282e95e3b9d02f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 969.66273891841979,
        "Y": 583.6714042562794
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - Point1",
        "Id": "d2b62629a0554201bd1a5a39be2d7d7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 969.25193675163348,
        "Y": 322.83849234193622
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - Line2",
        "Id": "32e8539b08034a57a003e887d6011f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 967.222063298367,
        "Y": 846.40770080426569
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - Polygon1",
        "Id": "5bcfa659ed5849c2ba551bd23c2a9d5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 980.8393621962789,
        "Y": 1087.6366774332091
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - Polygon2",
        "Id": "9d2e9a1bc56b4de792b3b7e923a76afd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 988.84663875814749,
        "Y": 1341.5388113137019
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "fa87b26c82a8488b888bd68e66796f2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -946.04245295582336,
        "Y": 1481.343125310651
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "e9ad885b7e2845d3b44873e888a7be38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -946.88905758042733,
        "Y": 1649.1200254884484
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "fe9f9b9d604e448bb929e13a8b6eac0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -946.64317440717446,
        "Y": 1816.4051593197391
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "1df51be173274ce583cf70b7987b356d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -942.73949742389118,
        "Y": 1991.0058807710902
      },
      {
        "ShowGeometry": true,
        "Name": "IF-inList",
        "Id": "e7c2b58156c0432f8ebc24618c2f8e0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.05508504395107,
        "Y": 2171.7029252391576
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "d816a2d3c88e4876baa161a90f11a416",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -719.857501125233,
        "Y": 1647.7289254984453
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "43c394e8ed6a49e08743c025d5fde3fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -720.33846440708771,
        "Y": 1819.6488355914071
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "ad18b37dc3c14625bbfacef86803868b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -720.93632426995214,
        "Y": 1990.2910327905211
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Highlighter",
        "Id": "41f46af230dc407c854a0bb264db0f58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -717.13724002532058,
        "Y": 2172.5256664966696
      },
      {
        "ShowGeometry": true,
        "Name": "Geo List",
        "Id": "4aa5aca4c9d245ce95df137be708a5e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -331.2735459599395,
        "Y": 1666.4704885256206
      },
      {
        "ShowGeometry": true,
        "Name": "Notes",
        "Id": "29d4977ffd5a4fbc99b46521c03c224b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 589.1606514818136,
        "Y": -466.11886825723212
      },
      {
        "ShowGeometry": true,
        "Name": "List Viewer",
        "Id": "53b66a95df584de1bbabfe444f3b3828",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -334.57134547230339,
        "Y": 1904.2661525360572
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "15a7732f6cb04dd091354990f47294cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3039.8582851258411,
        "Y": 1104.3741329106101
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6a6b21fb028f4604bb96288628d53ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3297.6814557471225,
        "Y": 1249.2061121982861
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "707d96c4b0c447fab11fd20d86754199",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1273.954858953952,
        "Y": -193.07196180558611
      },
      {
        "ShowGeometry": true,
        "Name": "CubeCoord + Length",
        "Id": "26b91f1a142e42539c8751f65ccacf8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -44.134984523624951,
        "Y": 1178.3973806721567
      },
      {
        "ShowGeometry": true,
        "Name": "Cuboid.ByLengths",
        "Id": "4af187e559c648cc8e8f4b850a65f5dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 636.27415313860979,
        "Y": 1570.3695034194345
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "3f57e74dd731444791e46505ab0dfb81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1098.6579941145469,
        "Y": 44.147982433983685
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "4e3575612a134261972d058ad1f6bbdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3041.3952952989489,
        "Y": 997.84550766476946
      },
      {
        "ShowGeometry": true,
        "Name": "Cuboid.ByLengths",
        "Id": "bcf4ca6143d3499eb8becca4eef436c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 634.85402690943351,
        "Y": 1882.714243425009
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - MultiPolygon1",
        "Id": "9c9993db47df42cbb01f8dc59d85d42b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 980.88891088542107,
        "Y": 1683.5733750093557
      },
      {
        "ShowGeometry": true,
        "Name": "Geodata Collector",
        "Id": "9d4f3ac7e86c4eed9551601d7a456da1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1166.4862582681872,
        "Y": 1586.1691520350944
      },
      {
        "ShowGeometry": true,
        "Name": "Solid.Centroid",
        "Id": "99071d55456f4470a9b60e93674bc3ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 965.33626343221363,
        "Y": 1584.7486937184804
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "66b36e8a68fc47fd9676c33a9e6a2914",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1736.7254038354913,
        "Y": 1596.91859969175
      },
      {
        "ShowGeometry": true,
        "Name": "Solid.Centroid",
        "Id": "7613c44469dc4898a47b8fbc413da509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 969.66277616090133,
        "Y": 1878.2430991470392
      },
      {
        "ShowGeometry": true,
        "Name": "Geodata Collector",
        "Id": "55438b6afc574fa0894c6645a8fc0906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1170.8127709968774,
        "Y": 1879.6635574636493
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Object - MultiPolygon1",
        "Id": "a83e7d84eb16436d99c9d93164e6cd1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 985.21542361410843,
        "Y": 1977.0677804379193
      },
      {
        "ShowGeometry": true,
        "Name": "WKT Converter (Python Script)",
        "Id": "d4c09c32a6e947509b1d3203858097a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1740.961414663798,
        "Y": 1885.3265894333538
      }
    ],
    "Annotations": [
      {
        "Id": "d5755094afb44c55bdf21b6c7a525b2d",
        "Title": "Geometry Name+ Index",
        "Nodes": [
          "97a460bf0a4c4dc4b8db487e25973aa9",
          "ae8694a67be34db0b7c6da183bae8d1a"
        ],
        "Left": -44.052890205063363,
        "Top": -232.21929959368157,
        "Width": 261.0,
        "Height": 627.89509988513373,
        "FontSize": 36.0,
        "InitialTop": -136.21929959368157,
        "InitialHeight": 521.89509988513373,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "23fd0eb5566041e59353ff762a20a4c2",
        "Title": "Coordinates\r\n ",
        "Nodes": [
          "8cc6c1fb61484b86bab82908655d3df0",
          "ff616aa35b194fbfa265d2a312b357bd",
          "20f595b21050444cad303c1015c8207f",
          "26b91f1a142e42539c8751f65ccacf8b"
        ],
        "Left": -54.134984523624951,
        "Top": 461.29974461528229,
        "Width": 401.0,
        "Height": 856.09763605687442,
        "FontSize": 36.0,
        "InitialTop": 557.29974461528229,
        "InitialHeight": 766.09763605687442,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04072cb4669049209b52fd1ac4d025a5",
        "Title": "WKT Generator",
        "Nodes": [
          "e00054a13da24212ab4540997633798f",
          "61e44d5eee674f26b9e8103bb75c7aa8",
          "94e1fb21689642b9b5fa86b874146ae5",
          "5176eda205e34de7a665e804a6aae486",
          "b7f93905b81c487c99a0bb121432d94b",
          "10afdaeff2a642dba625b86ba323d6fe",
          "013e8a67712b4ae39da0ed75f65594d5",
          "bfdc4615c6274338b4d5becf5c10fbc6",
          "66b36e8a68fc47fd9676c33a9e6a2914",
          "d4c09c32a6e947509b1d3203858097a2"
        ],
        "Left": 1693.7978268450852,
        "Top": -271.95176980649921,
        "Width": 1076.2423036611353,
        "Height": 2365.2783592398528,
        "FontSize": 36.0,
        "InitialTop": -218.95176980649921,
        "InitialHeight": 1707.2439739639897,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "4c9ad97f26e14e9fbd8015f8b0ed1801",
        "Title": "Geometry Generator",
        "Nodes": [
          "7747bbbfa858460687e58cfecc9b5cf4",
          "fa9f7cec796e49d2981be54453892be2",
          "a231e2256f9d425e90c75023e27da8cc",
          "35b5556ac3ae45acb564e76c7b0f35c3",
          "79e259c2f8714e5fbd282e95e3b9d02f",
          "d2b62629a0554201bd1a5a39be2d7d7b",
          "32e8539b08034a57a003e887d6011f13",
          "5bcfa659ed5849c2ba551bd23c2a9d5e",
          "9d2e9a1bc56b4de792b3b7e923a76afd",
          "4af187e559c648cc8e8f4b850a65f5dd",
          "bcf4ca6143d3499eb8becca4eef436c8",
          "7613c44469dc4898a47b8fbc413da509",
          "55438b6afc574fa0894c6645a8fc0906",
          "a83e7d84eb16436d99c9d93164e6cd1e"
        ],
        "Left": 616.67511768957831,
        "Top": 269.83849234193622,
        "Width": 929.17152106856918,
        "Height": 1864.2292880959831,
        "FontSize": 36.0,
        "InitialTop": 322.83849234193622,
        "InitialHeight": 1700.4837272455973,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8f1eaa04e16b43899c987a4f0ba58e74",
        "Title": "Geometry Highlighter",
        "Nodes": [
          "5b34801b03bf4e0290214b4c52894850",
          "b714a12042164093bebad72997dbaf06",
          "fa87b26c82a8488b888bd68e66796f2a",
          "e9ad885b7e2845d3b44873e888a7be38",
          "fe9f9b9d604e448bb929e13a8b6eac0f",
          "1df51be173274ce583cf70b7987b356d",
          "e7c2b58156c0432f8ebc24618c2f8e0e",
          "d816a2d3c88e4876baa161a90f11a416",
          "43c394e8ed6a49e08743c025d5fde3fc",
          "ad18b37dc3c14625bbfacef86803868b",
          "41f46af230dc407c854a0bb264db0f58",
          "4aa5aca4c9d245ce95df137be708a5e7",
          "53b66a95df584de1bbabfe444f3b3828",
          "8e0e97ac456349348ae8f407ab7fb7ce"
        ],
        "Left": -956.88905758042733,
        "Top": 1425.0052624604677,
        "Width": 1236.5041554497063,
        "Height": 1015.5131867551386,
        "FontSize": 36.0,
        "InitialTop": 1478.0052624604677,
        "InitialHeight": 1014.5131867551386,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5c0afc45a1c048e1a54d2a4955e0da61",
        "Title": "RDF Export",
        "Nodes": [
          "15a7732f6cb04dd091354990f47294cf",
          "6a6b21fb028f4604bb96288628d53ad4",
          "c35aef94b79f494486311eadd2b8352d",
          "bc6e3de400aa462da2f128593313d246",
          "4e3575612a134261972d058ad1f6bbdb"
        ],
        "Left": 3029.8582851258411,
        "Top": 914.541229345149,
        "Width": 572.0938441725325,
        "Height": 443.6648828531371,
        "FontSize": 36.0,
        "InitialTop": 967.541229345149,
        "InitialHeight": 426.6648828531371,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b23e7e8a50c49f58eeca893711b4716",
        "Title": "XML(query result) Import and Parsing",
        "Nodes": [
          "55e5541613984633bd3985a301a6f2f0",
          "9c3c9a9cb6f048cf9f7f1435208d010b",
          "963c470715ed4f5b815704780b1b964a",
          "aef00e0d9cbc4c89bc624f16784d0389",
          "3caf2c5d39a14bb8a8d117a845916766",
          "707d96c4b0c447fab11fd20d86754199",
          "3f57e74dd731444791e46505ab0dfb81"
        ],
        "Left": 589.56775557253548,
        "Top": -246.07196180558611,
        "Width": 998.38710338141652,
        "Height": 477.6208819082936,
        "FontSize": 36.0,
        "InitialTop": -193.07196180558611,
        "InitialHeight": 382.21994423956983,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1310.5693155840058,
    "Y": -1558.4742904578022,
    "Zoom": 1.1058354550917093
  }
}