{
  "Uuid": "8b1e7f7f-7304-4d5e-a570-fd8ce7ff620e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "QueryResultViewer",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.FileExists@string",
      "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
      "Inputs": [
        {
          "Id": "949291cdd50249a388dcd7b15fdc6e59",
          "Name": "path",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e6a623c31214ec7a86d96dce9d36894",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if a file exists at the given path.\n\nFileSystem.FileExists (path: string): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\yhe\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\rdf\\query_result.xml",
      "NodeType": "ExtensionNode",
      "Id": "963c470715ed4f5b815704780b1b964a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0eba4e25d56d42f99f6cd7d1d4848abe",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aef00e0d9cbc4c89bc624f16784d0389",
      "Inputs": [
        {
          "Id": "3dd15c6a7ab447d2bb0a1ceb5546319b",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport ctypes\r\nimport xml.etree.ElementTree as ET\r\nsys.path.append(r\"C:\\Users\\yhe\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom xml.dom.minidom import parse, parseString\r\n\r\n#dir = \"r'C:\\\\Users\\\\nobita_yhe\\\\Workspace\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\rdf\\\\query_result.xml'\"\r\n#dir = r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml'\r\nwarn_str = '(XML) File or File Path does not exist.'\r\nres = ''\r\n######################################################\r\n\r\ndef xmlParsing2Uri(path=dir):\r\n    \"\"\" it returns the list in structure like [[uri1, uri2],...,[uri1, uri2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    \r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                ur_lst.append(ur.childNodes[0].nodeValue)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\n\r\ndef xml2GeometryString(path=dir):\r\n    \"\"\" it returns the list in structure like [[Geomety1, Geomety2],...,[Geomety1, Geomety2]]\"\"\"\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    resList = data.getElementsByTagName('result')\r\n    seperator = '#'\r\n\r\n    res_lst = []\r\n    for res in resList: # handle the <result>...</result>\r\n        ur_lst = []\r\n        for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n            for ur in bi.getElementsByTagName('uri'):\r\n                uri_str = ur.childNodes[0].nodeValue\r\n                geo_index = uri_str.find(seperator) \r\n                geo_str = uri_str[geo_index+1:]\r\n                ur_lst.append(geo_str)\r\n        res_lst.append(ur_lst)\r\n        ur_lst = []\r\n    return res_lst\r\n\r\ndef xml2GeoInDynamo(path=dir):\r\n    #with open(r'C:\\Users\\nobita_yhe\\Workspace\\ExtendingJena\\src\\main\\resources\\rdf\\query_result.xml', 'r', encoding='utf-8') as file:\r\n    with open(path, 'r', encoding='utf-8') as file:\r\n        xml_data = file.read()\r\n        dom = parseString(xml_data)\r\n        #dom = parse(xml_data)\r\n        data = dom.documentElement\r\n        resList = data.getElementsByTagName('result')\r\n        seperator = '#'\r\n        \r\n        res_lst = []\r\n        for res in resList: # handle the <result>...</result>\r\n            ur_lst = []\r\n            for bi in res.getElementsByTagName('binding'): # handle the <binding>...</binding>\r\n                for ur in bi.getElementsByTagName('uri'):\r\n                    uri_str = ur.childNodes[0].nodeValue\r\n                    geo_index = uri_str.find(seperator) \r\n                    geo_str = uri_str[geo_index+1:]\r\n                    ur_lst.append(geo_str)\r\n            res_lst.append(ur_lst)\r\n            ur_lst = []\r\n    return res_lst\r\n    \r\n######################################################\r\n\r\nif IN[0] == True:\r\n    dir = IN[1]\r\n    res = xml2GeoInDynamo(dir)\r\nelse:\r\n\tctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\tres = warn_str\r\n######################################################\r\n# Assign your output to the OUT variable.\r\nOUT = res\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3caf2c5d39a14bb8a8d117a845916766",
      "Inputs": [
        {
          "Id": "77bc87c15e0546b0a908a7568c2c03bf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad16ba208c4a435eb9c34e51e4bb261f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bbd33f439eb4c1ea76d5b4863a65de8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n#dataEnteringNode = IN\r\nINDEX_EN = ['A','B','C','D'];\r\nINDEX_NUM = ['1','2','3','4'];\r\nINDEX = [];\r\n\r\nif IN[2] == \"EN\":\r\n    INDEX = INDEX_EN\r\nif IN[2] == \"NUM\":\r\n    INDEX = INDEX_NUM\r\n\"\"\"\r\n# Place your code below this line\r\ndef name_concatenation(geo_name:str, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n \r\n    geo_concat = [geo_name + index[i] for i in range(geo_number)]\r\n    return geo_concat\r\n\r\ndef name_lst_concatenation(geo_name_lst:list, geo_number:int, index = INDEX):\r\n    if geo_number > len(index):\r\n        raise ValueError(\"No more indexes available!\")\r\n    \r\n    geo_concat = [[geo_name + index[i] for i in range(geo_number)] for geo_name in geo_name_lst]\r\n    return geo_concat\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif isinstance(IN[0], str):\r\n    OUT = name_concatenation(IN[0], IN[1])\r\nelse:\r\n    OUT = name_lst_concatenation(IN[0], IN[1])\r\n\"\"\"\r\nOUT = \"\"",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5ca528b4d9f4975bf11edd564038195",
      "Inputs": [
        {
          "Id": "57a2238033c24b7383d6cfe1176f6768",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73aea16d17b4d98b03e2e682d83d9fe",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab031f3cf0f84f0dbda06b2acc56dae0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2769ba043845426fba267cb4438486f4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "/**\n* \"F5\": Run the script\n* \"Ctrl + I\": Isolate Selected Geometry\n* \"Ctrl + P\": Drag & Drop\n*\n*\n*\n**/;",
      "Id": "29d4977ffd5a4fbc99b46521c03c224b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SW == \"True\"? data : null;",
      "Id": "707d96c4b0c447fab11fd20d86754199",
      "Inputs": [
        {
          "Id": "fe5985acf0cd4a6aafecc026805c66ea",
          "Name": "SW",
          "Description": "SW",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c734acd6cd42a8a12c95047633db6a",
          "Name": "data",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e353654a2d624523b843b76fc1b26eac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "3f57e74dd731444791e46505ab0dfb81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aea9da347654932aa87ba43fe0a3f42",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "centroid = Point.ByCoordinates(0,0,2);\noffset = 2/2;\nc_X = 0;\nc_Y = 0;\nc_Z = 2;\n\nbottom_p1 = Point.ByCoordinates(c_X-offset, c_Y-offset, c_Z-offset);\nbottom_p2 = Point.ByCoordinates(c_X-offset, c_Y+offset, c_Z-offset);\nbottom_p3 = Point.ByCoordinates(c_X+offset, c_Y+offset, c_Z-offset);\nbottom_p4 = Point.ByCoordinates(c_X+offset, c_Y-offset, c_Z-offset);\nbottom_face = [bottom_p1, bottom_p2, bottom_p3, bottom_p4];",
      "Id": "6f5992239c4844a3884b639772e60a4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6655f04262554b9eb407fdd60396a4f0",
          "Name": "",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc58df7c32904c85974a1ee76c40ef30",
          "Name": "",
          "Description": "offset",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d955b8854f8435baaf8091b4dddcfa3",
          "Name": "",
          "Description": "c_X",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d5d0a1f3544b21bd8eb1d88bd82898",
          "Name": "",
          "Description": "c_Y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "666e3497898b4455aaadf89154c8722e",
          "Name": "",
          "Description": "c_Z",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "210a597aac5946d5a4e57ca9b0ffdc06",
          "Name": "",
          "Description": "bottom_p1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b60e758a30e4a73815db050c4063e72",
          "Name": "",
          "Description": "bottom_p2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ab7ef0388d44f02b552ec04c7d28748",
          "Name": "",
          "Description": "bottom_p3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeb68be6e81047c99e26e1229adf9b15",
          "Name": "",
          "Description": "bottom_p4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f75bf4b1b5e44f12aeb064d1a23172c0",
          "Name": "",
          "Description": "bottom_face",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "centroid = Point.ByCoordinates(-7, -3, 6);",
      "Id": "fe789f3241d045fa93cd43927766996a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "54af3a10f358403581616a917cf3ed01",
          "Name": "",
          "Description": "centroid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Sphere.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "34c3ec044e2643248116b32cbc85bc9f",
      "Inputs": [
        {
          "Id": "632a2dc32701404ab008e9431b125a7e",
          "Name": "centerPoint",
          "Description": "Point\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e41aed353cf145f5abb0e76d71c7430e",
          "Name": "radius",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fe36685da954660a004fb6cb7cd2e82",
          "Name": "Sphere",
          "Description": "Sphere",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Solid Sphere cetered at the input Point, with given radius.\n\nSphere.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Sphere"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,double,int",
      "Id": "06493a8f57ad4782bdb9ae1e15d0525d",
      "Inputs": [
        {
          "Id": "ed6464b138724d0181567f790d503ba9",
          "Name": "inputGeometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88afce6dde2d49c8a4575023e54d3e1c",
          "Name": "tolerance",
          "Description": "double\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b77c5dddab0489681430a73b9fa7d03",
          "Name": "maxGridLines",
          "Description": "int\nDefault value : 512",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28ec952b8c534477af8a2d155982a262",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Convert a Geometry object such as a Solid or Surface into a Mesh. The resolution of the mesh is determined by the Dynamo render precision\n\nMesh.ByGeometry (inputGeometry: Geometry, tolerance: double = -1, maxGridLines: int = 512): Mesh"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.TriangleCentroids",
      "Id": "99ce511072864923816a141a10b068e5",
      "Inputs": [
        {
          "Id": "9fdd6fad340a474ca5681bb7d9c327a1",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "608c5793ace947c5a5a77c1190e48361",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns Triangle Centroids\n\nMesh.TriangleCentroids ( ): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Explode",
      "Id": "991bc6014911493e84623456f751195a",
      "Inputs": [
        {
          "Id": "0bca9ddb0fc7416a8910320ba64cc086",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "781fcb4195b84639946d3e5b2f931bbb",
          "Name": "Mesh[]",
          "Description": "Mesh[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts Mesh triangles to individual meshes and returns them.\n\nMesh.Explode ( ): Mesh[]"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "1a9767da-639d-4cb0-83a8-d568b124b464 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "1a9767da639d4cb083a8d568b124b464",
      "Inputs": [
        {
          "Id": "43b45844e3c8420d97926d7e524b33b7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30f615e036db458eb0cc3d0779b6a77f",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "ac7baec18464456eaf2c0d5b50d4030f",
      "Inputs": [
        {
          "Id": "878e021702b140fab60601c5718d1a24",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "943982f8da9b425996dcc1273478a2e0",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "673ec465da944a4ea629096e7ff5a635",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "7dcb24a2ce40468685c26d7890aa99f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdb8567c84eb4afaafbdf30e0e106dd2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "list;\npol = list[0];",
      "Id": "4600ed00ce004c5ab079a769be303029",
      "Inputs": [
        {
          "Id": "e96bbdfa8caf47a5a30a41e6581c4821",
          "Name": "list",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4c1a6300ff04f47a2dc46a52aa8297d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "400bcf4ffdda48e9bb00243cebdd7f54",
          "Name": "",
          "Description": "pol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5f0e1deb219e45e28b2a6b9fa3e9792f",
      "Inputs": [
        {
          "Id": "2fcd0388ae9b49c999f225a3ef51d25c",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57159d27bec049a8a2866d4e12adf284",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Vertices",
      "Id": "67f1909d2ab7455c943e505eb46f0258",
      "Inputs": [
        {
          "Id": "7b5fb97d61454deabeca57cd9107959c",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab30e4972dee4b53b8c95c8e222a6ccd",
          "Name": "Point[]",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts the Mesh vertices to Points, and returns them\n\nMesh.Vertices ( ): Point[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "80b16f3f20094a978114d38819afd778",
      "Inputs": [
        {
          "Id": "28406ff61ced4b458435eba731a4fefc",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28d8dfafd9b84e6a9f2e7caf64469b7c",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\n# Input\r\ngeo_lst = IN[0]\r\ngeo_sel_lst = IN[1]\r\nswitch = IN[2]\r\n\r\n\r\ndef inList(geo_sel_lst, geo):\r\n    res = False\r\n    for geo_sel in geo_sel_lst:\r\n        if geo_sel is None:\r\n            break\r\n        if geo_sel.upper() == geo.upper():\r\n            res = True\r\n            break\r\n    return res\r\n#################################################\r\n# Highlighter\r\ncolored_geo_lst = []\r\nif switch:\r\n    color = Color.ByARGB(138,43,226,0) # violet\r\n    for geo in geo_lst:\r\n        geo_name = geo[1]\r\n        if inList(geo_sel_lst, geo_name):  \r\n            geo_data = geo[0]\r\n            colored_geo = ''\r\n            if (geo[2].upper() == \"LINESTRING\" \r\n            or geo[2].upper() == \"POLYGON\" \r\n            or geo[2].upper() == \"MULTIPOLYGON_ROTATION\"):\r\n                colored_geo = GeometryColor.ByGeometryColor(geo[3], color)\r\n            else:\r\n                colored_geo = GeometryColor.ByGeometryColor(geo_data, color)\r\n            colored_geo_lst.append(colored_geo)\r\n\r\n#################################################\r\nOUT = colored_geo_lst\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c302d8cb07164d148faa4c41aaa1d95e",
      "Inputs": [
        {
          "Id": "70e5cb9854cf4853bacb893114ea05c7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50de933f946b4adf9404500c7659cc24",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ba3777f47f4ac997afb221c08a805d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45aaf9ee46ce4e6b9b360474e42a00f7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "fe320baea1a947dc9f3209b013ba191e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "439de5740ce84a57a04ad937f1fd2850",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "POINT = \"POINT\";\nMULTIPOINT = \"MULTIPOINT\";\nLINESTRING = \"LINESTRING\";\nMULTILINESTRING = \"MULTILINESTRING\";\nPOLYGON = \"POLYGON\";\nMULTIPOLYGON = \"MULTIPOLYGON\";\nMULTIPOLYGON_ROTATION = \"MULTIPOLYGON_ROTATION\";\nSPHERE = \"MULTIPOLYGON-SPHERE\";\nGEOMETRYCOLLECTION = \"GEOMETRYCOLLECTION\";\ngeo_sel_lst=\n[\"MULTIPOLYGON5\"];",
      "Id": "fb87db2584334ccaae2d4b50cf6a3ee0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ac84634dea9f4c41a9247983a23630f2",
          "Name": "",
          "Description": "POINT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce7cb61794f24c2d9a1d1fdf6589bbca",
          "Name": "",
          "Description": "MULTIPOINT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3de6c97bbcd046b5a7bd021f6a163333",
          "Name": "",
          "Description": "LINESTRING",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49af685fa0f44b1eb87185e007f69b92",
          "Name": "",
          "Description": "MULTILINESTRING",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "872f922d080545c786164124979cb896",
          "Name": "",
          "Description": "POLYGON",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40cbe787d5a24910a7fe45dc11d3620a",
          "Name": "",
          "Description": "MULTIPOLYGON",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f11461f9a64fd0a866fb96359685f4",
          "Name": "",
          "Description": "MULTIPOLYGON_ROTATION",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70b4a7f170d74fada485a03f75d8faf3",
          "Name": "",
          "Description": "SPHERE",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0173631215bf4f8cb47871633ccb71e6",
          "Name": "",
          "Description": "GEOMETRYCOLLECTION",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b839acc4d3f42a787f66ce06678200b",
          "Name": "",
          "Description": "geo_sel_lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "cf3db25f-6480-433e-bb3b-8afa03322ecf Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "cf3db25f6480433ebb3b8afa03322ecf",
      "Inputs": [
        {
          "Id": "cc24c35c21394c76905680aa0f6f12be",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "769a888447694d52843db4a01a65b6da",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "eee283b1c55244568a077e84693ca07b",
      "Inputs": [
        {
          "Id": "ab6ed296fc8940a9b02d84cccfd388f2",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "066b3c0115a94732b420712c189c3c84",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "11aaf64f4c974045b73d59b169681833",
      "Inputs": [
        {
          "Id": "dcabbbb6db9f479bbfd19b9899eef3f5",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e9c417c0e1c4d9a97636288cf39e80e",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "871f675867674a7785c7487d610873d9",
      "Inputs": [
        {
          "Id": "46a3b423c77747f4a0d1008d648a03ac",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88af41fe43f9439eaf454f8435dc2439",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nimport random\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\nclr.AddReference('MeshToolkit')\r\nfrom Autodesk.Dynamo.MeshToolkit import *\r\n\r\n############# Common Geometry Types ##################\r\nPOINT = \"POINT\";\r\nMULTIPOINT = \"MULTIPOINT\";\r\nLINESTRING = \"LINESTRING\";\r\nMULTILINESTRING = \"MULTILINESTRING\";\r\nPOLYGON = \"POLYGON\";\r\nPOLYGON_ROTATION = \"POLYGON_ROTATION\"\r\nMULTIPOLYGON = \"MULTIPOLYGON\"\r\nMULTIPOLYGON_ROTATION = \"MULTIPOLYGON_ROTATION\"\r\nSPHERE = \"MULTIPOLYGON_SPHERE\"\r\nGEOMETRYCOLLECTION = \"GEOMETRYCOLLECTION\";\r\n\r\n\"\"\"\r\nNUM_MULTIPOLYGON = 10\r\nNUM_POLYGON = 10\r\nNUM_LINESTRING = 10\r\nNUM_POINT = 10\r\n\"\"\"\r\n###################### Input ######################### \r\njson_file = IN[0]\r\nres_dict = IN[1]\r\nground_truth_dict = IN[2]\r\nswitch_generator = IN[3]\r\nswitch_ground_truth = IN[4]\r\nswitch_query_result = IN[5]\r\n\r\n################# Container ####################\r\ngeo_lst = []\r\n\r\ngeo_pt_lst = []\r\ngeo_li_lst = []\r\ngeo_pol_lst = []\r\ngeo_mPol_lst = []\r\ngeo_sph_lst = []\r\n\r\ngeo_combi_lst = []\r\n\r\n################# Color & Filter #####################\r\ncolor_green_ground_truth = Color.ByARGB(230,230,250,0)\r\ncolor_red_query_result = Color.ByARGB(255,255,0,0)\r\ncolor = \"\"\r\nfilter_dict = json_file\r\n\r\nswitch_coloring = False\r\n\r\nif switch_ground_truth and not switch_query_result:\r\n    switch_coloring = True\r\n    color = color_green_ground_truth\r\n    filter_dict = ground_truth_dict\r\n    \r\nif not switch_ground_truth and switch_query_result:\r\n    switch_coloring = True\r\n    color = color_red_query_result\r\n    filter_dict = res_dict\r\n    \r\nif switch_ground_truth and switch_query_result:\r\n    switch_coloring = False\r\n    color = \"\"\r\n    filter_dict = json_file\r\n    \r\ndef coloring(geometry, geo_name):\r\n    if switch_coloring:\r\n        \r\n        if geo_name in filter_dict.keys():\r\n            return GeometryColor.ByGeometryColor(geometry, color)\r\n            \r\n    return geometry\r\n\r\n######################## Body #######################\r\n\r\nif switch_generator == False:\r\n    OUT = []\r\n    exit()\r\n    \r\nfor geo_name, geo_data in json_file.items():\r\n   \r\n    if ( geo_name.find('POINT') != -1 or\r\n        geo_name.find('Point') != -1 ):\r\n\r\n        pt_data = geo_data\r\n        pt_x = 0.0\r\n        pt_y = 0.0\r\n        pt_z = 0.0\r\n        if (len(pt_data) == 3): # (x, y, z)\r\n            pt_x = pt_data[0]\r\n            pt_y = pt_data[1]\r\n            pt_z = pt_data[2]\r\n            \r\n        if (len(pt_data) == 2): # (x, y)\r\n            pt_x = pt_data[0]\r\n            pt_y = pt_data[1]\r\n            pt_z = 0.0\r\n            \r\n        pt = Point.ByCoordinates(pt_x, pt_y, pt_z)\r\n\r\n        geo_data = pt\r\n        geo_name = geo_name.upper()\r\n        geo_type = 'POINT'\r\n        geometry = coloring(pt, geo_name.upper())\r\n\r\n        geo_pt_obj = (geo_data, geo_name, geo_type, geometry)\r\n        geo_pt_lst.append(geo_pt_obj)\r\n        continue\r\n\r\n    if ( geo_name.find('LINESTRING') != -1 or\r\n        geo_name.find('Linestring') != -1 or\r\n        geo_name.find('LINE') != -1 or\r\n        geo_name.find('Line') != -1 ):\r\n\r\n        pt_lst = []\r\n        for pt_data in geo_data[0]:\r\n            pt = Point.ByCoordinates(pt_data[0], pt_data[1], pt_data[2])\r\n            pt_lst.append(pt)\r\n\r\n        geo_data = pt_lst\r\n        geo_name = geo_name.upper()\r\n        geo_type = 'LINESTRING'\r\n        geometry = coloring(PolyCurve.ByPoints(pt_lst, False), geo_name.upper())\r\n\r\n        geo_li_obj = (geo_data, geo_name, geo_type, geometry)\r\n        geo_li_lst.append(geo_li_obj)\r\n        continue\r\n\r\n    if ( geo_name.find('SPHERE') != -1 or\r\n        geo_name.find('Sphere') != -1 ):\r\n\r\n        face_lst = []\r\n        for face_data in geo_data:\r\n\r\n            pt_lst = []\r\n            for vert_data in face_data:\r\n                pt = Point.ByCoordinates(vert_data[0], vert_data[1], vert_data[2])\r\n                pt_lst.append(pt)\r\n            face = coloring(Surface.ByPerimeterPoints(pt_lst), geo_name.upper())\r\n            face_lst.append(face)\r\n\r\n        geo_data = face_lst\r\n        geo_name = geo_name.upper()\r\n        geo_type = 'MULTIPOLYGON_SPHERE'\r\n        geometry = face_lst\r\n\r\n        geo_sph_obj = (geo_data, geo_name, geo_type, geometry)\r\n        geo_sph_lst.append(geo_sph_obj)\r\n        continue\r\n\r\n    if ( geo_name.find('MULTIPOLYGON') != -1 or\r\n        geo_name.find('Multipolygon') != -1  or\r\n        geo_name.find('CUBE') != -1 or\r\n        geo_name.find('Cube') != -1 ):\r\n\r\n        face_lst = []\r\n        for face_data in geo_data:\r\n\r\n            pt_lst = []\r\n            for vert_data in face_data:\r\n                pt = Point.ByCoordinates(vert_data[0], vert_data[1], vert_data[2])\r\n                pt_lst.append(pt)\r\n                # print()\r\n            face = coloring(Surface.ByPerimeterPoints(pt_lst), geo_name.upper())\r\n            # face = []\r\n            face_lst.append(face)\r\n\r\n        geo_data = face_lst\r\n        geo_name = geo_name.upper()\r\n        geo_type = 'MULTIPOLYGON'\r\n        geometry = face_lst\r\n\r\n        geo_mPol_obj = (geo_data, geo_name, geo_type, geometry)\r\n        geo_mPol_lst.append(geo_mPol_obj)\r\n        continue\r\n\r\n    if ( geo_name.find('POLYGON') != -1 or \r\n        geo_name.find('Polygon') != -1 ):\r\n        \r\n        pt_lst = []\r\n        for vert_data in geo_data[0]:\r\n            pt = Point.ByCoordinates(vert_data[0], vert_data[1], vert_data[2])\r\n            pt_lst.append(pt)\r\n            # print()\r\n        face = Surface.ByPerimeterPoints(pt_lst)\r\n        #face = []\r\n\r\n        geo_data = pt_lst\r\n        geo_name = geo_name.upper()\r\n        geo_type = 'POLYGON'\r\n        geometry = coloring(face, geo_name.upper())\r\n        # geometry = geo_data\r\n\r\n        geo_pol_obj = (geo_data, geo_name, geo_type, geometry)\r\n        geo_pol_lst.append(geo_pol_obj)\r\n        continue\r\n\r\n    \r\ngeo_combi_lst = geo_pt_lst + geo_li_lst + geo_pol_lst + geo_mPol_lst + geo_sph_lst\r\n\r\n######################### Output ############################\r\nOUT = geo_combi_lst\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "da5cd7ec9968431b9c02ee6620412ada",
      "Inputs": [
        {
          "Id": "d6777c60ad04419ea6586529cbd5a499",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7435e184bee547cc84e6005d9da7efb8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6982d49eb6743ff9574c168e582c886",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d142a883af646e184dd9e9f73e6e93d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c95af32e5654724a7b923a7a9e60ce3",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a02505cff52471aaff4ecb33f07f20f",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a16f8cede777454c92f9c9c9f93cb514",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport json\r\nimport ctypes\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndir = IN[0]\r\n\r\nwarn_str = '(Base) File or File Path does not exist.'\r\n\r\ndata = {}\r\ntry:\r\n    with open(dir, 'r') as fp:\r\n        data = json.load(fp)\r\nexcept:\r\n    ctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = data",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "47aeafe1cb99450cb9aab7def0b47fef",
      "Inputs": [
        {
          "Id": "a5f598d2e023499d9bf0355794e7c82f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f1501f6b7d240558791f76b98319eed",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3cfb3fe3994b4566a2c99f8419182612",
      "Inputs": [
        {
          "Id": "363ffcc16a0542f0a0aea21711c7d480",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a07aaf905fe740b6a7e84957029c119d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\yhe\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\JSON\\xxl3DScene.json",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\JSON\\xxl3DScene.json",
      "NodeType": "ExtensionNode",
      "Id": "fa6983f6e1af4be3bcf56aea05aaddd4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f2378090418471e945d35be8e02cc60",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b048d5afe4c442b6944bf104390e697b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa0731a7592e480db5494df02ee3e51e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c41c5d8ce1fb432c892d90a27d70ee0a",
      "Inputs": [
        {
          "Id": "ad8d59584a5e4bb2910046f3b59ce971",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0b330c8795d461c97c14f22569d1282",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "5050387ca57e4e008dd9971ef30e2629",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61c1fcf384124f7889d1e2211f036a3e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "09fd105ed35b432787de4f7ec72e8c0b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aaed95d7801b4ea29dc18a422c775495",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\ndef flatten(inp_lst):\r\n# Core: \r\n#\t\t1. traverse the input list \r\n#\t\t2. concatenate each two adjacent elements \r\n#\t\t3. store the concatenation into the output list\r\n#\t\t4. remove the non-list element out of the input list\r\n    out_lst = []\r\n    while True:\r\n        if inp_lst == []:\r\n            break\r\n        for ind, val in enumerate(inp_lst):\r\n            if type(val) == list:\r\n                inp_lst = val + inp_lst[ind+1:]\r\n                break\r\n            else:\r\n                out_lst.append(val)\r\n                inp_lst.pop(ind)\r\n                break\r\n    return out_lst\r\n    \r\n###################################################\r\nres_lst = flatten(IN[0])\r\n\r\nres_dict = {}\r\nfor res in res_lst:\r\n    res_dict[res] = res\r\n\r\nOUT = res_dict",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "000ca572a653468cba6ba27813cb14b1",
      "Inputs": [
        {
          "Id": "e7239c6019dd442e94088e46108327f5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e42b32d05b34c40855c7c0d90c56f74",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bb34d26722024927908183f1ec37e9d1",
      "Inputs": [
        {
          "Id": "bfc092bee3e443dd98f2e7b59d5befc7",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26144c8263bc4f648848aebcb83e688f",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\yhe\\Documents\\Developer\\Repo\\ExtendingJena\\src\\main\\resources\\JSON\\groundTruth.json",
      "InputValue": "..\\..\\..\\..\\..\\..\\..\\resources\\JSON\\groundTruth.json",
      "NodeType": "ExtensionNode",
      "Id": "363295086fd740c3beb3646509bd7c28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c1ccacc93cae4053805f508d26891149",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport json\r\nimport ctypes\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndir = IN[0]\r\n\r\nwarn_str = '<GroundTruth> File or File Path does not exist.'\r\n\r\ndata = {}\r\ntry:\r\n    with open(dir, 'r') as fp:\r\n        data = json.load(fp)\r\nexcept:\r\n    ctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\r\n# Assign your output to the OUT variable.\r\nif data is None:\r\n    data = {}\r\nOUT = data",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "41747d547b9c4b27931b3ca6e0215c61",
      "Inputs": [
        {
          "Id": "01ab0da28f9d4d13ad5d143529754337",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9159692e5274ac3bf74ca665b285e6f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "01862427cde34887b192d733a66de2c9",
      "Inputs": [
        {
          "Id": "ced4b62b819d4a19a1d892b07dca1e3a",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01bbd51d12a94a31a6584ab1f4ca2d98",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "e6fa0700-9dc6-4b9d-97d7-557102086108 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "e6fa07009dc64b9d97d7557102086108",
      "Inputs": [
        {
          "Id": "5d31176e058f41f082326ad3ad061fd1",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e25b51881694f31a83d460250b8cd41",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################# Input #######################\r\nres_dict = IN[0]\r\nground_truth_dict = IN[1]\r\n\r\n################## Body ####################\r\nres = \"\"\r\nif not (res_dict is None) and not (ground_truth_dict is None):\r\n    \r\n    count = 0\r\n    for res_key in res_dict.keys():\r\n    \r\n        if res_key in ground_truth_dict.keys():\r\n            count += 1\r\n            \r\n    ac = count/len(ground_truth_dict)\r\n    if ac <= 1.0:\r\n        res = f\"Num of geometries in Query Result: {len(res_dict)},\\nNum of geometries in Ground Truth: {len(ground_truth_dict)},\\nAccuracy: {ac*100}%\"\r\n    else:\r\n        res = \"Exception in the calculation.\"\r\n################## Output ###################\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d205bf66921949beb7be8002e1f79852",
      "Inputs": [
        {
          "Id": "684eadea5bf24dc3b236131d110b1835",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45a4f4a5baff41a09d83cb48763f18e3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a43c16ce1ec44c4b1f6a0913ac553ce",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6152757309134f8a8469cc9945423019",
      "Inputs": [
        {
          "Id": "78f518cfd1014475a8d546f1dcea56e8",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb8138fae498431f9ee053e9e3193c44",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport ctypes\r\nimport xml.etree.ElementTree as ET\r\nsys.path.append(r\"C:\\Users\\yhe\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom xml.dom.minidom import parse, parseString\r\n\r\nwarn_str = '<.dyn> File or File Path does not exist.'\r\nres = ''\r\n######################################################\r\n\r\ndef rdfParsing2GeoData(path=dir):\r\n    \"\"\" it returns the json file in structure like { \"POLYGON1\" : [...], \r\n                                                     \"POLYGON2\" : [...], \r\n                                                     \"MULTIPOLYGON1\" : [...], ...\r\n                                                    }\r\n    \"\"\"\r\n    geo_dict = {}\r\n    dom = parse(path)\r\n    data = dom.documentElement\r\n    rdf_desc_lst = data.getElementsByTagName(\"rdf:Description\")\r\n    # geo_in_wkt = data.getElementsByTagName(\"geo:asWKT\")\r\n\r\n    for i in range(1, len(rdf_desc_lst)): # first description element (root element) should be removed.\r\n        descr_el = rdf_desc_lst[i]\r\n        geo_name_num = descr_el.attributes._attrs['rdf:about'].nodeValue.split('#')[1]\r\n        geo_wkt_data = \"\"\r\n        try:\r\n            geo_wkt_data = descr_el.childNodes[0].firstChild.data\r\n        except:\r\n            geo_wkt_data = descr_el.childNodes[1].firstChild.data\r\n        geo_algebra_lst = []\r\n\r\n        if ( geo_name_num.find('POINT') != -1 or\r\n            geo_name_num.find('Point') != -1 ):\r\n            \r\n            wkt_data_lst = geo_wkt_data.split(\"(\")[1] # remove title 'POINT'\r\n            vert_str_lst = wkt_data_lst\r\n            vert_str_lst = vert_str_lst.replace( \")\", \"\" ) # remove character ')'\r\n\r\n            pt_algebra_lst = []\r\n            pt_str_lst = vert_str_lst.split(\" \")\r\n\r\n            pt_algebra_lst = [ float(pt_str) for pt_str in pt_str_lst ]\r\n            geo_algebra_lst.append(pt_algebra_lst)\r\n            \r\n        if ( geo_name_num.find('LINESTRING') != -1 or\r\n            geo_name_num.find('Linestring') != -1 or\r\n            geo_name_num.find('LINE') != -1 or\r\n            geo_name_num.find('Line') != -1 ):\r\n\r\n            wkt_data_lst = geo_wkt_data.split(\"((\")[1] # remove title 'LINESTRING'\r\n            vert_str_lst = wkt_data_lst\r\n            vert_str_lst = vert_str_lst.replace( \")\", \"\" ) # remove character ')'\r\n            vert_str_lst = vert_str_lst.split(\", \")\r\n\r\n            line_algebra_lst = []\r\n            for i in range(0, len(vert_str_lst)):\r\n\r\n                pt_str_lst = vert_str_lst[i].split(\" \")\r\n                line_algebra_lst.append([ float(pt_str) for pt_str in pt_str_lst ])\r\n            geo_algebra_lst.append(line_algebra_lst)\r\n\r\n        if ( geo_name_num.find('POLYGON') != -1 or \r\n            geo_name_num.find('Polygon') != -1 ):\r\n\r\n            wkt_data_lst = geo_wkt_data.split(\"((\")[1] # remove title 'POLYGON Z'\r\n            vert_str_lst = wkt_data_lst\r\n            vert_str_lst = vert_str_lst.replace( \")\", \"\" ) # remove character ')'\r\n            vert_str_lst = vert_str_lst.replace( \"(\", \"\" ) # remove character '('\r\n            vert_str_lst = vert_str_lst.split(\", \")\r\n\r\n            face_algebra_lst = []\r\n            for i in range(0, len(vert_str_lst)-1): # last point not included\r\n\r\n                pt_str_lst = vert_str_lst[i].split(\" \")\r\n                face_algebra_lst.append([ float(pt_str) for pt_str in pt_str_lst ])\r\n            geo_algebra_lst.append(face_algebra_lst)\r\n\r\n        if ( geo_name_num.find('MULTIPOLYGON') != -1 or\r\n            geo_name_num.find('Multipolygon') != -1  or\r\n            geo_name_num.find('CUBE') != -1 or\r\n            geo_name_num.find('Cube') != -1 or\r\n            geo_name_num.find('SPHERE') != -1 or\r\n            geo_name_num.find('Sphere') != -1 ):\r\n\r\n            wkt_data_lst = geo_wkt_data.split(\"(((\")[1] # remove title 'MULTIPOLYGON Z'\r\n            face_str_lst = wkt_data_lst.split(\"), \")\r\n\r\n            face_algebra_lst = []\r\n            for face_str in face_str_lst:\r\n                vert_str_lst = face_str.replace( \")\", \"\" ) # remove character ')'\r\n                vert_str_lst = vert_str_lst.replace( \"(\", \"\" ) # remove character '('\r\n                vert_str_lst = vert_str_lst.split(\", \")\r\n\r\n                pt_algebra_lst = []\r\n                for i in range(0, len(vert_str_lst)-1): # last point not included\r\n\r\n                    pt_str_lst = vert_str_lst[i].split(\" \")\r\n                        \r\n                    pt_algebra = [ float(pt_str) for pt_str in pt_str_lst ]\r\n                    pt_algebra_lst.append(pt_algebra)\r\n\r\n                face_algebra_lst.append(pt_algebra_lst)\r\n            geo_algebra_lst = face_algebra_lst\r\n\r\n        if geo_name_num not in geo_dict.keys():\r\n            geo_dict[geo_name_num] = geo_algebra_lst\r\n    return geo_dict\r\n    \r\n######################################################\r\njson_file = {}\r\nif IN[0]:\r\n    try:\r\n        dir = \"C:\\\\Users\\\\yhe\\\\Documents\\\\Developer\\\\Repo\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\rdf\\\\xxl3DScene.rdf\"\r\n        json_file = rdfParsing2GeoData(dir)\r\n    except:\r\n        ctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\n\r\n######################### Output ##########################\r\nOUT = json_file\r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a594b4946d004034804f1bedacfb0117",
      "Inputs": [
        {
          "Id": "977285870d004598ad201aceca0be828",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7d9a00974484a40a656e605f1ecd39b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "9ec25572ee8e43ffbd3ba38605b2eedb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93aae28ddd7444e9b4e2ddc2846612df",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport json\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\ndir = \"C:\\\\Users\\\\yhe\\\\Documents\\\\Developer\\\\Repo\\\\ExtendingJena\\\\src\\\\main\\\\resources\\\\JSON\\\\xxl3DScene.json\"\r\nwarn_str = '<.json> File or File Path does not exist.'\r\n\r\n\r\njson_file = IN[0]\r\nswitch_writer = IN[1]\r\n\r\nres = False\r\n\r\nif switch_writer:\r\n    try: \r\n        with open(dir, 'w') as fp:\r\n            json.dump(json_file, fp, sort_keys=True, indent=4)\r\n        res = True\r\n    except:\r\n        ctypes.windll.user32.MessageBoxW(0, warn_str, 'Input Exception',1)\r\nOUT = res",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "591a22a6b8ba48e6a2feba37c0d6bdc6",
      "Inputs": [
        {
          "Id": "1d70c6bf1fa44dc1b2ee41f89f12b021",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c8eade2933345a785f0beff865e6f5b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "924b8bd135e940e28b56ee15b050b0ef",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "835c18ac8dca47699096b4d67ebdb16d",
      "Inputs": [
        {
          "Id": "1e12eb8d9e844b8bac1130d6a6e0715c",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe9c0d893bd24d2dba5cac6d70b156cc",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "9e6a623c31214ec7a86d96dce9d36894",
      "End": "77bc87c15e0546b0a908a7568c2c03bf",
      "Id": "526baebac1aa46cd9758d264da03620f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "949291cdd50249a388dcd7b15fdc6e59",
      "Id": "9251985f228d4dfea1fec293f4630d7f"
    },
    {
      "Start": "0eba4e25d56d42f99f6cd7d1d4848abe",
      "End": "28406ff61ced4b458435eba731a4fefc",
      "Id": "195068a61adf47b09f377ba12b652430"
    },
    {
      "Start": "2c04ea2cfa9c4fa68b7cfd048e8d53a6",
      "End": "e7239c6019dd442e94088e46108327f5",
      "Id": "03bdd381458d450f8ba8592041ac9b36"
    },
    {
      "Start": "8bbd33f439eb4c1ea76d5b4863a65de8",
      "End": "b1c734acd6cd42a8a12c95047633db6a",
      "Id": "c5723a7376674a2585a10265df162304"
    },
    {
      "Start": "e353654a2d624523b843b76fc1b26eac",
      "End": "3dd15c6a7ab447d2bb0a1ceb5546319b",
      "Id": "e94172a889874391bd616cb9f0858b2c"
    },
    {
      "Start": "3aea9da347654932aa87ba43fe0a3f42",
      "End": "fe5985acf0cd4a6aafecc026805c66ea",
      "Id": "220f7f728ba74abebec777ccb6c7433c"
    },
    {
      "Start": "5fe36685da954660a004fb6cb7cd2e82",
      "End": "ed6464b138724d0181567f790d503ba9",
      "Id": "7f60a7eda6d24006aa5d17b56eef9f45"
    },
    {
      "Start": "28ec952b8c534477af8a2d155982a262",
      "End": "0bca9ddb0fc7416a8910320ba64cc086",
      "Id": "43eb2fe7d20c4db98f32ab00f3b5f642"
    },
    {
      "Start": "608c5793ace947c5a5a77c1190e48361",
      "End": "878e021702b140fab60601c5718d1a24",
      "Id": "5be447503c564ee0ac334ff45274693e"
    },
    {
      "Start": "781fcb4195b84639946d3e5b2f931bbb",
      "End": "46a3b423c77747f4a0d1008d648a03ac",
      "Id": "0ed6c57250844177933398151fb03647"
    },
    {
      "Start": "fdb8567c84eb4afaafbdf30e0e106dd2",
      "End": "943982f8da9b425996dcc1273478a2e0",
      "Id": "b897c8f7c7904c33b586e427b156da66"
    },
    {
      "Start": "400bcf4ffdda48e9bb00243cebdd7f54",
      "End": "dcabbbb6db9f479bbfd19b9899eef3f5",
      "Id": "fdf31858a2074edfa6a702d8fe7ceeed"
    },
    {
      "Start": "57159d27bec049a8a2866d4e12adf284",
      "End": "43b45844e3c8420d97926d7e524b33b7",
      "Id": "51fea2b0cdae4793b7b5e01c3f58d543"
    },
    {
      "Start": "ab30e4972dee4b53b8c95c8e222a6ccd",
      "End": "2fcd0388ae9b49c999f225a3ef51d25c",
      "Id": "b532934f0cec4274b637159ef1b4082c"
    },
    {
      "Start": "28d8dfafd9b84e6a9f2e7caf64469b7c",
      "End": "ad16ba208c4a435eb9c34e51e4bb261f",
      "Id": "c734f4813c6743ada61c1ef707840e40"
    },
    {
      "Start": "45aaf9ee46ce4e6b9b360474e42a00f7",
      "End": "cc24c35c21394c76905680aa0f6f12be",
      "Id": "29e2ae9dcc914571a5b8205a13c4da66"
    },
    {
      "Start": "439de5740ce84a57a04ad937f1fd2850",
      "End": "98ba3777f47f4ac997afb221c08a805d",
      "Id": "fab9ddb5e7594ffe890b85d213247275"
    },
    {
      "Start": "7b839acc4d3f42a787f66ce06678200b",
      "End": "50de933f946b4adf9404500c7659cc24",
      "Id": "f0f625a38a854a95bf5cdae6535b6ff2"
    },
    {
      "Start": "769a888447694d52843db4a01a65b6da",
      "End": "ab6ed296fc8940a9b02d84cccfd388f2",
      "Id": "9ed16bddc74148e79441e963cb516090"
    },
    {
      "Start": "1e9c417c0e1c4d9a97636288cf39e80e",
      "End": "7b5fb97d61454deabeca57cd9107959c",
      "Id": "87464f76ab60488ab004f0941555a213"
    },
    {
      "Start": "88af41fe43f9439eaf454f8435dc2439",
      "End": "e96bbdfa8caf47a5a30a41e6581c4821",
      "Id": "9b853b9e1e4e4873a245e351e5ccd6b0"
    },
    {
      "Start": "a16f8cede777454c92f9c9c9f93cb514",
      "End": "ad8d59584a5e4bb2910046f3b59ce971",
      "Id": "f5bd8c6084644fc2a25296d6e818df5f"
    },
    {
      "Start": "a16f8cede777454c92f9c9c9f93cb514",
      "End": "5d31176e058f41f082326ad3ad061fd1",
      "Id": "3cb8f1a4228e412ebc15ab3a551b1c0b"
    },
    {
      "Start": "7f1501f6b7d240558791f76b98319eed",
      "End": "363ffcc16a0542f0a0aea21711c7d480",
      "Id": "2bb24f55e2d54b4d91249b92e31a368b"
    },
    {
      "Start": "a07aaf905fe740b6a7e84957029c119d",
      "End": "d6777c60ad04419ea6586529cbd5a499",
      "Id": "fde0ab3f3f644f6d8dabe4c35314a011"
    },
    {
      "Start": "8f2378090418471e945d35be8e02cc60",
      "End": "a5f598d2e023499d9bf0355794e7c82f",
      "Id": "78dfab9e734f4456be6ac89d122c31ec"
    },
    {
      "Start": "fa0731a7592e480db5494df02ee3e51e",
      "End": "5d142a883af646e184dd9e9f73e6e93d",
      "Id": "ef3276b026a042549cf3a003381daf9a"
    },
    {
      "Start": "61c1fcf384124f7889d1e2211f036a3e",
      "End": "4c95af32e5654724a7b923a7a9e60ce3",
      "Id": "1f640b22df294005ab4bb857f54c44ba"
    },
    {
      "Start": "aaed95d7801b4ea29dc18a422c775495",
      "End": "0a02505cff52471aaff4ecb33f07f20f",
      "Id": "3e51bedd6834431b96df05ac635f9a37"
    },
    {
      "Start": "1e42b32d05b34c40855c7c0d90c56f74",
      "End": "bfc092bee3e443dd98f2e7b59d5befc7",
      "Id": "9412c4ba910c427583fc2c96296aeda1"
    },
    {
      "Start": "1e42b32d05b34c40855c7c0d90c56f74",
      "End": "684eadea5bf24dc3b236131d110b1835",
      "Id": "5cba3d60ee034fbca11f167e0d6872b5"
    },
    {
      "Start": "26144c8263bc4f648848aebcb83e688f",
      "End": "7435e184bee547cc84e6005d9da7efb8",
      "Id": "2ae8c8db860f4543bf370032a4005ff0"
    },
    {
      "Start": "c1ccacc93cae4053805f508d26891149",
      "End": "01ab0da28f9d4d13ad5d143529754337",
      "Id": "e481087e3fbb4059b4c078605f233172"
    },
    {
      "Start": "f9159692e5274ac3bf74ca665b285e6f",
      "End": "ced4b62b819d4a19a1d892b07dca1e3a",
      "Id": "8a53f996f32a49fc8520624ce2d5a60a"
    },
    {
      "Start": "f9159692e5274ac3bf74ca665b285e6f",
      "End": "45a4f4a5baff41a09d83cb48763f18e3",
      "Id": "9a949db342ac4bf7842f813411c3df09"
    },
    {
      "Start": "01bbd51d12a94a31a6584ab1f4ca2d98",
      "End": "c6982d49eb6743ff9574c168e582c886",
      "Id": "d1f9a76c7d8a40e8ab8a3ec6b73ad6bf"
    },
    {
      "Start": "4a43c16ce1ec44c4b1f6a0913ac553ce",
      "End": "78f518cfd1014475a8d546f1dcea56e8",
      "Id": "c199512a29d64f849b68e3248e830e4f"
    },
    {
      "Start": "f7d9a00974484a40a656e605f1ecd39b",
      "End": "1d70c6bf1fa44dc1b2ee41f89f12b021",
      "Id": "62f102060d0a4b2f9cca28230383a3a5"
    },
    {
      "Start": "93aae28ddd7444e9b4e2ddc2846612df",
      "End": "977285870d004598ad201aceca0be828",
      "Id": "63b63ea16cdf4545b195c80bb43287d9"
    },
    {
      "Start": "93aae28ddd7444e9b4e2ddc2846612df",
      "End": "5c8eade2933345a785f0beff865e6f5b",
      "Id": "c547550b8c69486a99116363237a88f2"
    },
    {
      "Start": "924b8bd135e940e28b56ee15b050b0ef",
      "End": "1e12eb8d9e844b8bac1130d6a6e0715c",
      "Id": "eb9e6b7a300340f89787fc8da6588406"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "MeshToolkit",
      "Version": "3.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "06493a8f57ad4782bdb9ae1e15d0525d",
        "99ce511072864923816a141a10b068e5",
        "991bc6014911493e84623456f751195a",
        "67f1909d2ab7455c943e505eb46f0258"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.8.0.2471",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 42.6339111328125,
      "EyeY": 23.710483551025391,
      "EyeZ": 174.40692138671875,
      "LookX": -66.269119262695313,
      "LookY": -0.18286514282226563,
      "LookZ": -173.43075561523438,
      "UpX": 0.070509076118469238,
      "UpY": 0.98246902227401733,
      "UpZ": 0.17257751524448395
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "FileSystem.FileExists",
        "Id": "9c3c9a9cb6f048cf9f7f1435208d010b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -676.47193885982927,
        "Y": 1670.985684164333
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "963c470715ed4f5b815704780b1b964a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -945.15924966689067,
        "Y": 1670.9594011710583
      },
      {
        "ShowGeometry": true,
        "Name": "List Viewer",
        "Id": "aef00e0d9cbc4c89bc624f16784d0389",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 77.852944058877483,
        "Y": 1609.1304509445215
      },
      {
        "ShowGeometry": true,
        "Name": "XML Parser",
        "Id": "3caf2c5d39a14bb8a8d117a845916766",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -446.53357970379625,
        "Y": 1671.2702372010363
      },
      {
        "ShowGeometry": true,
        "Name": "Polygon1-Name",
        "Id": "c5ca528b4d9f4975bf11edd564038195",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1622.6064824747875,
        "Y": 2876.6327963595731
      },
      {
        "ShowGeometry": true,
        "Name": "Notes",
        "Id": "29d4977ffd5a4fbc99b46521c03c224b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1382.7178710663081,
        "Y": 1545.03428040798
      },
      {
        "ShowGeometry": true,
        "Name": "Switcher",
        "Id": "707d96c4b0c447fab11fd20d86754199",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -263.8320321017618,
        "Y": 1677.2964341857676
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off - import",
        "Id": "3f57e74dd731444791e46505ab0dfb81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -447.33774490025735,
        "Y": 1603.2920239699674
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "6f5992239c4844a3884b639772e60a4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1843.7285227397324,
        "Y": 2901.1973925237062
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fe789f3241d045fa93cd43927766996a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1566.4923522654137,
        "Y": 2456.4890763039675
      },
      {
        "ShowGeometry": true,
        "Name": "Sphere.ByCenterPointRadius",
        "Id": "34c3ec044e2643248116b32cbc85bc9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2017.8495065329498,
        "Y": 2456.18257974897
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.ByGeometry",
        "Id": "06493a8f57ad4782bdb9ae1e15d0525d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2288.9955474415078,
        "Y": 2455.5894917374958
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.TriangleCentroids",
        "Id": "99ce511072864923816a141a10b068e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2692.0736641298085,
        "Y": 2459.3578885237775
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.Explode",
        "Id": "991bc6014911493e84623456f751195a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2705.8841714326377,
        "Y": 2716.8818613717644
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "1a9767da639d4cb083a8d568b124b464",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4032.3426638987539,
        "Y": 2717.4007680439008
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "ac7baec18464456eaf2c0d5b50d4030f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3152.5088750710961,
        "Y": 2477.1660778007408
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7dcb24a2ce40468685c26d7890aa99f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3607.2153390712028,
        "Y": 2560.2548206492552
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "4600ed00ce004c5ab079a769be303029",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3066.5174566067503,
        "Y": 2705.4243632229973
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "5f0e1deb219e45e28b2a6b9fa3e9792f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3580.7897446952516,
        "Y": 2780.5208560543924
      },
      {
        "ShowGeometry": true,
        "Name": "Mesh.Vertices",
        "Id": "67f1909d2ab7455c943e505eb46f0258",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3341.5480531576518,
        "Y": 2737.922570942922
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "80b16f3f20094a978114d38819afd778",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -670.1041361015964,
        "Y": 1854.9286344257509
      },
      {
        "ShowGeometry": true,
        "Name": "Geometry Selector",
        "Id": "c302d8cb07164d148faa4c41aaa1d95e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2068.8864034667622,
        "Y": 1961.8037460987998
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "fe320baea1a947dc9f3209b013ba191e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1585.1041719543116,
        "Y": 2235.43784199615
      },
      {
        "ShowGeometry": true,
        "Name": "Selection Board",
        "Id": "fb87db2584334ccaae2d4b50cf6a3ee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1563.4646610362333,
        "Y": 1920.7730874102322
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "cf3db25f6480433ebb3b8afa03322ecf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2320.1176955545725,
        "Y": 1955.38776776424
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "eee283b1c55244568a077e84693ca07b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2576.2891825120523,
        "Y": 1959.6601764965799
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "11aaf64f4c974045b73d59b169681833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3224.3768948555676,
        "Y": 2911.7122308559015
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "871f675867674a7785c7487d610873d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2916.5612734892538,
        "Y": 2856.4130810714923
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Parser",
        "Id": "da5cd7ec9968431b9c02ee6620412ada",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 467.67625567696132,
        "Y": 2159.5464831737268
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Loader",
        "Id": "47aeafe1cb99450cb9aab7def0b47fef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -571.67187730903674,
        "Y": 2159.4462311279049
      },
      {
        "ShowGeometry": true,
        "Name": "JSON-Base Viewer",
        "Id": "3cfb3fe3994b4566a2c99f8419182612",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -335.44214843419468,
        "Y": 2159.2345090482759
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "fa6983f6e1af4be3bcf56aea05aaddd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -937.09762748270077,
        "Y": 2159.38052070464
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off - loading JSON",
        "Id": "b048d5afe4c442b6944bf104390e697b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -943.08842269364823,
        "Y": 2411.3956036818122
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "c41c5d8ce1fb432c892d90a27d70ee0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 704.37211093402811,
        "Y": 2159.4817530045389
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off - Ground Truth",
        "Id": "5050387ca57e4e008dd9971ef30e2629",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -941.79420712429237,
        "Y": 2493.6373834169558
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off - Query Result",
        "Id": "09fd105ed35b432787de4f7ec72e8c0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.93620184261135,
        "Y": 2568.0776303462685
      },
      {
        "ShowGeometry": true,
        "Name": "List to Dict",
        "Id": "000ca572a653468cba6ba27813cb14b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 328.35109474204341,
        "Y": 1615.6107977837758
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Viewer",
        "Id": "bb34d26722024927908183f1ec37e9d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 588.49662920384219,
        "Y": 1677.6815322351194
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "363295086fd740c3beb3646509bd7c28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -937.40615477845654,
        "Y": 2302.4014348292249
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Loader",
        "Id": "41747d547b9c4b27931b3ca6e0215c61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -570.051369591825,
        "Y": 2302.6786125877261
      },
      {
        "ShowGeometry": true,
        "Name": "JSON-GroundTruth Viewer",
        "Id": "01862427cde34887b192d733a66de2c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -69.965220493519837,
        "Y": 2526.5077944359778
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "e6fa07009dc64b9d97d7557102086108",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 470.1513415186796,
        "Y": 2413.777784718874
      },
      {
        "ShowGeometry": true,
        "Name": "Accuracy Calculator",
        "Id": "d205bf66921949beb7be8002e1f79852",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -942.74466765542388,
        "Y": 3030.4192218782296
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6152757309134f8a8469cc9945423019",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -638.52389007835916,
        "Y": 3031.8417078338171
      },
      {
        "ShowGeometry": true,
        "Name": "RDF-JSON Converter",
        "Id": "a594b4946d004034804f1bedacfb0117",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3002.3664976797218,
        "Y": 1939.5905503857516
      },
      {
        "ShowGeometry": true,
        "Name": "On/Off",
        "Id": "9ec25572ee8e43ffbd3ba38605b2eedb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2793.9321352497541,
        "Y": 1955.6625224908248
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Writer",
        "Id": "591a22a6b8ba48e6a2feba37c0d6bdc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3242.4395272133415,
        "Y": 1952.7357594956611
      },
      {
        "ShowGeometry": true,
        "Name": "JSON Viewer",
        "Id": "835c18ac8dca47699096b4d67ebdb16d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3163.5682725538809,
        "Y": 2100.7923252599094
      }
    ],
    "Annotations": [
      {
        "Id": "3b23e7e8a50c49f58eeca893711b4716",
        "Title": "XML(query result) Import and Parsing",
        "Nodes": [
          "9c3c9a9cb6f048cf9f7f1435208d010b",
          "963c470715ed4f5b815704780b1b964a",
          "aef00e0d9cbc4c89bc624f16784d0389",
          "3caf2c5d39a14bb8a8d117a845916766",
          "707d96c4b0c447fab11fd20d86754199",
          "3f57e74dd731444791e46505ab0dfb81",
          "80b16f3f20094a978114d38819afd778",
          "000ca572a653468cba6ba27813cb14b1",
          "bb34d26722024927908183f1ec37e9d1"
        ],
        "Left": -955.15924966689067,
        "Top": 1550.2920239699674,
        "Width": 1731.655878870733,
        "Height": 413.63661045578351,
        "FontSize": 36.0,
        "InitialTop": 1603.2920239699674,
        "InitialHeight": 396.63661045578351,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "d60db286ae754d1389ec192a4464838f",
        "Title": "Geometry Selection",
        "Nodes": [
          "c302d8cb07164d148faa4c41aaa1d95e",
          "fe320baea1a947dc9f3209b013ba191e",
          "fb87db2584334ccaae2d4b50cf6a3ee0",
          "cf3db25f6480433ebb3b8afa03322ecf",
          "eee283b1c55244568a077e84693ca07b"
        ],
        "Left": 1553.4646610362333,
        "Top": 1881.7730874102322,
        "Width": 1140.824521475819,
        "Height": 421.66475458591776,
        "FontSize": 24.0,
        "InitialTop": 1920.7730874102322,
        "InitialHeight": 459.66475458591776,
        "TextblockHeight": 29.0,
        "Background": "#FF848484"
      },
      {
        "Id": "2aa977e44a5f45c0bbf3d9719e6ac3c1",
        "Title": "Sphere testing\r\n",
        "Nodes": [
          "c5ca528b4d9f4975bf11edd564038195",
          "6f5992239c4844a3884b639772e60a4c",
          "fe789f3241d045fa93cd43927766996a",
          "34c3ec044e2643248116b32cbc85bc9f",
          "06493a8f57ad4782bdb9ae1e15d0525d",
          "99ce511072864923816a141a10b068e5",
          "991bc6014911493e84623456f751195a",
          "1a9767da639d4cb083a8d568b124b464",
          "ac7baec18464456eaf2c0d5b50d4030f",
          "7dcb24a2ce40468685c26d7890aa99f8",
          "4600ed00ce004c5ab079a769be303029",
          "5f0e1deb219e45e28b2a6b9fa3e9792f",
          "67f1909d2ab7455c943e505eb46f0258",
          "11aaf64f4c974045b73d59b169681833",
          "871f675867674a7785c7487d610873d9"
        ],
        "Left": 1556.4923522654137,
        "Top": 2388.0894917374958,
        "Width": 2695.8503116333404,
        "Height": 773.10790078621039,
        "FontSize": 24.0,
        "InitialTop": 2455.5894917374958,
        "InitialHeight": 601.12273911840566,
        "TextblockHeight": 57.5,
        "Background": "#FF848484"
      },
      {
        "Id": "e1cae2e0c07d41daad9494a8ca0df2b0",
        "Title": "JSON Import and Parsing",
        "Nodes": [
          "da5cd7ec9968431b9c02ee6620412ada",
          "3cfb3fe3994b4566a2c99f8419182612",
          "47aeafe1cb99450cb9aab7def0b47fef",
          "b048d5afe4c442b6944bf104390e697b",
          "fa6983f6e1af4be3bcf56aea05aaddd4",
          "c41c5d8ce1fb432c892d90a27d70ee0a",
          "5050387ca57e4e008dd9971ef30e2629",
          "09fd105ed35b432787de4f7ec72e8c0b",
          "01862427cde34887b192d733a66de2c9",
          "363295086fd740c3beb3646509bd7c28",
          "41747d547b9c4b27931b3ca6e0215c61",
          "e6fa07009dc64b9d97d7557102086108"
        ],
        "Left": -953.08842269364823,
        "Top": 2120.2345090482759,
        "Width": 1957.4605336276763,
        "Height": 574.27328538770189,
        "FontSize": 24.0,
        "InitialTop": 2159.2345090482759,
        "InitialHeight": 553.84312129799264,
        "TextblockHeight": 29.0,
        "Background": "#FF90EE90"
      },
      {
        "Id": "414485b7dc084b4a95524a8e1b3b60f4",
        "Title": "Accuracy Calculation",
        "Nodes": [
          "d205bf66921949beb7be8002e1f79852",
          "6152757309134f8a8469cc9945423019"
        ],
        "Left": -952.74466765542388,
        "Top": 2977.4192218782296,
        "Width": 610.22077757706472,
        "Height": 191.42248595558749,
        "FontSize": 36.0,
        "InitialTop": 3030.4192218782296,
        "InitialHeight": 146.42248595558749,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "06b97a14c0c94522ba7a55a381a424f0",
        "Title": "RDF-to-JSON",
        "Nodes": [
          "a594b4946d004034804f1bedacfb0117",
          "9ec25572ee8e43ffbd3ba38605b2eedb",
          "591a22a6b8ba48e6a2feba37c0d6bdc6",
          "835c18ac8dca47699096b4d67ebdb16d"
        ],
        "Left": 2783.9321352497541,
        "Top": 1886.5905503857516,
        "Width": 600.00739196358745,
        "Height": 323.20177487415776,
        "FontSize": 36.0,
        "InitialTop": 1939.5905503857516,
        "InitialHeight": 306.20177487415776,
        "TextblockHeight": 43.0,
        "Background": "#FF848484"
      }
    ],
    "X": 1002.1648561282102,
    "Y": -2259.8341600307949,
    "Zoom": 0.90159108502497942
  }
}